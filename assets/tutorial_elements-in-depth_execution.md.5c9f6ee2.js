import{_ as s,o as e,c as a,a as n}from"./app.00d5aed4.js";const y=JSON.parse('{"title":"Execution","description":"","frontmatter":{},"headers":[{"level":2,"title":"Resources","slug":"resources","link":"#resources","children":[]},{"level":2,"title":"Schedules","slug":"schedules","link":"#schedules","children":[]}],"relativePath":"tutorial/elements-in-depth/execution.md"}'),l={name:"tutorial/elements-in-depth/execution.md"},t=n(`<h1 id="execution" tabindex="-1">Execution <a class="header-anchor" href="#execution" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">Coming soon</p><p>This section is currently under construction</p></div><p>Using a queue system like <a href="https://slurm.schedmd.com/documentation.html" target="_blank" rel="noreferrer">Slurm</a> may be as simple as:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myproject.execution.slurm</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    experiment</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">launch</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><p>Delegating the execution to an external runner like <a href="https://www.open-mpi.org/" target="_blank" rel="noreferrer">MPI</a> may look like this:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myproject.execution.mpi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}):</span></span>
<span class="line"><span style="color:#A6ACCD;">    experiment</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">launch</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><h2 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-hidden="true">#</a></h2><h2 id="schedules" tabindex="-1">Schedules <a class="header-anchor" href="#schedules" aria-hidden="true">#</a></h2>`,8),o=[t];function p(c,r,i,h,d,u){return e(),a("div",null,o)}const D=s(l,[["render",p]]);export{y as __pageData,D as default};
