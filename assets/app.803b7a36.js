function zt(e,a){const n=Object.create(null),t=e.split(",");for(let i=0;i<t.length;i++)n[t[i]]=!0;return a?i=>!!n[i.toLowerCase()]:i=>!!n[i]}function Gn(e){if(K(e)){const a={};for(let n=0;n<e.length;n++){const t=e[n],i=ve(t)?zo(t):Gn(t);if(i)for(const l in i)a[l]=i[l]}return a}else{if(ve(e))return e;if(fe(e))return e}}const Ao=/;(?![^(]*\))/g,Io=/:([^]+)/,No=/\/\*.*?\*\//gs;function zo(e){const a={};return e.replace(No,"").split(Ao).forEach(n=>{if(n){const t=n.split(Io);t.length>1&&(a[t[0].trim()]=t[1].trim())}}),a}function _e(e){let a="";if(ve(e))a=e;else if(K(e))for(let n=0;n<e.length;n++){const t=_e(e[n]);t&&(a+=t+" ")}else if(fe(e))for(const n in e)e[n]&&(a+=n+" ");return a.trim()}const Oo="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Bo=zt(Oo);function hl(e){return!!e||e===""}const oe=e=>ve(e)?e:e==null?"":K(e)||fe(e)&&(e.toString===bl||!Z(e.toString))?JSON.stringify(e,ul,2):String(e),ul=(e,a)=>a&&a.__v_isRef?ul(e,a.value):Na(a)?{[`Map(${a.size})`]:[...a.entries()].reduce((n,[t,i])=>(n[`${t} =>`]=i,n),{})}:dl(a)?{[`Set(${a.size})`]:[...a.values()]}:fe(a)&&!K(a)&&!_l(a)?String(a):a,ge={},Ia=[],Ue=()=>{},Ho=()=>!1,Go=/^on[^a-z]/,fn=e=>Go.test(e),Ot=e=>e.startsWith("onUpdate:"),ye=Object.assign,Bt=(e,a)=>{const n=e.indexOf(a);n>-1&&e.splice(n,1)},Do=Object.prototype.hasOwnProperty,le=(e,a)=>Do.call(e,a),K=Array.isArray,Na=e=>Dn(e)==="[object Map]",dl=e=>Dn(e)==="[object Set]",Z=e=>typeof e=="function",ve=e=>typeof e=="string",Ht=e=>typeof e=="symbol",fe=e=>e!==null&&typeof e=="object",pl=e=>fe(e)&&Z(e.then)&&Z(e.catch),bl=Object.prototype.toString,Dn=e=>bl.call(e),Uo=e=>Dn(e).slice(8,-1),_l=e=>Dn(e)==="[object Object]",Gt=e=>ve(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,an=zt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Un=e=>{const a=Object.create(null);return n=>a[n]||(a[n]=e(n))},qo=/-(\w)/g,Xe=Un(e=>e.replace(qo,(a,n)=>n?n.toUpperCase():"")),Ko=/\B([A-Z])/g,Ja=Un(e=>e.replace(Ko,"-$1").toLowerCase()),qn=Un(e=>e.charAt(0).toUpperCase()+e.slice(1)),mt=Un(e=>e?`on${qn(e)}`:""),rn=(e,a)=>!Object.is(e,a),st=(e,a)=>{for(let n=0;n<e.length;n++)e[n](a)},Fn=(e,a,n)=>{Object.defineProperty(e,a,{configurable:!0,enumerable:!1,value:n})},Wo=e=>{const a=parseFloat(e);return isNaN(a)?e:a},Jo=e=>{const a=ve(e)?Number(e):NaN;return isNaN(a)?e:a};let xi;const Yo=()=>xi||(xi=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let Ve;class Qo{constructor(a=!1){this.detached=a,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Ve,!a&&Ve&&(this.index=(Ve.scopes||(Ve.scopes=[])).push(this)-1)}get active(){return this._active}run(a){if(this._active){const n=Ve;try{return Ve=this,a()}finally{Ve=n}}}on(){Ve=this}off(){Ve=this.parent}stop(a){if(this._active){let n,t;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].stop();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!a){const i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.parent=void 0,this._active=!1}}}function Xo(e,a=Ve){a&&a.active&&a.effects.push(e)}function fl(){return Ve}function Zo(e){Ve&&Ve.cleanups.push(e)}const Dt=e=>{const a=new Set(e);return a.w=0,a.n=0,a},gl=e=>(e.w&ba)>0,kl=e=>(e.n&ba)>0,ec=({deps:e})=>{if(e.length)for(let a=0;a<e.length;a++)e[a].w|=ba},ac=e=>{const{deps:a}=e;if(a.length){let n=0;for(let t=0;t<a.length;t++){const i=a[t];gl(i)&&!kl(i)?i.delete(e):a[n++]=i,i.w&=~ba,i.n&=~ba}a.length=n}},xt=new WeakMap;let en=0,ba=1;const vt=30;let Ge;const Ma=Symbol(""),Et=Symbol("");class Ut{constructor(a,n=null,t){this.fn=a,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,Xo(this,t)}run(){if(!this.active)return this.fn();let a=Ge,n=da;for(;a;){if(a===this)return;a=a.parent}try{return this.parent=Ge,Ge=this,da=!0,ba=1<<++en,en<=vt?ec(this):vi(this),this.fn()}finally{en<=vt&&ac(this),ba=1<<--en,Ge=this.parent,da=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Ge===this?this.deferStop=!0:this.active&&(vi(this),this.onStop&&this.onStop(),this.active=!1)}}function vi(e){const{deps:a}=e;if(a.length){for(let n=0;n<a.length;n++)a[n].delete(e);a.length=0}}let da=!0;const xl=[];function Ya(){xl.push(da),da=!1}function Qa(){const e=xl.pop();da=e===void 0?!0:e}function Fe(e,a,n){if(da&&Ge){let t=xt.get(e);t||xt.set(e,t=new Map);let i=t.get(n);i||t.set(n,i=Dt()),vl(i)}}function vl(e,a){let n=!1;en<=vt?kl(e)||(e.n|=ba,n=!gl(e)):n=!e.has(Ge),n&&(e.add(Ge),Ge.deps.push(e))}function ta(e,a,n,t,i,l){const o=xt.get(e);if(!o)return;let c=[];if(a==="clear")c=[...o.values()];else if(n==="length"&&K(e)){const r=Number(t);o.forEach((s,u)=>{(u==="length"||u>=r)&&c.push(s)})}else switch(n!==void 0&&c.push(o.get(n)),a){case"add":K(e)?Gt(n)&&c.push(o.get("length")):(c.push(o.get(Ma)),Na(e)&&c.push(o.get(Et)));break;case"delete":K(e)||(c.push(o.get(Ma)),Na(e)&&c.push(o.get(Et)));break;case"set":Na(e)&&c.push(o.get(Ma));break}if(c.length===1)c[0]&&yt(c[0]);else{const r=[];for(const s of c)s&&r.push(...s);yt(Dt(r))}}function yt(e,a){const n=K(e)?e:[...e];for(const t of n)t.computed&&Ei(t);for(const t of n)t.computed||Ei(t)}function Ei(e,a){(e!==Ge||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const nc=zt("__proto__,__v_isRef,__isVue"),El=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Ht)),tc=qt(),ic=qt(!1,!0),lc=qt(!0),yi=oc();function oc(){const e={};return["includes","indexOf","lastIndexOf"].forEach(a=>{e[a]=function(...n){const t=re(this);for(let l=0,o=this.length;l<o;l++)Fe(t,"get",l+"");const i=t[a](...n);return i===-1||i===!1?t[a](...n.map(re)):i}}),["push","pop","shift","unshift","splice"].forEach(a=>{e[a]=function(...n){Ya();const t=re(this)[a].apply(this,n);return Qa(),t}}),e}function cc(e){const a=re(this);return Fe(a,"has",e),a.hasOwnProperty(e)}function qt(e=!1,a=!1){return function(t,i,l){if(i==="__v_isReactive")return!e;if(i==="__v_isReadonly")return e;if(i==="__v_isShallow")return a;if(i==="__v_raw"&&l===(e?a?yc:Pl:a?jl:Sl).get(t))return t;const o=K(t);if(!e){if(o&&le(yi,i))return Reflect.get(yi,i,l);if(i==="hasOwnProperty")return cc}const c=Reflect.get(t,i,l);return(Ht(i)?El.has(i):nc(i))||(e||Fe(t,"get",i),a)?c:Pe(c)?o&&Gt(i)?c:c.value:fe(c)?e?Jt(c):Wn(c):c}}const rc=yl(),mc=yl(!0);function yl(e=!1){return function(n,t,i,l){let o=n[t];if(qa(o)&&Pe(o)&&!Pe(i))return!1;if(!e&&(!Tn(i)&&!qa(i)&&(o=re(o),i=re(i)),!K(n)&&Pe(o)&&!Pe(i)))return o.value=i,!0;const c=K(n)&&Gt(t)?Number(t)<n.length:le(n,t),r=Reflect.set(n,t,i,l);return n===re(l)&&(c?rn(i,o)&&ta(n,"set",t,i):ta(n,"add",t,i)),r}}function sc(e,a){const n=le(e,a);e[a];const t=Reflect.deleteProperty(e,a);return t&&n&&ta(e,"delete",a,void 0),t}function hc(e,a){const n=Reflect.has(e,a);return(!Ht(a)||!El.has(a))&&Fe(e,"has",a),n}function uc(e){return Fe(e,"iterate",K(e)?"length":Ma),Reflect.ownKeys(e)}const Cl={get:tc,set:rc,deleteProperty:sc,has:hc,ownKeys:uc},dc={get:lc,set(e,a){return!0},deleteProperty(e,a){return!0}},pc=ye({},Cl,{get:ic,set:mc}),Kt=e=>e,Kn=e=>Reflect.getPrototypeOf(e);function vn(e,a,n=!1,t=!1){e=e.__v_raw;const i=re(e),l=re(a);n||(a!==l&&Fe(i,"get",a),Fe(i,"get",l));const{has:o}=Kn(i),c=t?Kt:n?Qt:mn;if(o.call(i,a))return c(e.get(a));if(o.call(i,l))return c(e.get(l));e!==i&&e.get(a)}function En(e,a=!1){const n=this.__v_raw,t=re(n),i=re(e);return a||(e!==i&&Fe(t,"has",e),Fe(t,"has",i)),e===i?n.has(e):n.has(e)||n.has(i)}function yn(e,a=!1){return e=e.__v_raw,!a&&Fe(re(e),"iterate",Ma),Reflect.get(e,"size",e)}function Ci(e){e=re(e);const a=re(this);return Kn(a).has.call(a,e)||(a.add(e),ta(a,"add",e,e)),this}function Si(e,a){a=re(a);const n=re(this),{has:t,get:i}=Kn(n);let l=t.call(n,e);l||(e=re(e),l=t.call(n,e));const o=i.call(n,e);return n.set(e,a),l?rn(a,o)&&ta(n,"set",e,a):ta(n,"add",e,a),this}function ji(e){const a=re(this),{has:n,get:t}=Kn(a);let i=n.call(a,e);i||(e=re(e),i=n.call(a,e)),t&&t.call(a,e);const l=a.delete(e);return i&&ta(a,"delete",e,void 0),l}function Pi(){const e=re(this),a=e.size!==0,n=e.clear();return a&&ta(e,"clear",void 0,void 0),n}function Cn(e,a){return function(t,i){const l=this,o=l.__v_raw,c=re(o),r=a?Kt:e?Qt:mn;return!e&&Fe(c,"iterate",Ma),o.forEach((s,u)=>t.call(i,r(s),r(u),l))}}function Sn(e,a,n){return function(...t){const i=this.__v_raw,l=re(i),o=Na(l),c=e==="entries"||e===Symbol.iterator&&o,r=e==="keys"&&o,s=i[e](...t),u=n?Kt:a?Qt:mn;return!a&&Fe(l,"iterate",r?Et:Ma),{next(){const{value:b,done:_}=s.next();return _?{value:b,done:_}:{value:c?[u(b[0]),u(b[1])]:u(b),done:_}},[Symbol.iterator](){return this}}}}function ca(e){return function(...a){return e==="delete"?!1:this}}function bc(){const e={get(l){return vn(this,l)},get size(){return yn(this)},has:En,add:Ci,set:Si,delete:ji,clear:Pi,forEach:Cn(!1,!1)},a={get(l){return vn(this,l,!1,!0)},get size(){return yn(this)},has:En,add:Ci,set:Si,delete:ji,clear:Pi,forEach:Cn(!1,!0)},n={get(l){return vn(this,l,!0)},get size(){return yn(this,!0)},has(l){return En.call(this,l,!0)},add:ca("add"),set:ca("set"),delete:ca("delete"),clear:ca("clear"),forEach:Cn(!0,!1)},t={get(l){return vn(this,l,!0,!0)},get size(){return yn(this,!0)},has(l){return En.call(this,l,!0)},add:ca("add"),set:ca("set"),delete:ca("delete"),clear:ca("clear"),forEach:Cn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{e[l]=Sn(l,!1,!1),n[l]=Sn(l,!0,!1),a[l]=Sn(l,!1,!0),t[l]=Sn(l,!0,!0)}),[e,n,a,t]}const[_c,fc,gc,kc]=bc();function Wt(e,a){const n=a?e?kc:gc:e?fc:_c;return(t,i,l)=>i==="__v_isReactive"?!e:i==="__v_isReadonly"?e:i==="__v_raw"?t:Reflect.get(le(n,i)&&i in t?n:t,i,l)}const xc={get:Wt(!1,!1)},vc={get:Wt(!1,!0)},Ec={get:Wt(!0,!1)},Sl=new WeakMap,jl=new WeakMap,Pl=new WeakMap,yc=new WeakMap;function Cc(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Sc(e){return e.__v_skip||!Object.isExtensible(e)?0:Cc(Uo(e))}function Wn(e){return qa(e)?e:Yt(e,!1,Cl,xc,Sl)}function jc(e){return Yt(e,!1,pc,vc,jl)}function Jt(e){return Yt(e,!0,dc,Ec,Pl)}function Yt(e,a,n,t,i){if(!fe(e)||e.__v_raw&&!(a&&e.__v_isReactive))return e;const l=i.get(e);if(l)return l;const o=Sc(e);if(o===0)return e;const c=new Proxy(e,o===2?t:n);return i.set(e,c),c}function za(e){return qa(e)?za(e.__v_raw):!!(e&&e.__v_isReactive)}function qa(e){return!!(e&&e.__v_isReadonly)}function Tn(e){return!!(e&&e.__v_isShallow)}function wl(e){return za(e)||qa(e)}function re(e){const a=e&&e.__v_raw;return a?re(a):e}function nn(e){return Fn(e,"__v_skip",!0),e}const mn=e=>fe(e)?Wn(e):e,Qt=e=>fe(e)?Jt(e):e;function $l(e){da&&Ge&&(e=re(e),vl(e.dep||(e.dep=Dt())))}function Ml(e,a){e=re(e);const n=e.dep;n&&yt(n)}function Pe(e){return!!(e&&e.__v_isRef===!0)}function me(e){return Rl(e,!1)}function Pc(e){return Rl(e,!0)}function Rl(e,a){return Pe(e)?e:new wc(e,a)}class wc{constructor(a,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?a:re(a),this._value=n?a:mn(a)}get value(){return $l(this),this._value}set value(a){const n=this.__v_isShallow||Tn(a)||qa(a);a=n?a:re(a),rn(a,this._rawValue)&&(this._rawValue=a,this._value=n?a:mn(a),Ml(this))}}function p(e){return Pe(e)?e.value:e}const $c={get:(e,a,n)=>p(Reflect.get(e,a,n)),set:(e,a,n,t)=>{const i=e[a];return Pe(i)&&!Pe(n)?(i.value=n,!0):Reflect.set(e,a,n,t)}};function Fl(e){return za(e)?e:new Proxy(e,$c)}var Tl;class Mc{constructor(a,n,t,i){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this[Tl]=!1,this._dirty=!0,this.effect=new Ut(a,()=>{this._dirty||(this._dirty=!0,Ml(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!i,this.__v_isReadonly=t}get value(){const a=re(this);return $l(a),(a._dirty||!a._cacheable)&&(a._dirty=!1,a._value=a.effect.run()),a._value}set value(a){this._setter(a)}}Tl="__v_isReadonly";function Rc(e,a,n=!1){let t,i;const l=Z(e);return l?(t=e,i=Ue):(t=e.get,i=e.set),new Mc(t,i,l||!i,n)}function pa(e,a,n,t){let i;try{i=t?e(...t):e()}catch(l){Jn(l,a,n)}return i}function Oe(e,a,n,t){if(Z(e)){const l=pa(e,a,n,t);return l&&pl(l)&&l.catch(o=>{Jn(o,a,n)}),l}const i=[];for(let l=0;l<e.length;l++)i.push(Oe(e[l],a,n,t));return i}function Jn(e,a,n,t=!0){const i=a?a.vnode:null;if(a){let l=a.parent;const o=a.proxy,c=n;for(;l;){const s=l.ec;if(s){for(let u=0;u<s.length;u++)if(s[u](e,o,c)===!1)return}l=l.parent}const r=a.appContext.config.errorHandler;if(r){pa(r,null,10,[e,o,c]);return}}Fc(e,n,i,t)}function Fc(e,a,n,t=!0){console.error(e)}let sn=!1,Ct=!1;const je=[];let Ye=0;const Oa=[];let na=null,ja=0;const Ll=Promise.resolve();let Xt=null;function Zt(e){const a=Xt||Ll;return e?a.then(this?e.bind(this):e):a}function Tc(e){let a=Ye+1,n=je.length;for(;a<n;){const t=a+n>>>1;hn(je[t])<e?a=t+1:n=t}return a}function ei(e){(!je.length||!je.includes(e,sn&&e.allowRecurse?Ye+1:Ye))&&(e.id==null?je.push(e):je.splice(Tc(e.id),0,e),Vl())}function Vl(){!sn&&!Ct&&(Ct=!0,Xt=Ll.then(Al))}function Lc(e){const a=je.indexOf(e);a>Ye&&je.splice(a,1)}function Vc(e){K(e)?Oa.push(...e):(!na||!na.includes(e,e.allowRecurse?ja+1:ja))&&Oa.push(e),Vl()}function wi(e,a=sn?Ye+1:0){for(;a<je.length;a++){const n=je[a];n&&n.pre&&(je.splice(a,1),a--,n())}}function Ln(e){if(Oa.length){const a=[...new Set(Oa)];if(Oa.length=0,na){na.push(...a);return}for(na=a,na.sort((n,t)=>hn(n)-hn(t)),ja=0;ja<na.length;ja++)na[ja]();na=null,ja=0}}const hn=e=>e.id==null?1/0:e.id,Ac=(e,a)=>{const n=hn(e)-hn(a);if(n===0){if(e.pre&&!a.pre)return-1;if(a.pre&&!e.pre)return 1}return n};function Al(e){Ct=!1,sn=!0,je.sort(Ac);const a=Ue;try{for(Ye=0;Ye<je.length;Ye++){const n=je[Ye];n&&n.active!==!1&&pa(n,null,14)}}finally{Ye=0,je.length=0,Ln(),sn=!1,Xt=null,(je.length||Oa.length)&&Al()}}function Ic(e,a,...n){if(e.isUnmounted)return;const t=e.vnode.props||ge;let i=n;const l=a.startsWith("update:"),o=l&&a.slice(7);if(o&&o in t){const u=`${o==="modelValue"?"model":o}Modifiers`,{number:b,trim:_}=t[u]||ge;_&&(i=n.map(C=>ve(C)?C.trim():C)),b&&(i=n.map(Wo))}let c,r=t[c=mt(a)]||t[c=mt(Xe(a))];!r&&l&&(r=t[c=mt(Ja(a))]),r&&Oe(r,e,6,i);const s=t[c+"Once"];if(s){if(!e.emitted)e.emitted={};else if(e.emitted[c])return;e.emitted[c]=!0,Oe(s,e,6,i)}}function Il(e,a,n=!1){const t=a.emitsCache,i=t.get(e);if(i!==void 0)return i;const l=e.emits;let o={},c=!1;if(!Z(e)){const r=s=>{const u=Il(s,a,!0);u&&(c=!0,ye(o,u))};!n&&a.mixins.length&&a.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}return!l&&!c?(fe(e)&&t.set(e,null),null):(K(l)?l.forEach(r=>o[r]=null):ye(o,l),fe(e)&&t.set(e,o),o)}function Yn(e,a){return!e||!fn(a)?!1:(a=a.slice(2).replace(/Once$/,""),le(e,a[0].toLowerCase()+a.slice(1))||le(e,Ja(a))||le(e,a))}let we=null,Qn=null;function Vn(e){const a=we;return we=e,Qn=e&&e.type.__scopeId||null,a}function Ze(e){Qn=e}function ea(){Qn=null}function R(e,a=we,n){if(!a||e._n)return e;const t=(...i)=>{t._d&&Ni(-1);const l=Vn(a);let o;try{o=e(...i)}finally{Vn(l),t._d&&Ni(1)}return o};return t._n=!0,t._c=!0,t._d=!0,t}function ht(e){const{type:a,vnode:n,proxy:t,withProxy:i,props:l,propsOptions:[o],slots:c,attrs:r,emit:s,render:u,renderCache:b,data:_,setupState:C,ctx:z,inheritAttrs:V}=e;let X,k;const M=Vn(e);try{if(n.shapeFlag&4){const J=i||t;X=He(u.call(J,J,b,l,C,_,z)),k=r}else{const J=a;X=He(J.length>1?J(l,{attrs:r,slots:c,emit:s}):J(l,null)),k=a.props?r:Nc(r)}}catch(J){ln.length=0,Jn(J,e,1),X=$(Ae)}let L=X;if(k&&V!==!1){const J=Object.keys(k),{shapeFlag:ae}=L;J.length&&ae&7&&(o&&J.some(Ot)&&(k=zc(k,o)),L=_a(L,k))}return n.dirs&&(L=_a(L),L.dirs=L.dirs?L.dirs.concat(n.dirs):n.dirs),n.transition&&(L.transition=n.transition),X=L,Vn(M),X}const Nc=e=>{let a;for(const n in e)(n==="class"||n==="style"||fn(n))&&((a||(a={}))[n]=e[n]);return a},zc=(e,a)=>{const n={};for(const t in e)(!Ot(t)||!(t.slice(9)in a))&&(n[t]=e[t]);return n};function Oc(e,a,n){const{props:t,children:i,component:l}=e,{props:o,children:c,patchFlag:r}=a,s=l.emitsOptions;if(a.dirs||a.transition)return!0;if(n&&r>=0){if(r&1024)return!0;if(r&16)return t?$i(t,o,s):!!o;if(r&8){const u=a.dynamicProps;for(let b=0;b<u.length;b++){const _=u[b];if(o[_]!==t[_]&&!Yn(s,_))return!0}}}else return(i||c)&&(!c||!c.$stable)?!0:t===o?!1:t?o?$i(t,o,s):!0:!!o;return!1}function $i(e,a,n){const t=Object.keys(a);if(t.length!==Object.keys(e).length)return!0;for(let i=0;i<t.length;i++){const l=t[i];if(a[l]!==e[l]&&!Yn(n,l))return!0}return!1}function Bc({vnode:e,parent:a},n){for(;a&&a.subTree===e;)(e=a.vnode).el=n,a=a.parent}const Hc=e=>e.__isSuspense;function Nl(e,a){a&&a.pendingBranch?K(e)?a.effects.push(...e):a.effects.push(e):Vc(e)}function Ba(e,a){if(xe){let n=xe.provides;const t=xe.parent&&xe.parent.provides;t===n&&(n=xe.provides=Object.create(t)),n[e]=a}}function qe(e,a,n=!1){const t=xe||we;if(t){const i=t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&Z(a)?a.call(t.proxy):a}}function Fa(e,a){return Xn(e,null,a)}function zl(e,a){return Xn(e,null,{flush:"post"})}const jn={};function Qe(e,a,n){return Xn(e,a,n)}function Xn(e,a,{immediate:n,deep:t,flush:i,onTrack:l,onTrigger:o}=ge){const c=fl()===(xe==null?void 0:xe.scope)?xe:null;let r,s=!1,u=!1;if(Pe(e)?(r=()=>e.value,s=Tn(e)):za(e)?(r=()=>e,t=!0):K(e)?(u=!0,s=e.some(L=>za(L)||Tn(L)),r=()=>e.map(L=>{if(Pe(L))return L.value;if(za(L))return Aa(L);if(Z(L))return pa(L,c,2)})):Z(e)?a?r=()=>pa(e,c,2):r=()=>{if(!(c&&c.isUnmounted))return b&&b(),Oe(e,c,3,[_])}:r=Ue,a&&t){const L=r;r=()=>Aa(L())}let b,_=L=>{b=k.onStop=()=>{pa(L,c,4)}},C;if(pn)if(_=Ue,a?n&&Oe(a,c,3,[r(),u?[]:void 0,_]):r(),i==="sync"){const L=Lr();C=L.__watcherHandles||(L.__watcherHandles=[])}else return Ue;let z=u?new Array(e.length).fill(jn):jn;const V=()=>{if(k.active)if(a){const L=k.run();(t||s||(u?L.some((J,ae)=>rn(J,z[ae])):rn(L,z)))&&(b&&b(),Oe(a,c,3,[L,z===jn?void 0:u&&z[0]===jn?[]:z,_]),z=L)}else k.run()};V.allowRecurse=!!a;let X;i==="sync"?X=V:i==="post"?X=()=>Re(V,c&&c.suspense):(V.pre=!0,c&&(V.id=c.uid),X=()=>ei(V));const k=new Ut(r,X);a?n?V():z=k.run():i==="post"?Re(k.run.bind(k),c&&c.suspense):k.run();const M=()=>{k.stop(),c&&c.scope&&Bt(c.scope.effects,k)};return C&&C.push(M),M}function Gc(e,a,n){const t=this.proxy,i=ve(e)?e.includes(".")?Ol(t,e):()=>t[e]:e.bind(t,t);let l;Z(a)?l=a:(l=a.handler,n=a);const o=xe;Wa(this);const c=Xn(i,l.bind(t),n);return o?Wa(o):Ra(),c}function Ol(e,a){const n=a.split(".");return()=>{let t=e;for(let i=0;i<n.length&&t;i++)t=t[n[i]];return t}}function Aa(e,a){if(!fe(e)||e.__v_skip||(a=a||new Set,a.has(e)))return e;if(a.add(e),Pe(e))Aa(e.value,a);else if(K(e))for(let n=0;n<e.length;n++)Aa(e[n],a);else if(dl(e)||Na(e))e.forEach(n=>{Aa(n,a)});else if(_l(e))for(const n in e)Aa(e[n],a);return e}function Dc(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Ie(()=>{e.isMounted=!0}),Ul(()=>{e.isUnmounting=!0}),e}const Ne=[Function,Array],Uc={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Ne,onEnter:Ne,onAfterEnter:Ne,onEnterCancelled:Ne,onBeforeLeave:Ne,onLeave:Ne,onAfterLeave:Ne,onLeaveCancelled:Ne,onBeforeAppear:Ne,onAppear:Ne,onAfterAppear:Ne,onAppearCancelled:Ne},setup(e,{slots:a}){const n=nt(),t=Dc();let i;return()=>{const l=a.default&&Gl(a.default(),!0);if(!l||!l.length)return;let o=l[0];if(l.length>1){for(const V of l)if(V.type!==Ae){o=V;break}}const c=re(e),{mode:r}=c;if(t.isLeaving)return ut(o);const s=Mi(o);if(!s)return ut(o);const u=St(s,c,t,n);jt(s,u);const b=n.subTree,_=b&&Mi(b);let C=!1;const{getTransitionKey:z}=s.type;if(z){const V=z();i===void 0?i=V:V!==i&&(i=V,C=!0)}if(_&&_.type!==Ae&&(!Pa(s,_)||C)){const V=St(_,c,t,n);if(jt(_,V),r==="out-in")return t.isLeaving=!0,V.afterLeave=()=>{t.isLeaving=!1,n.update.active!==!1&&n.update()},ut(o);r==="in-out"&&s.type!==Ae&&(V.delayLeave=(X,k,M)=>{const L=Hl(t,_);L[String(_.key)]=_,X._leaveCb=()=>{k(),X._leaveCb=void 0,delete u.delayedLeave},u.delayedLeave=M})}return o}}},Bl=Uc;function Hl(e,a){const{leavingVNodes:n}=e;let t=n.get(a.type);return t||(t=Object.create(null),n.set(a.type,t)),t}function St(e,a,n,t){const{appear:i,mode:l,persisted:o=!1,onBeforeEnter:c,onEnter:r,onAfterEnter:s,onEnterCancelled:u,onBeforeLeave:b,onLeave:_,onAfterLeave:C,onLeaveCancelled:z,onBeforeAppear:V,onAppear:X,onAfterAppear:k,onAppearCancelled:M}=a,L=String(e.key),J=Hl(n,e),ae=(T,ee)=>{T&&Oe(T,t,9,ee)},de=(T,ee)=>{const Y=ee[1];ae(T,ee),K(T)?T.every(ce=>ce.length<=1)&&Y():T.length<=1&&Y()},ie={mode:l,persisted:o,beforeEnter(T){let ee=c;if(!n.isMounted)if(i)ee=V||c;else return;T._leaveCb&&T._leaveCb(!0);const Y=J[L];Y&&Pa(e,Y)&&Y.el._leaveCb&&Y.el._leaveCb(),ae(ee,[T])},enter(T){let ee=r,Y=s,ce=u;if(!n.isMounted)if(i)ee=X||r,Y=k||s,ce=M||u;else return;let I=!1;const ne=T._enterCb=H=>{I||(I=!0,H?ae(ce,[T]):ae(Y,[T]),ie.delayedLeave&&ie.delayedLeave(),T._enterCb=void 0)};ee?de(ee,[T,ne]):ne()},leave(T,ee){const Y=String(e.key);if(T._enterCb&&T._enterCb(!0),n.isUnmounting)return ee();ae(b,[T]);let ce=!1;const I=T._leaveCb=ne=>{ce||(ce=!0,ee(),ne?ae(z,[T]):ae(C,[T]),T._leaveCb=void 0,J[Y]===e&&delete J[Y])};J[Y]=e,_?de(_,[T,I]):I()},clone(T){return St(T,a,n,t)}};return ie}function ut(e){if(Zn(e))return e=_a(e),e.children=null,e}function Mi(e){return Zn(e)?e.children?e.children[0]:void 0:e}function jt(e,a){e.shapeFlag&6&&e.component?jt(e.component.subTree,a):e.shapeFlag&128?(e.ssContent.transition=a.clone(e.ssContent),e.ssFallback.transition=a.clone(e.ssFallback)):e.transition=a}function Gl(e,a=!1,n){let t=[],i=0;for(let l=0;l<e.length;l++){let o=e[l];const c=n==null?o.key:String(n)+String(o.key!=null?o.key:l);o.type===Q?(o.patchFlag&128&&i++,t=t.concat(Gl(o.children,a,c))):(a||o.type!==Ae)&&t.push(c!=null?_a(o,{key:c}):o)}if(i>1)for(let l=0;l<t.length;l++)t[l].patchFlag=-2;return t}function O(e){return Z(e)?{setup:e,name:e.name}:e}const Ha=e=>!!e.type.__asyncLoader,Zn=e=>e.type.__isKeepAlive;function qc(e,a){Dl(e,"a",a)}function Kc(e,a){Dl(e,"da",a)}function Dl(e,a,n=xe){const t=e.__wdc||(e.__wdc=()=>{let i=n;for(;i;){if(i.isDeactivated)return;i=i.parent}return e()});if(et(a,t,n),n){let i=n.parent;for(;i&&i.parent;)Zn(i.parent.vnode)&&Wc(t,a,n,i),i=i.parent}}function Wc(e,a,n,t){const i=et(a,e,t,!0);fa(()=>{Bt(t[a],i)},n)}function et(e,a,n=xe,t=!1){if(n){const i=n[e]||(n[e]=[]),l=a.__weh||(a.__weh=(...o)=>{if(n.isUnmounted)return;Ya(),Wa(n);const c=Oe(a,n,e,o);return Ra(),Qa(),c});return t?i.unshift(l):i.push(l),l}}const la=e=>(a,n=xe)=>(!pn||e==="sp")&&et(e,(...t)=>a(...t),n),Jc=la("bm"),Ie=la("m"),Yc=la("bu"),ai=la("u"),Ul=la("bum"),fa=la("um"),Qc=la("sp"),Xc=la("rtg"),Zc=la("rtc");function er(e,a=xe){et("ec",e,a)}function Je(e,a,n,t){const i=e.dirs,l=a&&a.dirs;for(let o=0;o<i.length;o++){const c=i[o];l&&(c.oldValue=l[o].value);let r=c.dir[t];r&&(Ya(),Oe(r,n,8,[e.el,c,e,a]),Qa())}}const ni="components";function ia(e,a){return Kl(ni,e,!0,a)||e}const ql=Symbol();function un(e){return ve(e)?Kl(ni,e,!1)||e:e||ql}function Kl(e,a,n=!0,t=!1){const i=we||xe;if(i){const l=i.type;if(e===ni){const c=$r(l,!1);if(c&&(c===a||c===Xe(a)||c===qn(Xe(a))))return l}const o=Ri(i[e]||l[e],a)||Ri(i.appContext[e],a);return!o&&t?l:o}}function Ri(e,a){return e&&(e[a]||e[Xe(a)]||e[qn(Xe(a))])}function $e(e,a,n,t){let i;const l=n&&n[t];if(K(e)||ve(e)){i=new Array(e.length);for(let o=0,c=e.length;o<c;o++)i[o]=a(e[o],o,void 0,l&&l[o])}else if(typeof e=="number"){i=new Array(e);for(let o=0;o<e;o++)i[o]=a(o+1,o,void 0,l&&l[o])}else if(fe(e))if(e[Symbol.iterator])i=Array.from(e,(o,c)=>a(o,c,void 0,l&&l[c]));else{const o=Object.keys(e);i=new Array(o.length);for(let c=0,r=o.length;c<r;c++){const s=o[c];i[c]=a(e[s],s,c,l&&l[c])}}else i=[];return n&&(n[t]=i),i}function P(e,a,n={},t,i){if(we.isCE||we.parent&&Ha(we.parent)&&we.parent.isCE)return a!=="default"&&(n.name=a),$("slot",n,t&&t());let l=e[a];l&&l._c&&(l._d=!1),d();const o=l&&Wl(l(n)),c=q(Q,{key:n.key||o&&o.key||`_${a}`},o||(t?t():[]),o&&e._===1?64:-2);return!i&&c.scopeId&&(c.slotScopeIds=[c.scopeId+"-s"]),l&&l._c&&(l._d=!0),c}function Wl(e){return e.some(a=>Nn(a)?!(a.type===Ae||a.type===Q&&!Wl(a.children)):!0)?e:null}const Pt=e=>e?lo(e)?oi(e)||e.proxy:Pt(e.parent):null,tn=ye(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Pt(e.parent),$root:e=>Pt(e.root),$emit:e=>e.emit,$options:e=>ti(e),$forceUpdate:e=>e.f||(e.f=()=>ei(e.update)),$nextTick:e=>e.n||(e.n=Zt.bind(e.proxy)),$watch:e=>Gc.bind(e)}),dt=(e,a)=>e!==ge&&!e.__isScriptSetup&&le(e,a),ar={get({_:e},a){const{ctx:n,setupState:t,data:i,props:l,accessCache:o,type:c,appContext:r}=e;let s;if(a[0]!=="$"){const C=o[a];if(C!==void 0)switch(C){case 1:return t[a];case 2:return i[a];case 4:return n[a];case 3:return l[a]}else{if(dt(t,a))return o[a]=1,t[a];if(i!==ge&&le(i,a))return o[a]=2,i[a];if((s=e.propsOptions[0])&&le(s,a))return o[a]=3,l[a];if(n!==ge&&le(n,a))return o[a]=4,n[a];wt&&(o[a]=0)}}const u=tn[a];let b,_;if(u)return a==="$attrs"&&Fe(e,"get",a),u(e);if((b=c.__cssModules)&&(b=b[a]))return b;if(n!==ge&&le(n,a))return o[a]=4,n[a];if(_=r.config.globalProperties,le(_,a))return _[a]},set({_:e},a,n){const{data:t,setupState:i,ctx:l}=e;return dt(i,a)?(i[a]=n,!0):t!==ge&&le(t,a)?(t[a]=n,!0):le(e.props,a)||a[0]==="$"&&a.slice(1)in e?!1:(l[a]=n,!0)},has({_:{data:e,setupState:a,accessCache:n,ctx:t,appContext:i,propsOptions:l}},o){let c;return!!n[o]||e!==ge&&le(e,o)||dt(a,o)||(c=l[0])&&le(c,o)||le(t,o)||le(tn,o)||le(i.config.globalProperties,o)},defineProperty(e,a,n){return n.get!=null?e._.accessCache[a]=0:le(n,"value")&&this.set(e,a,n.value,null),Reflect.defineProperty(e,a,n)}};let wt=!0;function nr(e){const a=ti(e),n=e.proxy,t=e.ctx;wt=!1,a.beforeCreate&&Fi(a.beforeCreate,e,"bc");const{data:i,computed:l,methods:o,watch:c,provide:r,inject:s,created:u,beforeMount:b,mounted:_,beforeUpdate:C,updated:z,activated:V,deactivated:X,beforeDestroy:k,beforeUnmount:M,destroyed:L,unmounted:J,render:ae,renderTracked:de,renderTriggered:ie,errorCaptured:T,serverPrefetch:ee,expose:Y,inheritAttrs:ce,components:I,directives:ne,filters:H}=a;if(s&&tr(s,t,null,e.appContext.config.unwrapInjectedRef),o)for(const ke in o){const pe=o[ke];Z(pe)&&(t[ke]=pe.bind(n))}if(i){const ke=i.call(n,n);fe(ke)&&(e.data=Wn(ke))}if(wt=!0,l)for(const ke in l){const pe=l[ke],xa=Z(pe)?pe.bind(n,n):Z(pe.get)?pe.get.bind(n,n):Ue,kn=!Z(pe)&&Z(pe.set)?pe.set.bind(n):Ue,va=U({get:xa,set:kn});Object.defineProperty(t,ke,{enumerable:!0,configurable:!0,get:()=>va.value,set:Ke=>va.value=Ke})}if(c)for(const ke in c)Jl(c[ke],t,n,ke);if(r){const ke=Z(r)?r.call(n):r;Reflect.ownKeys(ke).forEach(pe=>{Ba(pe,ke[pe])})}u&&Fi(u,e,"c");function he(ke,pe){K(pe)?pe.forEach(xa=>ke(xa.bind(n))):pe&&ke(pe.bind(n))}if(he(Jc,b),he(Ie,_),he(Yc,C),he(ai,z),he(qc,V),he(Kc,X),he(er,T),he(Zc,de),he(Xc,ie),he(Ul,M),he(fa,J),he(Qc,ee),K(Y))if(Y.length){const ke=e.exposed||(e.exposed={});Y.forEach(pe=>{Object.defineProperty(ke,pe,{get:()=>n[pe],set:xa=>n[pe]=xa})})}else e.exposed||(e.exposed={});ae&&e.render===Ue&&(e.render=ae),ce!=null&&(e.inheritAttrs=ce),I&&(e.components=I),ne&&(e.directives=ne)}function tr(e,a,n=Ue,t=!1){K(e)&&(e=$t(e));for(const i in e){const l=e[i];let o;fe(l)?"default"in l?o=qe(l.from||i,l.default,!0):o=qe(l.from||i):o=qe(l),Pe(o)&&t?Object.defineProperty(a,i,{enumerable:!0,configurable:!0,get:()=>o.value,set:c=>o.value=c}):a[i]=o}}function Fi(e,a,n){Oe(K(e)?e.map(t=>t.bind(a.proxy)):e.bind(a.proxy),a,n)}function Jl(e,a,n,t){const i=t.includes(".")?Ol(n,t):()=>n[t];if(ve(e)){const l=a[e];Z(l)&&Qe(i,l)}else if(Z(e))Qe(i,e.bind(n));else if(fe(e))if(K(e))e.forEach(l=>Jl(l,a,n,t));else{const l=Z(e.handler)?e.handler.bind(n):a[e.handler];Z(l)&&Qe(i,l,e)}}function ti(e){const a=e.type,{mixins:n,extends:t}=a,{mixins:i,optionsCache:l,config:{optionMergeStrategies:o}}=e.appContext,c=l.get(a);let r;return c?r=c:!i.length&&!n&&!t?r=a:(r={},i.length&&i.forEach(s=>An(r,s,o,!0)),An(r,a,o)),fe(a)&&l.set(a,r),r}function An(e,a,n,t=!1){const{mixins:i,extends:l}=a;l&&An(e,l,n,!0),i&&i.forEach(o=>An(e,o,n,!0));for(const o in a)if(!(t&&o==="expose")){const c=ir[o]||n&&n[o];e[o]=c?c(e[o],a[o]):a[o]}return e}const ir={data:Ti,props:Sa,emits:Sa,methods:Sa,computed:Sa,beforeCreate:Me,created:Me,beforeMount:Me,mounted:Me,beforeUpdate:Me,updated:Me,beforeDestroy:Me,beforeUnmount:Me,destroyed:Me,unmounted:Me,activated:Me,deactivated:Me,errorCaptured:Me,serverPrefetch:Me,components:Sa,directives:Sa,watch:or,provide:Ti,inject:lr};function Ti(e,a){return a?e?function(){return ye(Z(e)?e.call(this,this):e,Z(a)?a.call(this,this):a)}:a:e}function lr(e,a){return Sa($t(e),$t(a))}function $t(e){if(K(e)){const a={};for(let n=0;n<e.length;n++)a[e[n]]=e[n];return a}return e}function Me(e,a){return e?[...new Set([].concat(e,a))]:a}function Sa(e,a){return e?ye(ye(Object.create(null),e),a):a}function or(e,a){if(!e)return a;if(!a)return e;const n=ye(Object.create(null),e);for(const t in a)n[t]=Me(e[t],a[t]);return n}function cr(e,a,n,t=!1){const i={},l={};Fn(l,at,1),e.propsDefaults=Object.create(null),Yl(e,a,i,l);for(const o in e.propsOptions[0])o in i||(i[o]=void 0);n?e.props=t?i:jc(i):e.type.props?e.props=i:e.props=l,e.attrs=l}function rr(e,a,n,t){const{props:i,attrs:l,vnode:{patchFlag:o}}=e,c=re(i),[r]=e.propsOptions;let s=!1;if((t||o>0)&&!(o&16)){if(o&8){const u=e.vnode.dynamicProps;for(let b=0;b<u.length;b++){let _=u[b];if(Yn(e.emitsOptions,_))continue;const C=a[_];if(r)if(le(l,_))C!==l[_]&&(l[_]=C,s=!0);else{const z=Xe(_);i[z]=Mt(r,c,z,C,e,!1)}else C!==l[_]&&(l[_]=C,s=!0)}}}else{Yl(e,a,i,l)&&(s=!0);let u;for(const b in c)(!a||!le(a,b)&&((u=Ja(b))===b||!le(a,u)))&&(r?n&&(n[b]!==void 0||n[u]!==void 0)&&(i[b]=Mt(r,c,b,void 0,e,!0)):delete i[b]);if(l!==c)for(const b in l)(!a||!le(a,b))&&(delete l[b],s=!0)}s&&ta(e,"set","$attrs")}function Yl(e,a,n,t){const[i,l]=e.propsOptions;let o=!1,c;if(a)for(let r in a){if(an(r))continue;const s=a[r];let u;i&&le(i,u=Xe(r))?!l||!l.includes(u)?n[u]=s:(c||(c={}))[u]=s:Yn(e.emitsOptions,r)||(!(r in t)||s!==t[r])&&(t[r]=s,o=!0)}if(l){const r=re(n),s=c||ge;for(let u=0;u<l.length;u++){const b=l[u];n[b]=Mt(i,r,b,s[b],e,!le(s,b))}}return o}function Mt(e,a,n,t,i,l){const o=e[n];if(o!=null){const c=le(o,"default");if(c&&t===void 0){const r=o.default;if(o.type!==Function&&Z(r)){const{propsDefaults:s}=i;n in s?t=s[n]:(Wa(i),t=s[n]=r.call(null,a),Ra())}else t=r}o[0]&&(l&&!c?t=!1:o[1]&&(t===""||t===Ja(n))&&(t=!0))}return t}function Ql(e,a,n=!1){const t=a.propsCache,i=t.get(e);if(i)return i;const l=e.props,o={},c=[];let r=!1;if(!Z(e)){const u=b=>{r=!0;const[_,C]=Ql(b,a,!0);ye(o,_),C&&c.push(...C)};!n&&a.mixins.length&&a.mixins.forEach(u),e.extends&&u(e.extends),e.mixins&&e.mixins.forEach(u)}if(!l&&!r)return fe(e)&&t.set(e,Ia),Ia;if(K(l))for(let u=0;u<l.length;u++){const b=Xe(l[u]);Li(b)&&(o[b]=ge)}else if(l)for(const u in l){const b=Xe(u);if(Li(b)){const _=l[u],C=o[b]=K(_)||Z(_)?{type:_}:Object.assign({},_);if(C){const z=Ii(Boolean,C.type),V=Ii(String,C.type);C[0]=z>-1,C[1]=V<0||z<V,(z>-1||le(C,"default"))&&c.push(b)}}}const s=[o,c];return fe(e)&&t.set(e,s),s}function Li(e){return e[0]!=="$"}function Vi(e){const a=e&&e.toString().match(/^\s*(function|class) (\w+)/);return a?a[2]:e===null?"null":""}function Ai(e,a){return Vi(e)===Vi(a)}function Ii(e,a){return K(a)?a.findIndex(n=>Ai(n,e)):Z(a)&&Ai(a,e)?0:-1}const Xl=e=>e[0]==="_"||e==="$stable",ii=e=>K(e)?e.map(He):[He(e)],mr=(e,a,n)=>{if(a._n)return a;const t=R((...i)=>ii(a(...i)),n);return t._c=!1,t},Zl=(e,a,n)=>{const t=e._ctx;for(const i in e){if(Xl(i))continue;const l=e[i];if(Z(l))a[i]=mr(i,l,t);else if(l!=null){const o=ii(l);a[i]=()=>o}}},eo=(e,a)=>{const n=ii(a);e.slots.default=()=>n},sr=(e,a)=>{if(e.vnode.shapeFlag&32){const n=a._;n?(e.slots=re(a),Fn(a,"_",n)):Zl(a,e.slots={})}else e.slots={},a&&eo(e,a);Fn(e.slots,at,1)},hr=(e,a,n)=>{const{vnode:t,slots:i}=e;let l=!0,o=ge;if(t.shapeFlag&32){const c=a._;c?n&&c===1?l=!1:(ye(i,a),!n&&c===1&&delete i._):(l=!a.$stable,Zl(a,i)),o=a}else a&&(eo(e,a),o={default:1});if(l)for(const c in i)!Xl(c)&&!(c in o)&&delete i[c]};function ao(){return{app:null,config:{isNativeTag:Ho,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let ur=0;function dr(e,a){return function(t,i=null){Z(t)||(t=Object.assign({},t)),i!=null&&!fe(i)&&(i=null);const l=ao(),o=new Set;let c=!1;const r=l.app={_uid:ur++,_component:t,_props:i,_container:null,_context:l,_instance:null,version:Vr,get config(){return l.config},set config(s){},use(s,...u){return o.has(s)||(s&&Z(s.install)?(o.add(s),s.install(r,...u)):Z(s)&&(o.add(s),s(r,...u))),r},mixin(s){return l.mixins.includes(s)||l.mixins.push(s),r},component(s,u){return u?(l.components[s]=u,r):l.components[s]},directive(s,u){return u?(l.directives[s]=u,r):l.directives[s]},mount(s,u,b){if(!c){const _=$(t,i);return _.appContext=l,u&&a?a(_,s):e(_,s,b),c=!0,r._container=s,s.__vue_app__=r,oi(_.component)||_.component.proxy}},unmount(){c&&(e(null,r._container),delete r._container.__vue_app__)},provide(s,u){return l.provides[s]=u,r}};return r}}function In(e,a,n,t,i=!1){if(K(e)){e.forEach((_,C)=>In(_,a&&(K(a)?a[C]:a),n,t,i));return}if(Ha(t)&&!i)return;const l=t.shapeFlag&4?oi(t.component)||t.component.proxy:t.el,o=i?null:l,{i:c,r}=e,s=a&&a.r,u=c.refs===ge?c.refs={}:c.refs,b=c.setupState;if(s!=null&&s!==r&&(ve(s)?(u[s]=null,le(b,s)&&(b[s]=null)):Pe(s)&&(s.value=null)),Z(r))pa(r,c,12,[o,u]);else{const _=ve(r),C=Pe(r);if(_||C){const z=()=>{if(e.f){const V=_?le(b,r)?b[r]:u[r]:r.value;i?K(V)&&Bt(V,l):K(V)?V.includes(l)||V.push(l):_?(u[r]=[l],le(b,r)&&(b[r]=u[r])):(r.value=[l],e.k&&(u[e.k]=r.value))}else _?(u[r]=o,le(b,r)&&(b[r]=o)):C&&(r.value=o,e.k&&(u[e.k]=o))};o?(z.id=-1,Re(z,n)):z()}}}let ra=!1;const Pn=e=>/svg/.test(e.namespaceURI)&&e.tagName!=="foreignObject",wn=e=>e.nodeType===8;function pr(e){const{mt:a,p:n,o:{patchProp:t,createText:i,nextSibling:l,parentNode:o,remove:c,insert:r,createComment:s}}=e,u=(k,M)=>{if(!M.hasChildNodes()){n(null,k,M),Ln(),M._vnode=k;return}ra=!1,b(M.firstChild,k,null,null,null),Ln(),M._vnode=k,ra&&console.error("Hydration completed but contains mismatches.")},b=(k,M,L,J,ae,de=!1)=>{const ie=wn(k)&&k.data==="[",T=()=>V(k,M,L,J,ae,ie),{type:ee,ref:Y,shapeFlag:ce,patchFlag:I}=M;let ne=k.nodeType;M.el=k,I===-2&&(de=!1,M.dynamicChildren=null);let H=null;switch(ee){case Ka:ne!==3?M.children===""?(r(M.el=i(""),o(k),k),H=k):H=T():(k.data!==M.children&&(ra=!0,k.data=M.children),H=l(k));break;case Ae:ne!==8||ie?H=T():H=l(k);break;case Ga:if(ie&&(k=l(k),ne=k.nodeType),ne===1||ne===3){H=k;const Te=!M.children.length;for(let he=0;he<M.staticCount;he++)Te&&(M.children+=H.nodeType===1?H.outerHTML:H.data),he===M.staticCount-1&&(M.anchor=H),H=l(H);return ie?l(H):H}else T();break;case Q:ie?H=z(k,M,L,J,ae,de):H=T();break;default:if(ce&1)ne!==1||M.type.toLowerCase()!==k.tagName.toLowerCase()?H=T():H=_(k,M,L,J,ae,de);else if(ce&6){M.slotScopeIds=ae;const Te=o(k);if(a(M,Te,null,L,J,Pn(Te),de),H=ie?X(k):l(k),H&&wn(H)&&H.data==="teleport end"&&(H=l(H)),Ha(M)){let he;ie?(he=$(Q),he.anchor=H?H.previousSibling:Te.lastChild):he=k.nodeType===3?Ce(""):$("div"),he.el=k,M.component.subTree=he}}else ce&64?ne!==8?H=T():H=M.type.hydrate(k,M,L,J,ae,de,e,C):ce&128&&(H=M.type.hydrate(k,M,L,J,Pn(o(k)),ae,de,e,b))}return Y!=null&&In(Y,null,J,M),H},_=(k,M,L,J,ae,de)=>{de=de||!!M.dynamicChildren;const{type:ie,props:T,patchFlag:ee,shapeFlag:Y,dirs:ce}=M,I=ie==="input"&&ce||ie==="option";if(I||ee!==-1){if(ce&&Je(M,null,L,"created"),T)if(I||!de||ee&48)for(const H in T)(I&&H.endsWith("value")||fn(H)&&!an(H))&&t(k,H,null,T[H],!1,void 0,L);else T.onClick&&t(k,"onClick",null,T.onClick,!1,void 0,L);let ne;if((ne=T&&T.onVnodeBeforeMount)&&ze(ne,L,M),ce&&Je(M,null,L,"beforeMount"),((ne=T&&T.onVnodeMounted)||ce)&&Nl(()=>{ne&&ze(ne,L,M),ce&&Je(M,null,L,"mounted")},J),Y&16&&!(T&&(T.innerHTML||T.textContent))){let H=C(k.firstChild,M,k,L,J,ae,de);for(;H;){ra=!0;const Te=H;H=H.nextSibling,c(Te)}}else Y&8&&k.textContent!==M.children&&(ra=!0,k.textContent=M.children)}return k.nextSibling},C=(k,M,L,J,ae,de,ie)=>{ie=ie||!!M.dynamicChildren;const T=M.children,ee=T.length;for(let Y=0;Y<ee;Y++){const ce=ie?T[Y]:T[Y]=He(T[Y]);if(k)k=b(k,ce,J,ae,de,ie);else{if(ce.type===Ka&&!ce.children)continue;ra=!0,n(null,ce,L,null,J,ae,Pn(L),de)}}return k},z=(k,M,L,J,ae,de)=>{const{slotScopeIds:ie}=M;ie&&(ae=ae?ae.concat(ie):ie);const T=o(k),ee=C(l(k),M,T,L,J,ae,de);return ee&&wn(ee)&&ee.data==="]"?l(M.anchor=ee):(ra=!0,r(M.anchor=s("]"),T,ee),ee)},V=(k,M,L,J,ae,de)=>{if(ra=!0,M.el=null,de){const ee=X(k);for(;;){const Y=l(k);if(Y&&Y!==ee)c(Y);else break}}const ie=l(k),T=o(k);return c(k),n(null,M,T,ie,L,J,Pn(T),ae),ie},X=k=>{let M=0;for(;k;)if(k=l(k),k&&wn(k)&&(k.data==="["&&M++,k.data==="]")){if(M===0)return l(k);M--}return k};return[u,b]}const Re=Nl;function br(e){return _r(e,pr)}function _r(e,a){const n=Yo();n.__VUE__=!0;const{insert:t,remove:i,patchProp:l,createElement:o,createText:c,createComment:r,setText:s,setElementText:u,parentNode:b,nextSibling:_,setScopeId:C=Ue,insertStaticContent:z}=e,V=(m,h,f,E=null,v=null,j=null,F=!1,S=null,w=!!h.dynamicChildren)=>{if(m===h)return;m&&!Pa(m,h)&&(E=xn(m),Ke(m,v,j,!0),m=null),h.patchFlag===-2&&(w=!1,h.dynamicChildren=null);const{type:y,ref:G,shapeFlag:N}=h;switch(y){case Ka:X(m,h,f,E);break;case Ae:k(m,h,f,E);break;case Ga:m==null&&M(h,f,E,F);break;case Q:I(m,h,f,E,v,j,F,S,w);break;default:N&1?ae(m,h,f,E,v,j,F,S,w):N&6?ne(m,h,f,E,v,j,F,S,w):(N&64||N&128)&&y.process(m,h,f,E,v,j,F,S,w,La)}G!=null&&v&&In(G,m&&m.ref,j,h||m,!h)},X=(m,h,f,E)=>{if(m==null)t(h.el=c(h.children),f,E);else{const v=h.el=m.el;h.children!==m.children&&s(v,h.children)}},k=(m,h,f,E)=>{m==null?t(h.el=r(h.children||""),f,E):h.el=m.el},M=(m,h,f,E)=>{[m.el,m.anchor]=z(m.children,h,f,E,m.el,m.anchor)},L=({el:m,anchor:h},f,E)=>{let v;for(;m&&m!==h;)v=_(m),t(m,f,E),m=v;t(h,f,E)},J=({el:m,anchor:h})=>{let f;for(;m&&m!==h;)f=_(m),i(m),m=f;i(h)},ae=(m,h,f,E,v,j,F,S,w)=>{F=F||h.type==="svg",m==null?de(h,f,E,v,j,F,S,w):ee(m,h,v,j,F,S,w)},de=(m,h,f,E,v,j,F,S)=>{let w,y;const{type:G,props:N,shapeFlag:D,transition:W,dirs:te}=m;if(w=m.el=o(m.type,j,N&&N.is,N),D&8?u(w,m.children):D&16&&T(m.children,w,null,E,v,j&&G!=="foreignObject",F,S),te&&Je(m,null,E,"created"),ie(w,m,m.scopeId,F,E),N){for(const ue in N)ue!=="value"&&!an(ue)&&l(w,ue,null,N[ue],j,m.children,E,v,aa);"value"in N&&l(w,"value",null,N.value),(y=N.onVnodeBeforeMount)&&ze(y,E,m)}te&&Je(m,null,E,"beforeMount");const be=(!v||v&&!v.pendingBranch)&&W&&!W.persisted;be&&W.beforeEnter(w),t(w,h,f),((y=N&&N.onVnodeMounted)||be||te)&&Re(()=>{y&&ze(y,E,m),be&&W.enter(w),te&&Je(m,null,E,"mounted")},v)},ie=(m,h,f,E,v)=>{if(f&&C(m,f),E)for(let j=0;j<E.length;j++)C(m,E[j]);if(v){let j=v.subTree;if(h===j){const F=v.vnode;ie(m,F,F.scopeId,F.slotScopeIds,v.parent)}}},T=(m,h,f,E,v,j,F,S,w=0)=>{for(let y=w;y<m.length;y++){const G=m[y]=S?ha(m[y]):He(m[y]);V(null,G,h,f,E,v,j,F,S)}},ee=(m,h,f,E,v,j,F)=>{const S=h.el=m.el;let{patchFlag:w,dynamicChildren:y,dirs:G}=h;w|=m.patchFlag&16;const N=m.props||ge,D=h.props||ge;let W;f&&Ea(f,!1),(W=D.onVnodeBeforeUpdate)&&ze(W,f,h,m),G&&Je(h,m,f,"beforeUpdate"),f&&Ea(f,!0);const te=v&&h.type!=="foreignObject";if(y?Y(m.dynamicChildren,y,S,f,E,te,j):F||pe(m,h,S,null,f,E,te,j,!1),w>0){if(w&16)ce(S,h,N,D,f,E,v);else if(w&2&&N.class!==D.class&&l(S,"class",null,D.class,v),w&4&&l(S,"style",N.style,D.style,v),w&8){const be=h.dynamicProps;for(let ue=0;ue<be.length;ue++){const Ee=be[ue],Be=N[Ee],Va=D[Ee];(Va!==Be||Ee==="value")&&l(S,Ee,Be,Va,v,m.children,f,E,aa)}}w&1&&m.children!==h.children&&u(S,h.children)}else!F&&y==null&&ce(S,h,N,D,f,E,v);((W=D.onVnodeUpdated)||G)&&Re(()=>{W&&ze(W,f,h,m),G&&Je(h,m,f,"updated")},E)},Y=(m,h,f,E,v,j,F)=>{for(let S=0;S<h.length;S++){const w=m[S],y=h[S],G=w.el&&(w.type===Q||!Pa(w,y)||w.shapeFlag&70)?b(w.el):f;V(w,y,G,null,E,v,j,F,!0)}},ce=(m,h,f,E,v,j,F)=>{if(f!==E){if(f!==ge)for(const S in f)!an(S)&&!(S in E)&&l(m,S,f[S],null,F,h.children,v,j,aa);for(const S in E){if(an(S))continue;const w=E[S],y=f[S];w!==y&&S!=="value"&&l(m,S,y,w,F,h.children,v,j,aa)}"value"in E&&l(m,"value",f.value,E.value)}},I=(m,h,f,E,v,j,F,S,w)=>{const y=h.el=m?m.el:c(""),G=h.anchor=m?m.anchor:c("");let{patchFlag:N,dynamicChildren:D,slotScopeIds:W}=h;W&&(S=S?S.concat(W):W),m==null?(t(y,f,E),t(G,f,E),T(h.children,f,G,v,j,F,S,w)):N>0&&N&64&&D&&m.dynamicChildren?(Y(m.dynamicChildren,D,f,v,j,F,S),(h.key!=null||v&&h===v.subTree)&&no(m,h,!0)):pe(m,h,f,G,v,j,F,S,w)},ne=(m,h,f,E,v,j,F,S,w)=>{h.slotScopeIds=S,m==null?h.shapeFlag&512?v.ctx.activate(h,f,E,F,w):H(h,f,E,v,j,F,w):Te(m,h,w)},H=(m,h,f,E,v,j,F)=>{const S=m.component=Sr(m,E,v);if(Zn(m)&&(S.ctx.renderer=La),jr(S),S.asyncDep){if(v&&v.registerDep(S,he),!m.el){const w=S.subTree=$(Ae);k(null,w,h,f)}return}he(S,m,h,f,v,j,F)},Te=(m,h,f)=>{const E=h.component=m.component;if(Oc(m,h,f))if(E.asyncDep&&!E.asyncResolved){ke(E,h,f);return}else E.next=h,Lc(E.update),E.update();else h.el=m.el,E.vnode=h},he=(m,h,f,E,v,j,F)=>{const S=()=>{if(m.isMounted){let{next:G,bu:N,u:D,parent:W,vnode:te}=m,be=G,ue;Ea(m,!1),G?(G.el=te.el,ke(m,G,F)):G=te,N&&st(N),(ue=G.props&&G.props.onVnodeBeforeUpdate)&&ze(ue,W,G,te),Ea(m,!0);const Ee=ht(m),Be=m.subTree;m.subTree=Ee,V(Be,Ee,b(Be.el),xn(Be),m,v,j),G.el=Ee.el,be===null&&Bc(m,Ee.el),D&&Re(D,v),(ue=G.props&&G.props.onVnodeUpdated)&&Re(()=>ze(ue,W,G,te),v)}else{let G;const{el:N,props:D}=h,{bm:W,m:te,parent:be}=m,ue=Ha(h);if(Ea(m,!1),W&&st(W),!ue&&(G=D&&D.onVnodeBeforeMount)&&ze(G,be,h),Ea(m,!0),N&&rt){const Ee=()=>{m.subTree=ht(m),rt(N,m.subTree,m,v,null)};ue?h.type.__asyncLoader().then(()=>!m.isUnmounted&&Ee()):Ee()}else{const Ee=m.subTree=ht(m);V(null,Ee,f,E,m,v,j),h.el=Ee.el}if(te&&Re(te,v),!ue&&(G=D&&D.onVnodeMounted)){const Ee=h;Re(()=>ze(G,be,Ee),v)}(h.shapeFlag&256||be&&Ha(be.vnode)&&be.vnode.shapeFlag&256)&&m.a&&Re(m.a,v),m.isMounted=!0,h=f=E=null}},w=m.effect=new Ut(S,()=>ei(y),m.scope),y=m.update=()=>w.run();y.id=m.uid,Ea(m,!0),y()},ke=(m,h,f)=>{h.component=m;const E=m.vnode.props;m.vnode=h,m.next=null,rr(m,h.props,E,f),hr(m,h.children,f),Ya(),wi(),Qa()},pe=(m,h,f,E,v,j,F,S,w=!1)=>{const y=m&&m.children,G=m?m.shapeFlag:0,N=h.children,{patchFlag:D,shapeFlag:W}=h;if(D>0){if(D&128){kn(y,N,f,E,v,j,F,S,w);return}else if(D&256){xa(y,N,f,E,v,j,F,S,w);return}}W&8?(G&16&&aa(y,v,j),N!==y&&u(f,N)):G&16?W&16?kn(y,N,f,E,v,j,F,S,w):aa(y,v,j,!0):(G&8&&u(f,""),W&16&&T(N,f,E,v,j,F,S,w))},xa=(m,h,f,E,v,j,F,S,w)=>{m=m||Ia,h=h||Ia;const y=m.length,G=h.length,N=Math.min(y,G);let D;for(D=0;D<N;D++){const W=h[D]=w?ha(h[D]):He(h[D]);V(m[D],W,f,null,v,j,F,S,w)}y>G?aa(m,v,j,!0,!1,N):T(h,f,E,v,j,F,S,w,N)},kn=(m,h,f,E,v,j,F,S,w)=>{let y=0;const G=h.length;let N=m.length-1,D=G-1;for(;y<=N&&y<=D;){const W=m[y],te=h[y]=w?ha(h[y]):He(h[y]);if(Pa(W,te))V(W,te,f,null,v,j,F,S,w);else break;y++}for(;y<=N&&y<=D;){const W=m[N],te=h[D]=w?ha(h[D]):He(h[D]);if(Pa(W,te))V(W,te,f,null,v,j,F,S,w);else break;N--,D--}if(y>N){if(y<=D){const W=D+1,te=W<G?h[W].el:E;for(;y<=D;)V(null,h[y]=w?ha(h[y]):He(h[y]),f,te,v,j,F,S,w),y++}}else if(y>D)for(;y<=N;)Ke(m[y],v,j,!0),y++;else{const W=y,te=y,be=new Map;for(y=te;y<=D;y++){const Le=h[y]=w?ha(h[y]):He(h[y]);Le.key!=null&&be.set(Le.key,y)}let ue,Ee=0;const Be=D-te+1;let Va=!1,fi=0;const Xa=new Array(Be);for(y=0;y<Be;y++)Xa[y]=0;for(y=W;y<=N;y++){const Le=m[y];if(Ee>=Be){Ke(Le,v,j,!0);continue}let We;if(Le.key!=null)We=be.get(Le.key);else for(ue=te;ue<=D;ue++)if(Xa[ue-te]===0&&Pa(Le,h[ue])){We=ue;break}We===void 0?Ke(Le,v,j,!0):(Xa[We-te]=y+1,We>=fi?fi=We:Va=!0,V(Le,h[We],f,null,v,j,F,S,w),Ee++)}const gi=Va?fr(Xa):Ia;for(ue=gi.length-1,y=Be-1;y>=0;y--){const Le=te+y,We=h[Le],ki=Le+1<G?h[Le+1].el:E;Xa[y]===0?V(null,We,f,ki,v,j,F,S,w):Va&&(ue<0||y!==gi[ue]?va(We,f,ki,2):ue--)}}},va=(m,h,f,E,v=null)=>{const{el:j,type:F,transition:S,children:w,shapeFlag:y}=m;if(y&6){va(m.component.subTree,h,f,E);return}if(y&128){m.suspense.move(h,f,E);return}if(y&64){F.move(m,h,f,La);return}if(F===Q){t(j,h,f);for(let N=0;N<w.length;N++)va(w[N],h,f,E);t(m.anchor,h,f);return}if(F===Ga){L(m,h,f);return}if(E!==2&&y&1&&S)if(E===0)S.beforeEnter(j),t(j,h,f),Re(()=>S.enter(j),v);else{const{leave:N,delayLeave:D,afterLeave:W}=S,te=()=>t(j,h,f),be=()=>{N(j,()=>{te(),W&&W()})};D?D(j,te,be):be()}else t(j,h,f)},Ke=(m,h,f,E=!1,v=!1)=>{const{type:j,props:F,ref:S,children:w,dynamicChildren:y,shapeFlag:G,patchFlag:N,dirs:D}=m;if(S!=null&&In(S,null,f,m,!0),G&256){h.ctx.deactivate(m);return}const W=G&1&&D,te=!Ha(m);let be;if(te&&(be=F&&F.onVnodeBeforeUnmount)&&ze(be,h,m),G&6)Vo(m.component,f,E);else{if(G&128){m.suspense.unmount(f,E);return}W&&Je(m,null,h,"beforeUnmount"),G&64?m.type.remove(m,h,f,v,La,E):y&&(j!==Q||N>0&&N&64)?aa(y,h,f,!1,!0):(j===Q&&N&384||!v&&G&16)&&aa(w,h,f),E&&bi(m)}(te&&(be=F&&F.onVnodeUnmounted)||W)&&Re(()=>{be&&ze(be,h,m),W&&Je(m,null,h,"unmounted")},f)},bi=m=>{const{type:h,el:f,anchor:E,transition:v}=m;if(h===Q){Lo(f,E);return}if(h===Ga){J(m);return}const j=()=>{i(f),v&&!v.persisted&&v.afterLeave&&v.afterLeave()};if(m.shapeFlag&1&&v&&!v.persisted){const{leave:F,delayLeave:S}=v,w=()=>F(f,j);S?S(m.el,j,w):w()}else j()},Lo=(m,h)=>{let f;for(;m!==h;)f=_(m),i(m),m=f;i(h)},Vo=(m,h,f)=>{const{bum:E,scope:v,update:j,subTree:F,um:S}=m;E&&st(E),v.stop(),j&&(j.active=!1,Ke(F,m,h,f)),S&&Re(S,h),Re(()=>{m.isUnmounted=!0},h),h&&h.pendingBranch&&!h.isUnmounted&&m.asyncDep&&!m.asyncResolved&&m.suspenseId===h.pendingId&&(h.deps--,h.deps===0&&h.resolve())},aa=(m,h,f,E=!1,v=!1,j=0)=>{for(let F=j;F<m.length;F++)Ke(m[F],h,f,E,v)},xn=m=>m.shapeFlag&6?xn(m.component.subTree):m.shapeFlag&128?m.suspense.next():_(m.anchor||m.el),_i=(m,h,f)=>{m==null?h._vnode&&Ke(h._vnode,null,null,!0):V(h._vnode||null,m,h,null,null,null,f),wi(),Ln(),h._vnode=m},La={p:V,um:Ke,m:va,r:bi,mt:H,mc:T,pc:pe,pbc:Y,n:xn,o:e};let ct,rt;return a&&([ct,rt]=a(La)),{render:_i,hydrate:ct,createApp:dr(_i,ct)}}function Ea({effect:e,update:a},n){e.allowRecurse=a.allowRecurse=n}function no(e,a,n=!1){const t=e.children,i=a.children;if(K(t)&&K(i))for(let l=0;l<t.length;l++){const o=t[l];let c=i[l];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=i[l]=ha(i[l]),c.el=o.el),n||no(o,c)),c.type===Ka&&(c.el=o.el)}}function fr(e){const a=e.slice(),n=[0];let t,i,l,o,c;const r=e.length;for(t=0;t<r;t++){const s=e[t];if(s!==0){if(i=n[n.length-1],e[i]<s){a[t]=i,n.push(t);continue}for(l=0,o=n.length-1;l<o;)c=l+o>>1,e[n[c]]<s?l=c+1:o=c;s<e[n[l]]&&(l>0&&(a[t]=n[l-1]),n[l]=t)}}for(l=n.length,o=n[l-1];l-- >0;)n[l]=o,o=a[o];return n}const gr=e=>e.__isTeleport,Q=Symbol(void 0),Ka=Symbol(void 0),Ae=Symbol(void 0),Ga=Symbol(void 0),ln=[];let De=null;function d(e=!1){ln.push(De=e?null:[])}function kr(){ln.pop(),De=ln[ln.length-1]||null}let dn=1;function Ni(e){dn+=e}function to(e){return e.dynamicChildren=dn>0?De||Ia:null,kr(),dn>0&&De&&De.push(e),e}function g(e,a,n,t,i,l){return to(x(e,a,n,t,i,l,!0))}function q(e,a,n,t,i){return to($(e,a,n,t,i,!0))}function Nn(e){return e?e.__v_isVNode===!0:!1}function Pa(e,a){return e.type===a.type&&e.key===a.key}const at="__vInternal",io=({key:e})=>e??null,Mn=({ref:e,ref_key:a,ref_for:n})=>e!=null?ve(e)||Pe(e)||Z(e)?{i:we,r:e,k:a,f:!!n}:e:null;function x(e,a=null,n=null,t=0,i=null,l=e===Q?0:1,o=!1,c=!1){const r={__v_isVNode:!0,__v_skip:!0,type:e,props:a,key:a&&io(a),ref:a&&Mn(a),scopeId:Qn,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:t,dynamicProps:i,dynamicChildren:null,appContext:null,ctx:we};return c?(li(r,n),l&128&&e.normalize(r)):n&&(r.shapeFlag|=ve(n)?8:16),dn>0&&!o&&De&&(r.patchFlag>0||l&6)&&r.patchFlag!==32&&De.push(r),r}const $=xr;function xr(e,a=null,n=null,t=0,i=null,l=!1){if((!e||e===ql)&&(e=Ae),Nn(e)){const c=_a(e,a,!0);return n&&li(c,n),dn>0&&!l&&De&&(c.shapeFlag&6?De[De.indexOf(e)]=c:De.push(c)),c.patchFlag|=-2,c}if(Mr(e)&&(e=e.__vccOpts),a){a=vr(a);let{class:c,style:r}=a;c&&!ve(c)&&(a.class=_e(c)),fe(r)&&(wl(r)&&!K(r)&&(r=ye({},r)),a.style=Gn(r))}const o=ve(e)?1:Hc(e)?128:gr(e)?64:fe(e)?4:Z(e)?2:0;return x(e,a,n,t,i,o,l,!0)}function vr(e){return e?wl(e)||at in e?ye({},e):e:null}function _a(e,a,n=!1){const{props:t,ref:i,patchFlag:l,children:o}=e,c=a?Rn(t||{},a):t;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:c,key:c&&io(c),ref:a&&a.ref?n&&i?K(i)?i.concat(Mn(a)):[i,Mn(a)]:Mn(a):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:a&&e.type!==Q?l===-1?16:l|16:l,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&_a(e.ssContent),ssFallback:e.ssFallback&&_a(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function Ce(e=" ",a=0){return $(Ka,null,e,a)}function Er(e,a){const n=$(Ga,null,e);return n.staticCount=a,n}function B(e="",a=!1){return a?(d(),q(Ae,null,e)):$(Ae,null,e)}function He(e){return e==null||typeof e=="boolean"?$(Ae):K(e)?$(Q,null,e.slice()):typeof e=="object"?ha(e):$(Ka,null,String(e))}function ha(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:_a(e)}function li(e,a){let n=0;const{shapeFlag:t}=e;if(a==null)a=null;else if(K(a))n=16;else if(typeof a=="object")if(t&65){const i=a.default;i&&(i._c&&(i._d=!1),li(e,i()),i._c&&(i._d=!0));return}else{n=32;const i=a._;!i&&!(at in a)?a._ctx=we:i===3&&we&&(we.slots._===1?a._=1:(a._=2,e.patchFlag|=1024))}else Z(a)?(a={default:a,_ctx:we},n=32):(a=String(a),t&64?(n=16,a=[Ce(a)]):n=8);e.children=a,e.shapeFlag|=n}function Rn(...e){const a={};for(let n=0;n<e.length;n++){const t=e[n];for(const i in t)if(i==="class")a.class!==t.class&&(a.class=_e([a.class,t.class]));else if(i==="style")a.style=Gn([a.style,t.style]);else if(fn(i)){const l=a[i],o=t[i];o&&l!==o&&!(K(l)&&l.includes(o))&&(a[i]=l?[].concat(l,o):o)}else i!==""&&(a[i]=t[i])}return a}function ze(e,a,n,t=null){Oe(e,a,7,[n,t])}const yr=ao();let Cr=0;function Sr(e,a,n){const t=e.type,i=(a?a.appContext:e.appContext)||yr,l={uid:Cr++,vnode:e,type:t,parent:a,appContext:i,root:null,next:null,subTree:null,effect:null,update:null,scope:new Qo(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ql(t,i),emitsOptions:Il(t,i),emit:null,emitted:null,propsDefaults:ge,inheritAttrs:t.inheritAttrs,ctx:ge,data:ge,props:ge,attrs:ge,slots:ge,refs:ge,setupState:ge,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=a?a.root:l,l.emit=Ic.bind(null,l),e.ce&&e.ce(l),l}let xe=null;const nt=()=>xe||we,Wa=e=>{xe=e,e.scope.on()},Ra=()=>{xe&&xe.scope.off(),xe=null};function lo(e){return e.vnode.shapeFlag&4}let pn=!1;function jr(e,a=!1){pn=a;const{props:n,children:t}=e.vnode,i=lo(e);cr(e,n,i,a),sr(e,t);const l=i?Pr(e,a):void 0;return pn=!1,l}function Pr(e,a){const n=e.type;e.accessCache=Object.create(null),e.proxy=nn(new Proxy(e.ctx,ar));const{setup:t}=n;if(t){const i=e.setupContext=t.length>1?co(e):null;Wa(e),Ya();const l=pa(t,e,0,[e.props,i]);if(Qa(),Ra(),pl(l)){if(l.then(Ra,Ra),a)return l.then(o=>{zi(e,o,a)}).catch(o=>{Jn(o,e,0)});e.asyncDep=l}else zi(e,l,a)}else oo(e,a)}function zi(e,a,n){Z(a)?e.type.__ssrInlineRender?e.ssrRender=a:e.render=a:fe(a)&&(e.setupState=Fl(a)),oo(e,n)}let Oi;function oo(e,a,n){const t=e.type;if(!e.render){if(!a&&Oi&&!t.render){const i=t.template||ti(e).template;if(i){const{isCustomElement:l,compilerOptions:o}=e.appContext.config,{delimiters:c,compilerOptions:r}=t,s=ye(ye({isCustomElement:l,delimiters:c},o),r);t.render=Oi(i,s)}}e.render=t.render||Ue}Wa(e),Ya(),nr(e),Qa(),Ra()}function wr(e){return new Proxy(e.attrs,{get(a,n){return Fe(e,"get","$attrs"),a[n]}})}function co(e){const a=t=>{e.exposed=t||{}};let n;return{get attrs(){return n||(n=wr(e))},slots:e.slots,emit:e.emit,expose:a}}function oi(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Fl(nn(e.exposed)),{get(a,n){if(n in a)return a[n];if(n in tn)return tn[n](e)},has(a,n){return n in a||n in tn}}))}function $r(e,a=!0){return Z(e)?e.displayName||e.name:e.name||a&&e.__name}function Mr(e){return Z(e)&&"__vccOpts"in e}const U=(e,a)=>Rc(e,a,pn);function Rr(){return Fr().slots}function Fr(){const e=nt();return e.setupContext||(e.setupContext=co(e))}function zn(e,a,n){const t=arguments.length;return t===2?fe(a)&&!K(a)?Nn(a)?$(e,null,[a]):$(e,a):$(e,null,a):(t>3?n=Array.prototype.slice.call(arguments,2):t===3&&Nn(n)&&(n=[n]),$(e,a,n))}const Tr=Symbol(""),Lr=()=>qe(Tr),Vr="3.2.47",Ar="http://www.w3.org/2000/svg",wa=typeof document<"u"?document:null,Bi=wa&&wa.createElement("template"),Ir={insert:(e,a,n)=>{a.insertBefore(e,n||null)},remove:e=>{const a=e.parentNode;a&&a.removeChild(e)},createElement:(e,a,n,t)=>{const i=a?wa.createElementNS(Ar,e):wa.createElement(e,n?{is:n}:void 0);return e==="select"&&t&&t.multiple!=null&&i.setAttribute("multiple",t.multiple),i},createText:e=>wa.createTextNode(e),createComment:e=>wa.createComment(e),setText:(e,a)=>{e.nodeValue=a},setElementText:(e,a)=>{e.textContent=a},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>wa.querySelector(e),setScopeId(e,a){e.setAttribute(a,"")},insertStaticContent(e,a,n,t,i,l){const o=n?n.previousSibling:a.lastChild;if(i&&(i===l||i.nextSibling))for(;a.insertBefore(i.cloneNode(!0),n),!(i===l||!(i=i.nextSibling)););else{Bi.innerHTML=t?`<svg>${e}</svg>`:e;const c=Bi.content;if(t){const r=c.firstChild;for(;r.firstChild;)c.appendChild(r.firstChild);c.removeChild(r)}a.insertBefore(c,n)}return[o?o.nextSibling:a.firstChild,n?n.previousSibling:a.lastChild]}};function Nr(e,a,n){const t=e._vtc;t&&(a=(a?[a,...t]:[...t]).join(" ")),a==null?e.removeAttribute("class"):n?e.setAttribute("class",a):e.className=a}function zr(e,a,n){const t=e.style,i=ve(n);if(n&&!i){if(a&&!ve(a))for(const l in a)n[l]==null&&Rt(t,l,"");for(const l in n)Rt(t,l,n[l])}else{const l=t.display;i?a!==n&&(t.cssText=n):a&&e.removeAttribute("style"),"_vod"in e&&(t.display=l)}}const Hi=/\s*!important$/;function Rt(e,a,n){if(K(n))n.forEach(t=>Rt(e,a,t));else if(n==null&&(n=""),a.startsWith("--"))e.setProperty(a,n);else{const t=Or(e,a);Hi.test(n)?e.setProperty(Ja(t),n.replace(Hi,""),"important"):e[t]=n}}const Gi=["Webkit","Moz","ms"],pt={};function Or(e,a){const n=pt[a];if(n)return n;let t=Xe(a);if(t!=="filter"&&t in e)return pt[a]=t;t=qn(t);for(let i=0;i<Gi.length;i++){const l=Gi[i]+t;if(l in e)return pt[a]=l}return a}const Di="http://www.w3.org/1999/xlink";function Br(e,a,n,t,i){if(t&&a.startsWith("xlink:"))n==null?e.removeAttributeNS(Di,a.slice(6,a.length)):e.setAttributeNS(Di,a,n);else{const l=Bo(a);n==null||l&&!hl(n)?e.removeAttribute(a):e.setAttribute(a,l?"":n)}}function Hr(e,a,n,t,i,l,o){if(a==="innerHTML"||a==="textContent"){t&&o(t,i,l),e[a]=n??"";return}if(a==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=n;const r=n??"";(e.value!==r||e.tagName==="OPTION")&&(e.value=r),n==null&&e.removeAttribute(a);return}let c=!1;if(n===""||n==null){const r=typeof e[a];r==="boolean"?n=hl(n):n==null&&r==="string"?(n="",c=!0):r==="number"&&(n=0,c=!0)}try{e[a]=n}catch{}c&&e.removeAttribute(a)}function Gr(e,a,n,t){e.addEventListener(a,n,t)}function Dr(e,a,n,t){e.removeEventListener(a,n,t)}function Ur(e,a,n,t,i=null){const l=e._vei||(e._vei={}),o=l[a];if(t&&o)o.value=t;else{const[c,r]=qr(a);if(t){const s=l[a]=Jr(t,i);Gr(e,c,s,r)}else o&&(Dr(e,c,o,r),l[a]=void 0)}}const Ui=/(?:Once|Passive|Capture)$/;function qr(e){let a;if(Ui.test(e)){a={};let t;for(;t=e.match(Ui);)e=e.slice(0,e.length-t[0].length),a[t[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):Ja(e.slice(2)),a]}let bt=0;const Kr=Promise.resolve(),Wr=()=>bt||(Kr.then(()=>bt=0),bt=Date.now());function Jr(e,a){const n=t=>{if(!t._vts)t._vts=Date.now();else if(t._vts<=n.attached)return;Oe(Yr(t,n.value),a,5,[t])};return n.value=e,n.attached=Wr(),n}function Yr(e,a){if(K(a)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},a.map(t=>i=>!i._stopped&&t&&t(i))}else return a}const qi=/^on[a-z]/,Qr=(e,a,n,t,i=!1,l,o,c,r)=>{a==="class"?Nr(e,t,i):a==="style"?zr(e,n,t):fn(a)?Ot(a)||Ur(e,a,n,t,o):(a[0]==="."?(a=a.slice(1),!0):a[0]==="^"?(a=a.slice(1),!1):Xr(e,a,t,i))?Hr(e,a,t,l,o,c,r):(a==="true-value"?e._trueValue=t:a==="false-value"&&(e._falseValue=t),Br(e,a,t,i))};function Xr(e,a,n,t){return t?!!(a==="innerHTML"||a==="textContent"||a in e&&qi.test(a)&&Z(n)):a==="spellcheck"||a==="draggable"||a==="translate"||a==="form"||a==="list"&&e.tagName==="INPUT"||a==="type"&&e.tagName==="TEXTAREA"||qi.test(a)&&ve(n)?!1:a in e}function Zr(e){const a=nt();if(!a)return;const n=a.ut=(i=e(a.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner="${a.uid}"]`)).forEach(l=>Tt(l,i))},t=()=>{const i=e(a.proxy);Ft(a.subTree,i),n(i)};zl(t),Ie(()=>{const i=new MutationObserver(t);i.observe(a.subTree.el.parentNode,{childList:!0}),fa(()=>i.disconnect())})}function Ft(e,a){if(e.shapeFlag&128){const n=e.suspense;e=n.activeBranch,n.pendingBranch&&!n.isHydrating&&n.effects.push(()=>{Ft(n.activeBranch,a)})}for(;e.component;)e=e.component.subTree;if(e.shapeFlag&1&&e.el)Tt(e.el,a);else if(e.type===Q)e.children.forEach(n=>Ft(n,a));else if(e.type===Ga){let{el:n,anchor:t}=e;for(;n&&(Tt(n,a),n!==t);)n=n.nextSibling}}function Tt(e,a){if(e.nodeType===1){const n=e.style;for(const t in a)n.setProperty(`--${t}`,a[t])}}const ma="transition",Za="animation",tt=(e,{slots:a})=>zn(Bl,em(e),a);tt.displayName="Transition";const ro={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};tt.props=ye({},Bl.props,ro);const ya=(e,a=[])=>{K(e)?e.forEach(n=>n(...a)):e&&e(...a)},Ki=e=>e?K(e)?e.some(a=>a.length>1):e.length>1:!1;function em(e){const a={};for(const I in e)I in ro||(a[I]=e[I]);if(e.css===!1)return a;const{name:n="v",type:t,duration:i,enterFromClass:l=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:c=`${n}-enter-to`,appearFromClass:r=l,appearActiveClass:s=o,appearToClass:u=c,leaveFromClass:b=`${n}-leave-from`,leaveActiveClass:_=`${n}-leave-active`,leaveToClass:C=`${n}-leave-to`}=e,z=am(i),V=z&&z[0],X=z&&z[1],{onBeforeEnter:k,onEnter:M,onEnterCancelled:L,onLeave:J,onLeaveCancelled:ae,onBeforeAppear:de=k,onAppear:ie=M,onAppearCancelled:T=L}=a,ee=(I,ne,H)=>{Ca(I,ne?u:c),Ca(I,ne?s:o),H&&H()},Y=(I,ne)=>{I._isLeaving=!1,Ca(I,b),Ca(I,C),Ca(I,_),ne&&ne()},ce=I=>(ne,H)=>{const Te=I?ie:M,he=()=>ee(ne,I,H);ya(Te,[ne,he]),Wi(()=>{Ca(ne,I?r:l),sa(ne,I?u:c),Ki(Te)||Ji(ne,t,V,he)})};return ye(a,{onBeforeEnter(I){ya(k,[I]),sa(I,l),sa(I,o)},onBeforeAppear(I){ya(de,[I]),sa(I,r),sa(I,s)},onEnter:ce(!1),onAppear:ce(!0),onLeave(I,ne){I._isLeaving=!0;const H=()=>Y(I,ne);sa(I,b),im(),sa(I,_),Wi(()=>{I._isLeaving&&(Ca(I,b),sa(I,C),Ki(J)||Ji(I,t,X,H))}),ya(J,[I,H])},onEnterCancelled(I){ee(I,!1),ya(L,[I])},onAppearCancelled(I){ee(I,!0),ya(T,[I])},onLeaveCancelled(I){Y(I),ya(ae,[I])}})}function am(e){if(e==null)return null;if(fe(e))return[_t(e.enter),_t(e.leave)];{const a=_t(e);return[a,a]}}function _t(e){return Jo(e)}function sa(e,a){a.split(/\s+/).forEach(n=>n&&e.classList.add(n)),(e._vtc||(e._vtc=new Set)).add(a)}function Ca(e,a){a.split(/\s+/).forEach(t=>t&&e.classList.remove(t));const{_vtc:n}=e;n&&(n.delete(a),n.size||(e._vtc=void 0))}function Wi(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let nm=0;function Ji(e,a,n,t){const i=e._endId=++nm,l=()=>{i===e._endId&&t()};if(n)return setTimeout(l,n);const{type:o,timeout:c,propCount:r}=tm(e,a);if(!o)return t();const s=o+"end";let u=0;const b=()=>{e.removeEventListener(s,_),l()},_=C=>{C.target===e&&++u>=r&&b()};setTimeout(()=>{u<r&&b()},c+1),e.addEventListener(s,_)}function tm(e,a){const n=window.getComputedStyle(e),t=z=>(n[z]||"").split(", "),i=t(`${ma}Delay`),l=t(`${ma}Duration`),o=Yi(i,l),c=t(`${Za}Delay`),r=t(`${Za}Duration`),s=Yi(c,r);let u=null,b=0,_=0;a===ma?o>0&&(u=ma,b=o,_=l.length):a===Za?s>0&&(u=Za,b=s,_=r.length):(b=Math.max(o,s),u=b>0?o>s?ma:Za:null,_=u?u===ma?l.length:r.length:0);const C=u===ma&&/\b(transform|all)(,|$)/.test(t(`${ma}Property`).toString());return{type:u,timeout:b,propCount:_,hasTransform:C}}function Yi(e,a){for(;e.length<a.length;)e=e.concat(e);return Math.max(...a.map((n,t)=>Qi(n)+Qi(e[t])))}function Qi(e){return Number(e.slice(0,-1).replace(",","."))*1e3}function im(){return document.body.offsetHeight}const lm=["ctrl","shift","alt","meta"],om={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,a)=>lm.some(n=>e[`${n}Key`]&&!a.includes(n))},cm=(e,a)=>(n,...t)=>{for(let i=0;i<a.length;i++){const l=om[a[i]];if(l&&l(n,a))return}return e(n,...t)},rm=ye({patchProp:Qr},Ir);let ft,Xi=!1;function mm(){return ft=Xi?ft:br(rm),Xi=!0,ft}const sm=(...e)=>{const a=mm().createApp(...e),{mount:n}=a;return a.mount=t=>{const i=hm(t);if(i)return n(i,!0,i instanceof SVGElement)},a};function hm(e){return ve(e)?document.querySelector(e):e}const A=(e,a)=>{const n=e.__vccOpts||e;for(const[t,i]of a)n[t]=i;return n},um={props:["caption"],computed:{spec(){let e=this.$slots.default?this.$slots.default()[0].children:"<undefined>";return e in this.$pydocData?this.$pydocData[e]:{kind:"unknown",name:e,path:e}},label(){if(this.caption)return this.caption;let e=this.spec.path;return this.spec.kind=="routine"&&(e=e+"()"),e.startsWith("machinable.")&&(e=e.substring(11)),e}}};function dm(e,a,n,t,i,l){return d(),g("a",{href:"#",style:Gn(l.spec.kind=="unknown"?{color:"red"}:{})},oe(l.label),5)}const pm=A(um,[["render",dm]]),bm="modulepreload",_m=function(e){return"/"+e},Zi={},fm=function(a,n,t){if(!n||n.length===0)return a();const i=document.getElementsByTagName("link");return Promise.all(n.map(l=>{if(l=_m(l),l in Zi)return;Zi[l]=!0;const o=l.endsWith(".css"),c=o?'[rel="stylesheet"]':"";if(!!t)for(let u=i.length-1;u>=0;u--){const b=i[u];if(b.href===l&&(!o||b.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${l}"]${c}`))return;const s=document.createElement("link");if(s.rel=o?"stylesheet":bm,o||(s.as="script",s.crossOrigin=""),s.href=l,document.head.appendChild(s),o)return new Promise((u,b)=>{s.addEventListener("load",u),s.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${l}`)))})})).then(()=>a())};const gm=O({__name:"VPBadge",props:{text:null,type:null},setup(e){return(a,n)=>(d(),g("span",{class:_e(["VPBadge",e.type??"tip"])},[P(a.$slots,"default",{},()=>[Ce(oe(e.text),1)],!0)],2))}});const km=A(gm,[["__scopeId","data-v-350d3852"]]),xm=JSON.parse('{"lang":"en-US","dir":"ltr","title":"machinable","description":"A modular configuration system for research projects","base":"/","head":[],"appearance":true,"themeConfig":{"logo":"/logo/logo.svg","nav":[{"text":"Tutorial","link":"/tutorial/introduction"},{"text":"Reference","link":"/reference/"},{"text":"Examples","link":"/examples/overview"},{"text":"About","items":[{"text":"Approach","link":"/about/approach"},{"text":"Changelog","link":"https://github.com/machinable-org/machinable/blob/main/CHANGELOG.md"}]}],"sidebar":{"/tutorial/":[{"text":"Getting Started","items":[{"text":"Introduction","link":"/tutorial/introduction"},{"text":"Installation","link":"/tutorial/installation"}]},{"text":"Essentials","items":[{"text":"Project structure","link":"/tutorial/essentials/project-structure"},{"text":"Implementing experiments","link":"/tutorial/essentials/implementing-experiments"},{"text":"Running experiments","link":"/tutorial/essentials/running-experiments"},{"text":"Storage and retrieval","link":"/tutorial/essentials/storage-and-retrieval"}]},{"text":"Elements in-depth","items":[{"text":"Overview","link":"/tutorial/elements-in-depth/overview"},{"text":"Advanced configuration","link":"/tutorial/elements-in-depth/advanced-configuration"},{"text":"Relationships","link":"/tutorial/elements-in-depth/relationships"},{"text":"Experiments","link":"/tutorial/elements-in-depth/experiments"},{"text":"Execution","link":"/tutorial/elements-in-depth/execution"}]},{"text":"Extra topics","items":[{"text":"Collections","link":"/tutorial/extra-topics/collections"},{"text":"CLI","link":"/tutorial/extra-topics/cli"}]}]},"footer":{"message":"MIT Licensed","copyright":"Copyright © 2021-present"},"socialLinks":[{"icon":"github","link":"https://github.com/machinable-org/machinable"}],"editLink":{"pattern":"https://github.com/machinable-org/machinable/edit/main/docs/:path","text":"Edit this page on GitHub"}},"locales":{},"scrollOffset":90,"cleanUrls":false}'),it=/^[a-z]+:/i,vm=/^pathname:\/\//,el="vitepress-theme-appearance",mo=/#.*$/,Em=/(index)?\.(md|html)$/,Se=typeof document<"u",so={relativePath:"",title:"404",description:"Not Found",headers:[],frontmatter:{sidebar:!1,layout:"page"},lastUpdated:0};function Ta(e,a,n=!1){if(a===void 0)return!1;if(e=al(`/${e}`),n)return new RegExp(a).test(e);if(al(a)!==e)return!1;const t=a.match(mo);return t?(Se?location.hash:"")===t[0]:!0}function al(e){return decodeURI(e).replace(mo,"").replace(Em,"")}function ho(e){return it.test(e)}function ym(e,a){var t,i,l,o,c,r,s;const n=Object.keys(e.locales).find(u=>u!=="root"&&!ho(u)&&Ta(a,`/${u}/`,!0))||"root";return Object.assign({},e,{localeIndex:n,lang:((t=e.locales[n])==null?void 0:t.lang)??e.lang,dir:((i=e.locales[n])==null?void 0:i.dir)??e.dir,title:((l=e.locales[n])==null?void 0:l.title)??e.title,titleTemplate:((o=e.locales[n])==null?void 0:o.titleTemplate)??e.titleTemplate,description:((c=e.locales[n])==null?void 0:c.description)??e.description,head:po(e.head,((r=e.locales[n])==null?void 0:r.head)??[]),themeConfig:{...e.themeConfig,...(s=e.locales[n])==null?void 0:s.themeConfig}})}function uo(e,a){const n=a.title||e.title,t=a.titleTemplate??e.titleTemplate;if(typeof t=="string"&&t.includes(":title"))return t.replace(/:title/g,n);const i=Cm(e.title,t);return`${n}${i}`}function Cm(e,a){return a===!1?"":a===!0||a===void 0?` | ${e}`:e===a?"":` | ${a}`}function Sm(e,a){const[n,t]=a;if(n!=="meta")return!1;const i=Object.entries(t)[0];return i==null?!1:e.some(([l,o])=>l===n&&o[i[0]]===i[1])}function po(e,a){return[...e.filter(n=>!Sm(a,n)),...a]}const jm=/[\u0000-\u001F"#$&*+,:;<=>?[\]^`{|}\u007F]/g,Pm=/^[a-z]:/i;function nl(e){const a=Pm.exec(e),n=a?a[0]:"";return n+e.slice(n.length).replace(jm,"_").replace(/(^|\/)_+(?=[^/]*$)/,"$1")}const bo=Symbol(),ua=Pc(xm);function wm(e){const a=U(()=>ym(ua.value,e.data.relativePath));return{site:a,theme:U(()=>a.value.themeConfig),page:U(()=>e.data),frontmatter:U(()=>e.data.frontmatter),lang:U(()=>a.value.lang),dir:U(()=>a.value.dir),localeIndex:U(()=>a.value.localeIndex||"root"),title:U(()=>uo(a.value,e.data)),description:U(()=>e.data.description||a.value.description),isDark:me(!1)}}function _o(){const e=qe(bo);if(!e)throw new Error("vitepress data not properly injected in app");return e}function $m(e,a){return`${e}${a}`.replace(/\/+/g,"/")}function bn(e){return it.test(e)||e.startsWith(".")?e:$m(ua.value.base,e)}function fo(e){let a=e.replace(/\.html$/,"");if(a=decodeURIComponent(a),a=a.replace(/\/$/,"/index"),Se){const n="/";a=nl(a.slice(n.length).replace(/\//g,"_")||"index")+".md";let t=__VP_HASH_MAP__[a.toLowerCase()];t||(a=a.endsWith("_index.md")?a.slice(0,-9)+".md":a.slice(0,-3)+"_index.md",t=__VP_HASH_MAP__[a.toLowerCase()]),a=`${n}assets/${a}.${t}.js`}else a=`./${nl(a.slice(1).replace(/\//g,"_"))}.md.js`;return a}const go=Symbol(),tl="http://a.com",Mm=()=>({path:"/",component:null,data:so});function Rm(e,a){const n=Wn(Mm()),t={route:n,go:i};async function i(c=Se?location.href:"/"){var s,u;await((s=t.onBeforeRouteChange)==null?void 0:s.call(t,c));const r=new URL(c,tl);ua.value.cleanUrls||!r.pathname.endsWith("/")&&!r.pathname.endsWith(".html")&&(r.pathname+=".html",c=r.pathname+r.search+r.hash),Se&&c!==location.href&&(history.replaceState({scrollPosition:window.scrollY},document.title),history.pushState(null,"",c)),await o(c),await((u=t.onAfterRouteChanged)==null?void 0:u.call(t,c))}let l=null;async function o(c,r=0,s=!1){const u=new URL(c,tl),b=l=u.pathname;try{let _=await e(b);if(l===b){l=null;const{default:C,__pageData:z}=_;if(!C)throw new Error(`Invalid route component: ${C}`);n.path=Se?b:bn(b),n.component=nn(C),n.data=nn(z),Se&&Zt(()=>{let V=ua.value.base+z.relativePath.replace(/(?:(^|\/)index)?\.md$/,"$1");if(!ua.value.cleanUrls&&!V.endsWith("/")&&(V+=".html"),V!==u.pathname&&(u.pathname=V,c=V+u.search+u.hash,history.replaceState(null,"",c)),u.hash&&!r){let X=null;try{X=document.querySelector(decodeURIComponent(u.hash))}catch(k){console.warn(k)}if(X){il(X,u.hash);return}}window.scrollTo(0,r)})}}catch(_){if(!/fetch/.test(_.message)&&!/^\/404(\.html|\/)?$/.test(c)&&console.error(_),!s)try{const C=await fetch(ua.value.base+"hashmap.json");window.__VP_HASH_MAP__=await C.json(),await o(c,r,!0);return}catch{}l===b&&(l=null,n.path=Se?b:bn(b),n.component=a?nn(a):null,n.data=so)}}return Se&&(window.addEventListener("click",c=>{if(c.target.closest("button"))return;const s=c.target.closest("a");if(s&&!s.closest(".vp-raw")&&(s instanceof SVGElement||!s.download)){const{target:u}=s,{href:b,origin:_,pathname:C,hash:z,search:V}=new URL(s.href instanceof SVGAnimatedString?s.href.animVal:s.href,s.baseURI),X=window.location,k=C.match(/\.\w+$/);!c.ctrlKey&&!c.shiftKey&&!c.altKey&&!c.metaKey&&u!=="_blank"&&_===X.origin&&!(k&&k[0]!==".html")&&(c.preventDefault(),C===X.pathname&&V===X.search?z&&z!==X.hash&&(history.pushState(null,"",z),window.dispatchEvent(new Event("hashchange")),il(s,z,s.classList.contains("header-anchor"))):i(b))}},{capture:!0}),window.addEventListener("popstate",c=>{o(location.href,c.state&&c.state.scrollPosition||0)}),window.addEventListener("hashchange",c=>{c.preventDefault()})),t}function Fm(){const e=qe(go);if(!e)throw new Error("useRouter() is called without provider.");return e}function ga(){return Fm().route}function il(e,a,n=!1){let t=null;try{t=e.classList.contains("header-anchor")?e:document.querySelector(decodeURIComponent(a))}catch(i){console.warn(i)}if(t){let i=ua.value.scrollOffset;typeof i=="string"&&(i=document.querySelector(i).getBoundingClientRect().bottom+24);const l=parseInt(window.getComputedStyle(t).paddingTop,10),o=window.scrollY+t.getBoundingClientRect().top-i+l;!n||Math.abs(o-window.scrollY)>window.innerHeight?window.scrollTo(0,o):window.scrollTo({left:0,top:o,behavior:"smooth"})}}const Tm=O({name:"VitePressContent",props:{onContentUpdated:Function},setup(e){const a=ga();return ai(()=>{var n;(n=e.onContentUpdated)==null||n.call(e)}),()=>zn("div",{style:{position:"relative"}},[a.component?zn(a.component):null])}}),se=_o;var ll;const ko=typeof window<"u",Lm=e=>typeof e=="string",Vm=()=>{};ko&&((ll=window==null?void 0:window.navigator)!=null&&ll.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function xo(e){return typeof e=="function"?e():p(e)}function Am(e){return e}function vo(e){return fl()?(Zo(e),!0):!1}function Im(e){return typeof e=="function"?U(e):me(e)}function Nm(e,a=!0){nt()?Ie(e):a?e():Zt(e)}function zm(e){var a;const n=xo(e);return(a=n==null?void 0:n.$el)!=null?a:n}const ci=ko?window:void 0;function Om(...e){let a,n,t,i;if(Lm(e[0])||Array.isArray(e[0])?([n,t,i]=e,a=ci):[a,n,t,i]=e,!a)return Vm;Array.isArray(n)||(n=[n]),Array.isArray(t)||(t=[t]);const l=[],o=()=>{l.forEach(u=>u()),l.length=0},c=(u,b,_,C)=>(u.addEventListener(b,_,C),()=>u.removeEventListener(b,_,C)),r=Qe(()=>[zm(a),xo(i)],([u,b])=>{o(),u&&l.push(...n.flatMap(_=>t.map(C=>c(u,_,C,b))))},{immediate:!0,flush:"post"}),s=()=>{r(),o()};return vo(s),s}function Bm(e,a=!1){const n=me(),t=()=>n.value=Boolean(e());return t(),Nm(t,a),n}function Lt(e,a={}){const{window:n=ci}=a,t=Bm(()=>n&&"matchMedia"in n&&typeof n.matchMedia=="function");let i;const l=me(!1),o=()=>{i&&("removeEventListener"in i?i.removeEventListener("change",c):i.removeListener(c))},c=()=>{t.value&&(o(),i=n.matchMedia(Im(e).value),l.value=i.matches,"addEventListener"in i?i.addEventListener("change",c):i.addListener(c))};return Fa(c),vo(()=>o()),l}const Vt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},At="__vueuse_ssr_handlers__";Vt[At]=Vt[At]||{};Vt[At];var ol;(function(e){e.UP="UP",e.RIGHT="RIGHT",e.DOWN="DOWN",e.LEFT="LEFT",e.NONE="NONE"})(ol||(ol={}));var Hm=Object.defineProperty,cl=Object.getOwnPropertySymbols,Gm=Object.prototype.hasOwnProperty,Dm=Object.prototype.propertyIsEnumerable,rl=(e,a,n)=>a in e?Hm(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,Um=(e,a)=>{for(var n in a||(a={}))Gm.call(a,n)&&rl(e,n,a[n]);if(cl)for(var n of cl(a))Dm.call(a,n)&&rl(e,n,a[n]);return e};const qm={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};Um({linear:Am},qm);function Km({window:e=ci}={}){if(!e)return{x:me(0),y:me(0)};const a=me(e.scrollX),n=me(e.scrollY);return Om(e,"scroll",()=>{a.value=e.scrollX,n.value=e.scrollY},{capture:!1,passive:!0}),{x:a,y:n}}function Wm(e,a){let n,t=!1;return()=>{n&&clearTimeout(n),t?n=setTimeout(e,a):(e(),t=!0,setTimeout(()=>{t=!1},a))}}function It(e){return/^\//.test(e)?e:`/${e}`}function _n(e){if(ho(e))return e.replace(vm,"");const{site:a}=se(),{pathname:n,search:t,hash:i}=new URL(e,"http://example.com"),l=n.endsWith("/")||n.endsWith(".html")?e:e.replace(/(?:(^\.+)\/)?.*$/,`$1${n.replace(/(\.md)?$/,a.value.cleanUrls?"":".html")}${t}${i}`);return bn(l)}function Eo(e,a){if(Array.isArray(e))return e;if(e==null)return[];a=It(a);const n=Object.keys(e).sort((t,i)=>i.split("/").length-t.split("/").length).find(t=>a.startsWith(It(t)));return n?e[n]:[]}function Jm(e){const a=[];let n=0;for(const t in e){const i=e[t];if(i.items){n=a.push(i);continue}a[n]||a.push({items:[]}),a[n].items.push(i)}return a}function Ym(e){const a=[];function n(t){for(const i of t)i.text&&i.link&&a.push({text:i.text,link:i.link}),i.items&&n(i.items)}return n(e),a}function Nt(e,a){return Array.isArray(a)?a.some(n=>Nt(e,n)):Ta(e,a.link)?!0:a.items?Nt(e,a.items):!1}function oa(){const e=ga(),{theme:a,frontmatter:n}=se(),t=Lt("(min-width: 960px)"),i=me(!1),l=U(()=>{const C=a.value.sidebar,z=e.data.relativePath;return C?Eo(C,z):[]}),o=U(()=>n.value.sidebar!==!1&&l.value.length>0&&n.value.layout!=="home"),c=U(()=>n.value.layout==="home"?!1:n.value.aside!=null?!!n.value.aside:a.value.aside!==!1),r=U(()=>o.value&&t.value),s=U(()=>o.value?Jm(l.value):[]);function u(){i.value=!0}function b(){i.value=!1}function _(){i.value?b():u()}return{isOpen:i,sidebar:l,sidebarGroups:s,hasSidebar:o,hasAside:c,isSidebarEnabled:r,open:u,close:b,toggle:_}}function Qm(e,a){let n;Fa(()=>{n=e.value?document.activeElement:void 0}),Ie(()=>{window.addEventListener("keyup",t)}),fa(()=>{window.removeEventListener("keyup",t)});function t(i){i.key==="Escape"&&e.value&&(a(),n==null||n.focus())}}function Xm(e){const{page:a}=se(),n=me(!1),t=U(()=>e.value.collapsed!=null),i=U(()=>!!e.value.link),l=U(()=>Ta(a.value.relativePath,e.value.link)),o=U(()=>l.value?!0:e.value.items?Nt(a.value.relativePath,e.value.items):!1),c=U(()=>!!(e.value.items&&e.value.items.length));Fa(()=>{n.value=!!(t.value&&e.value.collapsed)}),Fa(()=>{(l.value||o.value)&&(n.value=!1)});function r(){t.value&&(n.value=!n.value)}return{collapsed:n,collapsible:t,isLink:i,isActiveLink:l,hasActiveLink:o,hasChildren:c,toggle:r}}const Zm=O({__name:"VPSkipLink",setup(e){const a=ga(),n=me();Qe(()=>a.path,()=>n.value.focus());function t({target:i}){const l=document.querySelector(i.hash);if(l){const o=()=>{l.removeAttribute("tabindex"),l.removeEventListener("blur",o)};l.setAttribute("tabindex","-1"),l.addEventListener("blur",o),l.focus(),window.scrollTo(0,0)}}return(i,l)=>(d(),g(Q,null,[x("span",{ref_key:"backToTop",ref:n,tabindex:"-1"},null,512),x("a",{href:"#VPContent",class:"VPSkipLink visually-hidden",onClick:t}," Skip to content ")],64))}});const es=A(Zm,[["__scopeId","data-v-151f2593"]]),as={key:0,class:"VPBackdrop"},ns=O({__name:"VPBackdrop",props:{show:{type:Boolean}},setup(e){return(a,n)=>(d(),q(tt,{name:"fade"},{default:R(()=>[e.show?(d(),g("div",as)):B("",!0)]),_:1}))}});const ts=A(ns,[["__scopeId","data-v-c79a1216"]]);function is(){const e=me(!1);function a(){e.value=!0,window.addEventListener("resize",i)}function n(){e.value=!1,window.removeEventListener("resize",i)}function t(){e.value?n():a()}function i(){window.outerWidth>=768&&n()}const l=ga();return Qe(()=>l.path,n),{isScreenOpen:e,openScreen:a,closeScreen:n,toggleScreen:t}}function gn({removeCurrent:e=!0,correspondingLink:a=!1}={}){const{site:n,localeIndex:t,page:i,theme:l}=se(),o=U(()=>{var r,s;return{label:(r=n.value.locales[t.value])==null?void 0:r.label,link:((s=n.value.locales[t.value])==null?void 0:s.link)||(t.value==="root"?"/":`/${t.value}/`)}});return{localeLinks:U(()=>Object.entries(n.value.locales).flatMap(([r,s])=>e&&o.value.label===s.label?[]:{text:s.label,link:ls(s.link||(r==="root"?"/":`/${r}/`),l.value.i18nRouting!==!1&&a,i.value.relativePath.slice(o.value.link.length-1),!n.value.cleanUrls)})),currentLang:o}}function ls(e,a,n,t){return a?e.replace(/\/$/,"")+It(n.replace(/(^|\/)?index.md$/,"$1").replace(/\.md$/,t?".html":"")):e}const os=["src","alt"],cs={inheritAttrs:!1},rs=O({...cs,__name:"VPImage",props:{image:null,alt:null},setup(e){return(a,n)=>{const t=ia("VPImage",!0);return e.image?(d(),g(Q,{key:0},[typeof e.image=="string"||"src"in e.image?(d(),g("img",Rn({key:0,class:"VPImage"},typeof e.image=="string"?a.$attrs:{...e.image,...a.$attrs},{src:p(bn)(typeof e.image=="string"?e.image:e.image.src),alt:e.alt??(typeof e.image=="string"?"":e.image.alt||"")}),null,16,os)):(d(),g(Q,{key:1},[$(t,Rn({class:"dark",image:e.image.dark,alt:e.image.alt},a.$attrs),null,16,["image","alt"]),$(t,Rn({class:"light",image:e.image.light,alt:e.image.alt},a.$attrs),null,16,["image","alt"])],64))],64)):B("",!0)}}});const ri=A(rs,[["__scopeId","data-v-6db2186b"]]),ms=["href"],ss=O({__name:"VPNavBarTitle",setup(e){const{site:a,theme:n}=se(),{hasSidebar:t}=oa(),{currentLang:i}=gn();return(l,o)=>(d(),g("div",{class:_e(["VPNavBarTitle",{"has-sidebar":p(t)}])},[x("a",{class:"title",href:p(_n)(p(i).link)},[P(l.$slots,"nav-bar-title-before",{},void 0,!0),p(n).logo?(d(),q(ri,{key:0,class:"logo",image:p(n).logo},null,8,["image"])):B("",!0),p(n).siteTitle?(d(),g(Q,{key:1},[Ce(oe(p(n).siteTitle),1)],64)):p(n).siteTitle===void 0?(d(),g(Q,{key:2},[Ce(oe(p(a).title),1)],64)):B("",!0),P(l.$slots,"nav-bar-title-after",{},void 0,!0)],8,ms)],2))}});const hs=A(ss,[["__scopeId","data-v-6d2fb2d9"]]);const us={key:0,class:"VPNavBarSearch"},ds={type:"button",class:"DocSearch DocSearch-Button","aria-label":"Search"},ps={class:"DocSearch-Button-Container"},bs=x("svg",{class:"DocSearch-Search-Icon",width:"20",height:"20",viewBox:"0 0 20 20"},[x("path",{d:"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z",stroke:"currentColor",fill:"none","fill-rule":"evenodd","stroke-linecap":"round","stroke-linejoin":"round"})],-1),_s={class:"DocSearch-Button-Placeholder"},fs=x("span",{class:"DocSearch-Button-Keys"},[x("kbd",{class:"DocSearch-Button-Key"}),x("kbd",{class:"DocSearch-Button-Key"},"K")],-1),gs=O({__name:"VPNavBarSearch",setup(e){Zr(u=>({"636b0e38":l.value}));const a=()=>null,{theme:n,localeIndex:t}=se(),i=me(!1),l=me("'Meta'"),o=U(()=>{var u,b,_,C,z,V,X,k;return((z=(C=(_=(b=(u=n.value.algolia)==null?void 0:u.locales)==null?void 0:b[t.value])==null?void 0:_.translations)==null?void 0:C.button)==null?void 0:z.buttonText)||((k=(X=(V=n.value.algolia)==null?void 0:V.translations)==null?void 0:X.button)==null?void 0:k.buttonText)||"Search"}),c=()=>{const u="VPAlgoliaPreconnect";(window.requestIdleCallback||setTimeout)(()=>{const _=document.createElement("link");_.id=u,_.rel="preconnect",_.href=`https://${n.value.algolia.appId}-dsn.algolia.net`,_.crossOrigin="",document.head.appendChild(_)})};Ie(()=>{if(!n.value.algolia)return;c(),l.value=/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)?"'⌘'":"'Ctrl'";const u=_=>{_.key==="k"&&(_.ctrlKey||_.metaKey)&&(_.preventDefault(),r(),b())},b=()=>{window.removeEventListener("keydown",u)};window.addEventListener("keydown",u),fa(b)});function r(){i.value||(i.value=!0,setTimeout(s,16))}function s(){const u=new Event("keydown");u.key="k",u.metaKey=!0,window.dispatchEvent(u),setTimeout(()=>{document.querySelector(".DocSearch-Modal")||s()},16)}return(u,b)=>p(n).algolia?(d(),g("div",us,[i.value?(d(),q(p(a),{key:0,algolia:p(n).algolia},null,8,["algolia"])):(d(),g("div",{key:1,id:"docsearch",onClick:r},[x("button",ds,[x("span",ps,[bs,x("span",_s,oe(p(o)),1)]),fs])]))])):B("",!0)}});const ks={},xs={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",height:"24px",viewBox:"0 0 24 24",width:"24px"},vs=x("path",{d:"M0 0h24v24H0V0z",fill:"none"},null,-1),Es=x("path",{d:"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5H9z"},null,-1),ys=[vs,Es];function Cs(e,a){return d(),g("svg",xs,ys)}const Ss=A(ks,[["render",Cs]]),js=O({__name:"VPLink",props:{tag:null,href:null,noIcon:{type:Boolean}},setup(e){const a=e,n=U(()=>a.tag??a.href?"a":"span"),t=U(()=>a.href&&it.test(a.href));return(i,l)=>(d(),q(un(p(n)),{class:_e(["VPLink",{link:e.href}]),href:e.href?p(_n)(e.href):void 0,target:p(t)?"_blank":void 0,rel:p(t)?"noreferrer":void 0},{default:R(()=>[P(i.$slots,"default",{},void 0,!0),p(t)&&!e.noIcon?(d(),q(Ss,{key:0,class:"icon"})):B("",!0)]),_:3},8,["class","href","target","rel"]))}});const ka=A(js,[["__scopeId","data-v-30c06bd3"]]),Ps=O({__name:"VPNavBarMenuLink",props:{item:null},setup(e){const{page:a}=se();return(n,t)=>(d(),q(ka,{class:_e({VPNavBarMenuLink:!0,active:p(Ta)(p(a).relativePath,e.item.activeMatch||e.item.link,!!e.item.activeMatch)}),href:e.item.link,noIcon:!0},{default:R(()=>[Ce(oe(e.item.text),1)]),_:1},8,["class","href"]))}});const ws=A(Ps,[["__scopeId","data-v-95f5d58b"]]),mi=me();let yo=!1,gt=0;function $s(e){const a=me(!1);if(Se){!yo&&Ms(),gt++;const n=Qe(mi,t=>{var i,l,o;t===e.el.value||(i=e.el.value)!=null&&i.contains(t)?(a.value=!0,(l=e.onFocus)==null||l.call(e)):(a.value=!1,(o=e.onBlur)==null||o.call(e))});fa(()=>{n(),gt--,gt||Rs()})}return Jt(a)}function Ms(){document.addEventListener("focusin",Co),yo=!0,mi.value=document.activeElement}function Rs(){document.removeEventListener("focusin",Co)}function Co(){mi.value=document.activeElement}const Fs={},Ts={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Ls=x("path",{d:"M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-6,6C12.5,15.9,12.3,16,12,16z"},null,-1),Vs=[Ls];function As(e,a){return d(),g("svg",Ts,Vs)}const So=A(Fs,[["render",As]]),Is={},Ns={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},zs=x("circle",{cx:"12",cy:"12",r:"2"},null,-1),Os=x("circle",{cx:"19",cy:"12",r:"2"},null,-1),Bs=x("circle",{cx:"5",cy:"12",r:"2"},null,-1),Hs=[zs,Os,Bs];function Gs(e,a){return d(),g("svg",Ns,Hs)}const Ds=A(Is,[["render",Gs]]),Us={class:"VPMenuLink"},qs=O({__name:"VPMenuLink",props:{item:null},setup(e){const{page:a}=se();return(n,t)=>(d(),g("div",Us,[$(ka,{class:_e({active:p(Ta)(p(a).relativePath,e.item.activeMatch||e.item.link,!!e.item.activeMatch)}),href:e.item.link},{default:R(()=>[Ce(oe(e.item.text),1)]),_:1},8,["class","href"])]))}});const lt=A(qs,[["__scopeId","data-v-a5bbb52c"]]),Ks={class:"VPMenuGroup"},Ws={key:0,class:"title"},Js=O({__name:"VPMenuGroup",props:{text:null,items:null},setup(e){return(a,n)=>(d(),g("div",Ks,[e.text?(d(),g("p",Ws,oe(e.text),1)):B("",!0),(d(!0),g(Q,null,$e(e.items,t=>(d(),g(Q,null,["link"in t?(d(),q(lt,{key:0,item:t},null,8,["item"])):B("",!0)],64))),256))]))}});const Ys=A(Js,[["__scopeId","data-v-b66affaf"]]),Qs={class:"VPMenu"},Xs={key:0,class:"items"},Zs=O({__name:"VPMenu",props:{items:null},setup(e){return(a,n)=>(d(),g("div",Qs,[e.items?(d(),g("div",Xs,[(d(!0),g(Q,null,$e(e.items,t=>(d(),g(Q,{key:t.text},["link"in t?(d(),q(lt,{key:0,item:t},null,8,["item"])):(d(),q(Ys,{key:1,text:t.text,items:t.items},null,8,["text","items"]))],64))),128))])):B("",!0),P(a.$slots,"default",{},void 0,!0)]))}});const eh=A(Zs,[["__scopeId","data-v-e7ea1737"]]),ah=["aria-expanded","aria-label"],nh={key:0,class:"text"},th={class:"menu"},ih=O({__name:"VPFlyout",props:{icon:null,button:null,label:null,items:null},setup(e){const a=me(!1),n=me();$s({el:n,onBlur:t});function t(){a.value=!1}return(i,l)=>(d(),g("div",{class:"VPFlyout",ref_key:"el",ref:n,onMouseenter:l[1]||(l[1]=o=>a.value=!0),onMouseleave:l[2]||(l[2]=o=>a.value=!1)},[x("button",{type:"button",class:"button","aria-haspopup":"true","aria-expanded":a.value,"aria-label":e.label,onClick:l[0]||(l[0]=o=>a.value=!a.value)},[e.button||e.icon?(d(),g("span",nh,[e.icon?(d(),q(un(e.icon),{key:0,class:"option-icon"})):B("",!0),Ce(" "+oe(e.button)+" ",1),$(So,{class:"text-icon"})])):(d(),q(Ds,{key:1,class:"icon"}))],8,ah),x("div",th,[$(eh,{items:e.items},{default:R(()=>[P(i.$slots,"default",{},void 0,!0)]),_:3},8,["items"])])],544))}});const si=A(ih,[["__scopeId","data-v-96001b6b"]]),lh=O({__name:"VPNavBarMenuGroup",props:{item:null},setup(e){const{page:a}=se();return(n,t)=>(d(),q(si,{class:_e({VPNavBarMenuGroup:!0,active:p(Ta)(p(a).relativePath,e.item.activeMatch,!!e.item.activeMatch)}),button:e.item.text,items:e.item.items},null,8,["class","button","items"]))}}),oh=e=>(Ze("data-v-bdedfc22"),e=e(),ea(),e),ch={key:0,"aria-labelledby":"main-nav-aria-label",class:"VPNavBarMenu"},rh=oh(()=>x("span",{id:"main-nav-aria-label",class:"visually-hidden"},"Main Navigation",-1)),mh=O({__name:"VPNavBarMenu",setup(e){const{theme:a}=se();return(n,t)=>p(a).nav?(d(),g("nav",ch,[rh,(d(!0),g(Q,null,$e(p(a).nav,i=>(d(),g(Q,{key:i.text},["link"in i?(d(),q(ws,{key:0,item:i},null,8,["item"])):(d(),q(lh,{key:1,item:i},null,8,["item"]))],64))),128))])):B("",!0)}});const sh=A(mh,[["__scopeId","data-v-bdedfc22"]]),hh={},uh={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},dh=x("path",{d:"M0 0h24v24H0z",fill:"none"},null,-1),ph=x("path",{d:" M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z ",class:"css-c4d79v"},null,-1),bh=[dh,ph];function _h(e,a){return d(),g("svg",uh,bh)}const jo=A(hh,[["render",_h]]),fh={class:"items"},gh={class:"title"},kh=O({__name:"VPNavBarTranslations",setup(e){const{localeLinks:a,currentLang:n}=gn({correspondingLink:!0});return(t,i)=>p(a).length&&p(n).label?(d(),q(si,{key:0,class:"VPNavBarTranslations",icon:jo},{default:R(()=>[x("div",fh,[x("p",gh,oe(p(n).label),1),(d(!0),g(Q,null,$e(p(a),l=>(d(),q(lt,{key:l.link,item:l},null,8,["item"]))),128))])]),_:1})):B("",!0)}});const xh=A(kh,[["__scopeId","data-v-fdaf79b7"]]);const vh={},Eh={class:"VPSwitch",type:"button",role:"switch"},yh={class:"check"},Ch={key:0,class:"icon"};function Sh(e,a){return d(),g("button",Eh,[x("span",yh,[e.$slots.default?(d(),g("span",Ch,[P(e.$slots,"default",{},void 0,!0)])):B("",!0)])])}const jh=A(vh,[["render",Sh],["__scopeId","data-v-f3c41672"]]),Ph={},wh={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},$h=Er('<path d="M12,18c-3.3,0-6-2.7-6-6s2.7-6,6-6s6,2.7,6,6S15.3,18,12,18zM12,8c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4C16,9.8,14.2,8,12,8z"></path><path d="M12,4c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1s1,0.4,1,1v2C13,3.6,12.6,4,12,4z"></path><path d="M12,24c-0.6,0-1-0.4-1-1v-2c0-0.6,0.4-1,1-1s1,0.4,1,1v2C13,23.6,12.6,24,12,24z"></path><path d="M5.6,6.6c-0.3,0-0.5-0.1-0.7-0.3L3.5,4.9c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l1.4,1.4c0.4,0.4,0.4,1,0,1.4C6.2,6.5,5.9,6.6,5.6,6.6z"></path><path d="M19.8,20.8c-0.3,0-0.5-0.1-0.7-0.3l-1.4-1.4c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l1.4,1.4c0.4,0.4,0.4,1,0,1.4C20.3,20.7,20,20.8,19.8,20.8z"></path><path d="M3,13H1c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0.6,0,1,0.4,1,1S3.6,13,3,13z"></path><path d="M23,13h-2c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0.6,0,1,0.4,1,1S23.6,13,23,13z"></path><path d="M4.2,20.8c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.4-1.4c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-1.4,1.4C4.7,20.7,4.5,20.8,4.2,20.8z"></path><path d="M18.4,6.6c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.4-1.4c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-1.4,1.4C18.9,6.5,18.6,6.6,18.4,6.6z"></path>',9),Mh=[$h];function Rh(e,a){return d(),g("svg",wh,Mh)}const Fh=A(Ph,[["render",Rh]]),Th={},Lh={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Vh=x("path",{d:"M12.1,22c-0.3,0-0.6,0-0.9,0c-5.5-0.5-9.5-5.4-9-10.9c0.4-4.8,4.2-8.6,9-9c0.4,0,0.8,0.2,1,0.5c0.2,0.3,0.2,0.8-0.1,1.1c-2,2.7-1.4,6.4,1.3,8.4c2.1,1.6,5,1.6,7.1,0c0.3-0.2,0.7-0.3,1.1-0.1c0.3,0.2,0.5,0.6,0.5,1c-0.2,2.7-1.5,5.1-3.6,6.8C16.6,21.2,14.4,22,12.1,22zM9.3,4.4c-2.9,1-5,3.6-5.2,6.8c-0.4,4.4,2.8,8.3,7.2,8.7c2.1,0.2,4.2-0.4,5.8-1.8c1.1-0.9,1.9-2.1,2.4-3.4c-2.5,0.9-5.3,0.5-7.5-1.1C9.2,11.4,8.1,7.7,9.3,4.4z"},null,-1),Ah=[Vh];function Ih(e,a){return d(),g("svg",Lh,Ah)}const Nh=A(Th,[["render",Ih]]),zh=O({__name:"VPSwitchAppearance",setup(e){const{site:a,isDark:n}=se(),t=me(!1),i=typeof localStorage<"u"?l():()=>{};Ie(()=>{t.value=document.documentElement.classList.contains("dark")});function l(){const o=window.matchMedia("(prefers-color-scheme: dark)"),c=document.documentElement.classList;let r=localStorage.getItem(el),s=a.value.appearance==="dark"&&r==null||(r==="auto"||r==null?o.matches:r==="dark");o.onchange=_=>{r==="auto"&&b(s=_.matches)};function u(){b(s=!s),r=s?o.matches?"auto":"dark":o.matches?"light":"auto",localStorage.setItem(el,r)}function b(_){const C=document.createElement("style");C.type="text/css",C.appendChild(document.createTextNode(`:not(.VPSwitchAppearance):not(.VPSwitchAppearance *) {
  -webkit-transition: none !important;
  -moz-transition: none !important;
  -o-transition: none !important;
  -ms-transition: none !important;
  transition: none !important;
}`)),document.head.appendChild(C),t.value=_,c[_?"add":"remove"]("dark"),window.getComputedStyle(C).opacity,document.head.removeChild(C)}return u}return Qe(t,o=>{n.value=o}),(o,c)=>(d(),q(jh,{class:"VPSwitchAppearance","aria-label":"toggle dark mode","aria-checked":t.value,onClick:p(i)},{default:R(()=>[$(Fh,{class:"sun"}),$(Nh,{class:"moon"})]),_:1},8,["aria-checked","onClick"]))}});const hi=A(zh,[["__scopeId","data-v-0d529b6d"]]),Oh={key:0,class:"VPNavBarAppearance"},Bh=O({__name:"VPNavBarAppearance",setup(e){const{site:a}=se();return(n,t)=>p(a).appearance?(d(),g("div",Oh,[$(hi)])):B("",!0)}});const Hh=A(Bh,[["__scopeId","data-v-da3f667a"]]),Gh={discord:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Discord</title><path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.946 2.4189-2.1568 2.4189Z"/></svg>',facebook:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Facebook</title><path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/></svg>',github:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>GitHub</title><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg>',instagram:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Instagram</title><path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/></svg>',linkedin:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>LinkedIn</title><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>',mastodon:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Mastodon</title><path d="M23.268 5.313c-.35-2.578-2.617-4.61-5.304-5.004C17.51.242 15.792 0 11.813 0h-.03c-3.98 0-4.835.242-5.288.309C3.882.692 1.496 2.518.917 5.127.64 6.412.61 7.837.661 9.143c.074 1.874.088 3.745.26 5.611.118 1.24.325 2.47.62 3.68.55 2.237 2.777 4.098 4.96 4.857 2.336.792 4.849.923 7.256.38.265-.061.527-.132.786-.213.585-.184 1.27-.39 1.774-.753a.057.057 0 0 0 .023-.043v-1.809a.052.052 0 0 0-.02-.041.053.053 0 0 0-.046-.01 20.282 20.282 0 0 1-4.709.545c-2.73 0-3.463-1.284-3.674-1.818a5.593 5.593 0 0 1-.319-1.433.053.053 0 0 1 .066-.054c1.517.363 3.072.546 4.632.546.376 0 .75 0 1.125-.01 1.57-.044 3.224-.124 4.768-.422.038-.008.077-.015.11-.024 2.435-.464 4.753-1.92 4.989-5.604.008-.145.03-1.52.03-1.67.002-.512.167-3.63-.024-5.545zm-3.748 9.195h-2.561V8.29c0-1.309-.55-1.976-1.67-1.976-1.23 0-1.846.79-1.846 2.35v3.403h-2.546V8.663c0-1.56-.617-2.35-1.848-2.35-1.112 0-1.668.668-1.67 1.977v6.218H4.822V8.102c0-1.31.337-2.35 1.011-3.12.696-.77 1.608-1.164 2.74-1.164 1.311 0 2.302.5 2.962 1.498l.638 1.06.638-1.06c.66-.999 1.65-1.498 2.96-1.498 1.13 0 2.043.395 2.74 1.164.675.77 1.012 1.81 1.012 3.12z"/></svg>',slack:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Slack</title><path d="M5.042 15.165a2.528 2.528 0 0 1-2.52 2.523A2.528 2.528 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52v2.52zM6.313 15.165a2.527 2.527 0 0 1 2.521-2.52 2.527 2.527 0 0 1 2.521 2.52v6.313A2.528 2.528 0 0 1 8.834 24a2.528 2.528 0 0 1-2.521-2.522v-6.313zM8.834 5.042a2.528 2.528 0 0 1-2.521-2.52A2.528 2.528 0 0 1 8.834 0a2.528 2.528 0 0 1 2.521 2.522v2.52H8.834zM8.834 6.313a2.528 2.528 0 0 1 2.521 2.521 2.528 2.528 0 0 1-2.521 2.521H2.522A2.528 2.528 0 0 1 0 8.834a2.528 2.528 0 0 1 2.522-2.521h6.312zM18.956 8.834a2.528 2.528 0 0 1 2.522-2.521A2.528 2.528 0 0 1 24 8.834a2.528 2.528 0 0 1-2.522 2.521h-2.522V8.834zM17.688 8.834a2.528 2.528 0 0 1-2.523 2.521 2.527 2.527 0 0 1-2.52-2.521V2.522A2.527 2.527 0 0 1 15.165 0a2.528 2.528 0 0 1 2.523 2.522v6.312zM15.165 18.956a2.528 2.528 0 0 1 2.523 2.522A2.528 2.528 0 0 1 15.165 24a2.527 2.527 0 0 1-2.52-2.522v-2.522h2.52zM15.165 17.688a2.527 2.527 0 0 1-2.52-2.523 2.526 2.526 0 0 1 2.52-2.52h6.313A2.527 2.527 0 0 1 24 15.165a2.528 2.528 0 0 1-2.522 2.523h-6.313z"/></svg>',twitter:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Twitter</title><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>',youtube:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>YouTube</title><path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/></svg>'},Dh=["href","innerHTML"],Uh=O({__name:"VPSocialLink",props:{icon:null,link:null},setup(e){const a=e,n=U(()=>typeof a.icon=="object"?a.icon.svg:Gh[a.icon]);return(t,i)=>(d(),g("a",{class:"VPSocialLink",href:e.link,target:"_blank",rel:"noopener",innerHTML:p(n)},null,8,Dh))}});const qh=A(Uh,[["__scopeId","data-v-e57698f6"]]),Kh={class:"VPSocialLinks"},Wh=O({__name:"VPSocialLinks",props:{links:null},setup(e){return(a,n)=>(d(),g("div",Kh,[(d(!0),g(Q,null,$e(e.links,({link:t,icon:i})=>(d(),q(qh,{key:t,icon:i,link:t},null,8,["icon","link"]))),128))]))}});const ui=A(Wh,[["__scopeId","data-v-f6988cfb"]]),Jh=O({__name:"VPNavBarSocialLinks",setup(e){const{theme:a}=se();return(n,t)=>p(a).socialLinks?(d(),q(ui,{key:0,class:"VPNavBarSocialLinks",links:p(a).socialLinks},null,8,["links"])):B("",!0)}});const Yh=A(Jh,[["__scopeId","data-v-2ab2a029"]]),Qh={key:0,class:"group translations"},Xh={class:"trans-title"},Zh={key:1,class:"group"},eu={class:"item appearance"},au={class:"label"},nu={class:"appearance-action"},tu={key:2,class:"group"},iu={class:"item social-links"},lu=O({__name:"VPNavBarExtra",setup(e){const{site:a,theme:n}=se(),{localeLinks:t,currentLang:i}=gn({correspondingLink:!0}),l=U(()=>t.value.length&&i.value.label||a.value.appearance||n.value.socialLinks);return(o,c)=>p(l)?(d(),q(si,{key:0,class:"VPNavBarExtra",label:"extra navigation"},{default:R(()=>[p(t).length&&p(i).label?(d(),g("div",Qh,[x("p",Xh,oe(p(i).label),1),(d(!0),g(Q,null,$e(p(t),r=>(d(),q(lt,{key:r.link,item:r},null,8,["item"]))),128))])):B("",!0),p(a).appearance?(d(),g("div",Zh,[x("div",eu,[x("p",au,oe(p(n).darkModeSwitchLabel||"Appearance"),1),x("div",nu,[$(hi)])])])):B("",!0),p(n).socialLinks?(d(),g("div",tu,[x("div",iu,[$(ui,{class:"social-links-list",links:p(n).socialLinks},null,8,["links"])])])):B("",!0)]),_:1})):B("",!0)}});const ou=A(lu,[["__scopeId","data-v-66bb1f24"]]),cu=e=>(Ze("data-v-e5dd9c1c"),e=e(),ea(),e),ru=["aria-expanded"],mu=cu(()=>x("span",{class:"container"},[x("span",{class:"top"}),x("span",{class:"middle"}),x("span",{class:"bottom"})],-1)),su=[mu],hu=O({__name:"VPNavBarHamburger",props:{active:{type:Boolean}},emits:["click"],setup(e){return(a,n)=>(d(),g("button",{type:"button",class:_e(["VPNavBarHamburger",{active:e.active}]),"aria-label":"mobile navigation","aria-expanded":e.active,"aria-controls":"VPNavScreen",onClick:n[0]||(n[0]=t=>a.$emit("click"))},su,10,ru))}});const uu=A(hu,[["__scopeId","data-v-e5dd9c1c"]]),du=e=>(Ze("data-v-be450ad9"),e=e(),ea(),e),pu={class:"container"},bu={class:"title"},_u={class:"content"},fu=du(()=>x("div",{class:"curtain"},null,-1)),gu={class:"content-body"},ku=O({__name:"VPNavBar",props:{isScreenOpen:{type:Boolean}},emits:["toggle-screen"],setup(e){const{y:a}=Km(),{hasSidebar:n}=oa(),t=U(()=>({"has-sidebar":n.value,fill:a.value>0}));return(i,l)=>(d(),g("div",{class:_e(["VPNavBar",p(t)])},[x("div",pu,[x("div",bu,[$(hs,null,{"nav-bar-title-before":R(()=>[P(i.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":R(()=>[P(i.$slots,"nav-bar-title-after",{},void 0,!0)]),_:3})]),x("div",_u,[fu,x("div",gu,[P(i.$slots,"nav-bar-content-before",{},void 0,!0),$(gs,{class:"search"}),$(sh,{class:"menu"}),$(xh,{class:"translations"}),$(Hh,{class:"appearance"}),$(Yh,{class:"social-links"}),$(ou,{class:"extra"}),P(i.$slots,"nav-bar-content-after",{},void 0,!0),$(uu,{class:"hamburger",active:e.isScreenOpen,onClick:l[0]||(l[0]=o=>i.$emit("toggle-screen"))},null,8,["active"])])])])],2))}});const xu=A(ku,[["__scopeId","data-v-be450ad9"]]);function vu(e){if(Array.isArray(e)){for(var a=0,n=Array(e.length);a<e.length;a++)n[a]=e[a];return n}else return Array.from(e)}var di=!1;if(typeof window<"u"){var ml={get passive(){di=!0}};window.addEventListener("testPassive",null,ml),window.removeEventListener("testPassive",null,ml)}var On=typeof window<"u"&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||window.navigator.platform==="MacIntel"&&window.navigator.maxTouchPoints>1),Da=[],Bn=!1,pi=-1,on=void 0,$a=void 0,cn=void 0,Po=function(a){return Da.some(function(n){return!!(n.options.allowTouchMove&&n.options.allowTouchMove(a))})},Hn=function(a){var n=a||window.event;return Po(n.target)||n.touches.length>1?!0:(n.preventDefault&&n.preventDefault(),!1)},Eu=function(a){if(cn===void 0){var n=!!a&&a.reserveScrollBarGap===!0,t=window.innerWidth-document.documentElement.clientWidth;if(n&&t>0){var i=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right"),10);cn=document.body.style.paddingRight,document.body.style.paddingRight=i+t+"px"}}on===void 0&&(on=document.body.style.overflow,document.body.style.overflow="hidden")},yu=function(){cn!==void 0&&(document.body.style.paddingRight=cn,cn=void 0),on!==void 0&&(document.body.style.overflow=on,on=void 0)},Cu=function(){return window.requestAnimationFrame(function(){if($a===void 0){$a={position:document.body.style.position,top:document.body.style.top,left:document.body.style.left};var a=window,n=a.scrollY,t=a.scrollX,i=a.innerHeight;document.body.style.position="fixed",document.body.style.top=-n,document.body.style.left=-t,setTimeout(function(){return window.requestAnimationFrame(function(){var l=i-window.innerHeight;l&&n>=i&&(document.body.style.top=-(n+l))})},300)}})},Su=function(){if($a!==void 0){var a=-parseInt(document.body.style.top,10),n=-parseInt(document.body.style.left,10);document.body.style.position=$a.position,document.body.style.top=$a.top,document.body.style.left=$a.left,window.scrollTo(n,a),$a=void 0}},ju=function(a){return a?a.scrollHeight-a.scrollTop<=a.clientHeight:!1},Pu=function(a,n){var t=a.targetTouches[0].clientY-pi;return Po(a.target)?!1:n&&n.scrollTop===0&&t>0||ju(n)&&t<0?Hn(a):(a.stopPropagation(),!0)},wo=function(a,n){if(!a){console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.");return}if(!Da.some(function(i){return i.targetElement===a})){var t={targetElement:a,options:n||{}};Da=[].concat(vu(Da),[t]),On?Cu():Eu(n),On&&(a.ontouchstart=function(i){i.targetTouches.length===1&&(pi=i.targetTouches[0].clientY)},a.ontouchmove=function(i){i.targetTouches.length===1&&Pu(i,a)},Bn||(document.addEventListener("touchmove",Hn,di?{passive:!1}:void 0),Bn=!0))}},$o=function(){On&&(Da.forEach(function(a){a.targetElement.ontouchstart=null,a.targetElement.ontouchmove=null}),Bn&&(document.removeEventListener("touchmove",Hn,di?{passive:!1}:void 0),Bn=!1),pi=-1),On?Su():yu(),Da=[]};const wu=O({__name:"VPNavScreenMenuLink",props:{text:null,link:null},setup(e){const a=qe("close-screen");return(n,t)=>(d(),q(ka,{class:"VPNavScreenMenuLink",href:e.link,onClick:p(a)},{default:R(()=>[Ce(oe(e.text),1)]),_:1},8,["href","onClick"]))}});const $u=A(wu,[["__scopeId","data-v-c328f34f"]]),Mu={},Ru={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Fu=x("path",{d:"M18.9,10.9h-6v-6c0-0.6-0.4-1-1-1s-1,0.4-1,1v6h-6c-0.6,0-1,0.4-1,1s0.4,1,1,1h6v6c0,0.6,0.4,1,1,1s1-0.4,1-1v-6h6c0.6,0,1-0.4,1-1S19.5,10.9,18.9,10.9z"},null,-1),Tu=[Fu];function Lu(e,a){return d(),g("svg",Ru,Tu)}const Vu=A(Mu,[["render",Lu]]),Au=O({__name:"VPNavScreenMenuGroupLink",props:{text:null,link:null},setup(e){const a=qe("close-screen");return(n,t)=>(d(),q(ka,{class:"VPNavScreenMenuGroupLink",href:e.link,onClick:p(a)},{default:R(()=>[Ce(oe(e.text),1)]),_:1},8,["href","onClick"]))}});const Mo=A(Au,[["__scopeId","data-v-3d20956d"]]),Iu={class:"VPNavScreenMenuGroupSection"},Nu={key:0,class:"title"},zu=O({__name:"VPNavScreenMenuGroupSection",props:{text:null,items:null},setup(e){return(a,n)=>(d(),g("div",Iu,[e.text?(d(),g("p",Nu,oe(e.text),1)):B("",!0),(d(!0),g(Q,null,$e(e.items,t=>(d(),q(Mo,{key:t.text,text:t.text,link:t.link},null,8,["text","link"]))),128))]))}});const Ou=A(zu,[["__scopeId","data-v-7478538b"]]),Bu=["aria-controls","aria-expanded"],Hu={class:"button-text"},Gu=["id"],Du={key:1,class:"group"},Uu=O({__name:"VPNavScreenMenuGroup",props:{text:null,items:null},setup(e){const a=e,n=me(!1),t=U(()=>`NavScreenGroup-${a.text.replace(" ","-").toLowerCase()}`);function i(){n.value=!n.value}return(l,o)=>(d(),g("div",{class:_e(["VPNavScreenMenuGroup",{open:n.value}])},[x("button",{class:"button","aria-controls":p(t),"aria-expanded":n.value,onClick:i},[x("span",Hu,oe(e.text),1),$(Vu,{class:"button-icon"})],8,Bu),x("div",{id:p(t),class:"items"},[(d(!0),g(Q,null,$e(e.items,c=>(d(),g(Q,{key:c.text},["link"in c?(d(),g("div",{key:c.text,class:"item"},[$(Mo,{text:c.text,link:c.link},null,8,["text","link"])])):(d(),g("div",Du,[$(Ou,{text:c.text,items:c.items},null,8,["text","items"])]))],64))),128))],8,Gu)],2))}});const qu=A(Uu,[["__scopeId","data-v-a9a19324"]]),Ku={key:0,class:"VPNavScreenMenu"},Wu=O({__name:"VPNavScreenMenu",setup(e){const{theme:a}=se();return(n,t)=>p(a).nav?(d(),g("nav",Ku,[(d(!0),g(Q,null,$e(p(a).nav,i=>(d(),g(Q,{key:i.text},["link"in i?(d(),q($u,{key:0,text:i.text,link:i.link},null,8,["text","link"])):(d(),q(qu,{key:1,text:i.text||"",items:i.items},null,8,["text","items"]))],64))),128))])):B("",!0)}}),Ju={key:0,class:"VPNavScreenAppearance"},Yu={class:"text"},Qu=O({__name:"VPNavScreenAppearance",setup(e){const{site:a,theme:n}=se();return(t,i)=>p(a).appearance?(d(),g("div",Ju,[x("p",Yu,oe(p(n).darkModeSwitchLabel||"Appearance"),1),$(hi)])):B("",!0)}});const Xu=A(Qu,[["__scopeId","data-v-7e6603c2"]]),Zu={class:"list"},ed=O({__name:"VPNavScreenTranslations",setup(e){const{localeLinks:a,currentLang:n}=gn({correspondingLink:!0}),t=me(!1);function i(){t.value=!t.value}return(l,o)=>p(a).length&&p(n).label?(d(),g("div",{key:0,class:_e(["VPNavScreenTranslations",{open:t.value}])},[x("button",{class:"title",onClick:i},[$(jo,{class:"icon lang"}),Ce(" "+oe(p(n).label)+" ",1),$(So,{class:"icon chevron"})]),x("ul",Zu,[(d(!0),g(Q,null,$e(p(a),c=>(d(),g("li",{key:c.link,class:"item"},[$(ka,{class:"link",href:c.link},{default:R(()=>[Ce(oe(c.text),1)]),_:2},1032,["href"])]))),128))])],2)):B("",!0)}});const ad=A(ed,[["__scopeId","data-v-8982effe"]]),nd=O({__name:"VPNavScreenSocialLinks",setup(e){const{theme:a}=se();return(n,t)=>p(a).socialLinks?(d(),q(ui,{key:0,class:"VPNavScreenSocialLinks",links:p(a).socialLinks},null,8,["links"])):B("",!0)}}),td={class:"container"},id=O({__name:"VPNavScreen",props:{open:{type:Boolean}},setup(e){const a=me(null);function n(){wo(a.value,{reserveScrollBarGap:!0})}function t(){$o()}return(i,l)=>(d(),q(tt,{name:"fade",onEnter:n,onAfterLeave:t},{default:R(()=>[e.open?(d(),g("div",{key:0,class:"VPNavScreen",ref_key:"screen",ref:a},[x("div",td,[P(i.$slots,"nav-screen-content-before",{},void 0,!0),$(Wu,{class:"menu"}),$(ad,{class:"translations"}),$(Xu,{class:"appearance"}),$(nd,{class:"social-links"}),P(i.$slots,"nav-screen-content-after",{},void 0,!0)])],512)):B("",!0)]),_:3}))}});const ld=A(id,[["__scopeId","data-v-724636ae"]]),od={class:"VPNav"},cd=O({__name:"VPNav",setup(e){const{isScreenOpen:a,closeScreen:n,toggleScreen:t}=is();return Ba("close-screen",n),(i,l)=>(d(),g("header",od,[$(xu,{"is-screen-open":p(a),onToggleScreen:p(t)},{"nav-bar-title-before":R(()=>[P(i.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":R(()=>[P(i.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":R(()=>[P(i.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":R(()=>[P(i.$slots,"nav-bar-content-after",{},void 0,!0)]),_:3},8,["is-screen-open","onToggleScreen"]),$(ld,{open:p(a)},{"nav-screen-content-before":R(()=>[P(i.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":R(()=>[P(i.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3},8,["open"])]))}});const rd=A(cd,[["__scopeId","data-v-0fa0e57d"]]),md={},sd={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},hd=x("path",{d:"M17,11H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h14c0.6,0,1,0.4,1,1S17.6,11,17,11z"},null,-1),ud=x("path",{d:"M21,7H3C2.4,7,2,6.6,2,6s0.4-1,1-1h18c0.6,0,1,0.4,1,1S21.6,7,21,7z"},null,-1),dd=x("path",{d:"M21,15H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h18c0.6,0,1,0.4,1,1S21.6,15,21,15z"},null,-1),pd=x("path",{d:"M17,19H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h14c0.6,0,1,0.4,1,1S17.6,19,17,19z"},null,-1),bd=[hd,ud,dd,pd];function _d(e,a){return d(),g("svg",sd,bd)}const fd=A(md,[["render",_d]]),gd={key:0,class:"VPLocalNav"},kd=["aria-expanded"],xd={class:"menu-text"},vd=O({__name:"VPLocalNav",props:{open:{type:Boolean}},emits:["open-menu"],setup(e){const{theme:a}=se(),{hasSidebar:n}=oa();function t(){window.scrollTo({top:0,left:0,behavior:"smooth"})}return(i,l)=>p(n)?(d(),g("div",gd,[x("button",{class:"menu","aria-expanded":e.open,"aria-controls":"VPSidebarNav",onClick:l[0]||(l[0]=o=>i.$emit("open-menu"))},[$(fd,{class:"menu-icon"}),x("span",xd,oe(p(a).sidebarMenuLabel||"Menu"),1)],8,kd),x("a",{class:"top-link",href:"#",onClick:t},oe(p(a).returnToTopLabel||"Return to top"),1)])):B("",!0)}});const Ed=A(vd,[["__scopeId","data-v-2817d72e"]]),yd={},Cd={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Sd=x("path",{d:"M9,19c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l5.3-5.3L8.3,6.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l6,6c0.4,0.4,0.4,1,0,1.4l-6,6C9.5,18.9,9.3,19,9,19z"},null,-1),jd=[Sd];function Pd(e,a){return d(),g("svg",Cd,jd)}const wd=A(yd,[["render",Pd]]),$d=e=>(Ze("data-v-b05232f3"),e=e(),ea(),e),Md=["role"],Rd=$d(()=>x("div",{class:"indicator"},null,-1)),Fd={key:1,class:"items"},Td=O({__name:"VPSidebarItem",props:{item:null,depth:null},setup(e){const a=e,{collapsed:n,collapsible:t,isLink:i,isActiveLink:l,hasActiveLink:o,hasChildren:c,toggle:r}=Xm(U(()=>a.item)),s=U(()=>c.value?"section":"div"),u=U(()=>i.value?"a":"div"),b=U(()=>c.value?a.depth+2===7?"p":`h${a.depth+2}`:"p"),_=U(()=>i.value?void 0:"button"),C=U(()=>[[`level-${a.depth}`],{collapsible:t.value},{collapsed:n.value},{"is-link":i.value},{"is-active":l.value},{"has-active":o.value}]);function z(){!a.item.link&&r()}function V(){a.item.link&&r()}return(X,k)=>{const M=ia("VPSidebarItem",!0);return d(),q(un(p(s)),{class:_e(["VPSidebarItem",p(C)])},{default:R(()=>[e.item.text?(d(),g("div",{key:0,class:"item",role:p(_),onClick:z},[Rd,$(ka,{tag:p(u),class:"link",href:e.item.link},{default:R(()=>[(d(),q(un(p(b)),{class:"text",innerHTML:e.item.text},null,8,["innerHTML"]))]),_:1},8,["tag","href"]),e.item.collapsed!=null?(d(),g("div",{key:0,class:"caret",role:"button",onClick:V},[$(wd,{class:"caret-icon"})])):B("",!0)],8,Md)):B("",!0),e.item.items&&e.item.items.length?(d(),g("div",Fd,[e.depth<5?(d(!0),g(Q,{key:0},$e(e.item.items,L=>(d(),q(M,{key:L.text,item:L,depth:e.depth+1},null,8,["item","depth"]))),128)):B("",!0)])):B("",!0)]),_:1},8,["class"])}}});const Ld=A(Td,[["__scopeId","data-v-b05232f3"]]),Ro=e=>(Ze("data-v-c79ccefa"),e=e(),ea(),e),Vd=Ro(()=>x("div",{class:"curtain"},null,-1)),Ad={class:"nav",id:"VPSidebarNav","aria-labelledby":"sidebar-aria-label",tabindex:"-1"},Id=Ro(()=>x("span",{class:"visually-hidden",id:"sidebar-aria-label"}," Sidebar Navigation ",-1)),Nd=O({__name:"VPSidebar",props:{open:{type:Boolean}},setup(e){const a=e,{sidebarGroups:n,hasSidebar:t}=oa();let i=me(null);function l(){wo(i.value,{reserveScrollBarGap:!0})}function o(){$o()}return zl(async()=>{var c;a.open?(l(),(c=i.value)==null||c.focus()):o()}),(c,r)=>p(t)?(d(),g("aside",{key:0,class:_e(["VPSidebar",{open:e.open}]),ref_key:"navEl",ref:i,onClick:r[0]||(r[0]=cm(()=>{},["stop"]))},[Vd,x("nav",Ad,[Id,P(c.$slots,"sidebar-nav-before",{},void 0,!0),(d(!0),g(Q,null,$e(p(n),s=>(d(),g("div",{key:s.text,class:"group"},[$(Ld,{item:s,depth:0},null,8,["item"])]))),128)),P(c.$slots,"sidebar-nav-after",{},void 0,!0)])],2)):B("",!0)}});const zd=A(Nd,[["__scopeId","data-v-c79ccefa"]]),Od={},Bd={class:"VPPage"};function Hd(e,a){const n=ia("Content");return d(),g("div",Bd,[$(n)])}const Gd=A(Od,[["render",Hd]]),Dd=O({__name:"VPButton",props:{tag:null,size:null,theme:null,text:null,href:null},setup(e){const a=e,n=U(()=>[a.size??"medium",a.theme??"brand"]),t=U(()=>a.href&&it.test(a.href)),i=U(()=>a.tag?a.tag:a.href?"a":"button");return(l,o)=>(d(),q(un(p(i)),{class:_e(["VPButton",p(n)]),href:e.href?p(_n)(e.href):void 0,target:p(t)?"_blank":void 0,rel:p(t)?"noreferrer":void 0},{default:R(()=>[Ce(oe(e.text),1)]),_:1},8,["class","href","target","rel"]))}});const Ud=A(Dd,[["__scopeId","data-v-a7c4128c"]]),qd=e=>(Ze("data-v-45916f1d"),e=e(),ea(),e),Kd={class:"container"},Wd={class:"main"},Jd={key:0,class:"name"},Yd={class:"clip"},Qd={key:1,class:"text"},Xd={key:2,class:"tagline"},Zd={key:3,class:"actions"},ep={key:0,class:"image"},ap={class:"image-container"},np=qd(()=>x("div",{class:"image-bg"},null,-1)),tp=O({__name:"VPHero",props:{name:null,text:null,tagline:null,image:null,actions:null},setup(e){const a=qe("hero-image-slot-exists");return(n,t)=>(d(),g("div",{class:_e(["VPHero",{"has-image":e.image||p(a)}])},[x("div",Kd,[x("div",Wd,[e.name?(d(),g("h1",Jd,[x("span",Yd,oe(e.name),1)])):B("",!0),e.text?(d(),g("p",Qd,oe(e.text),1)):B("",!0),e.tagline?(d(),g("p",Xd,oe(e.tagline),1)):B("",!0),e.actions?(d(),g("div",Zd,[(d(!0),g(Q,null,$e(e.actions,i=>(d(),g("div",{key:i.link,class:"action"},[$(Ud,{tag:"a",size:"medium",theme:i.theme,text:i.text,href:i.link},null,8,["theme","text","href"])]))),128))])):B("",!0)]),e.image||p(a)?(d(),g("div",ep,[x("div",ap,[np,P(n.$slots,"home-hero-image",{},()=>[e.image?(d(),q(ri,{key:0,class:"image-src",image:e.image},null,8,["image"])):B("",!0)],!0)])])):B("",!0)])],2))}});const ip=A(tp,[["__scopeId","data-v-45916f1d"]]),lp=O({__name:"VPHomeHero",setup(e){const{frontmatter:a}=se();return(n,t)=>p(a).hero?(d(),q(ip,{key:0,class:"VPHomeHero",name:p(a).hero.name,text:p(a).hero.text,tagline:p(a).hero.tagline,image:p(a).hero.image,actions:p(a).hero.actions},{"home-hero-image":R(()=>[P(n.$slots,"home-hero-image")]),_:3},8,["name","text","tagline","image","actions"])):B("",!0)}}),op={},cp={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},rp=x("path",{d:"M19.9,12.4c0.1-0.2,0.1-0.5,0-0.8c-0.1-0.1-0.1-0.2-0.2-0.3l-7-7c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l5.3,5.3H5c-0.6,0-1,0.4-1,1s0.4,1,1,1h11.6l-5.3,5.3c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l7-7C19.8,12.6,19.9,12.5,19.9,12.4z"},null,-1),mp=[rp];function sp(e,a){return d(),g("svg",cp,mp)}const hp=A(op,[["render",sp]]),up={class:"box"},dp={key:1,class:"icon"},pp=["innerHTML"],bp=["innerHTML"],_p={key:2,class:"link-text"},fp={class:"link-text-value"},gp=O({__name:"VPFeature",props:{icon:null,title:null,details:null,link:null,linkText:null},setup(e){return(a,n)=>(d(),q(ka,{class:"VPFeature",href:e.link,"no-icon":!0},{default:R(()=>[x("article",up,[typeof e.icon=="object"?(d(),q(ri,{key:0,image:e.icon,alt:e.icon.alt,height:e.icon.height,width:e.icon.width},null,8,["image","alt","height","width"])):e.icon?(d(),g("div",dp,oe(e.icon),1)):B("",!0),x("h2",{class:"title",innerHTML:e.title},null,8,pp),x("p",{class:"details",innerHTML:e.details},null,8,bp),e.linkText?(d(),g("div",_p,[x("p",fp,[Ce(oe(e.linkText)+" ",1),$(hp,{class:"link-text-icon"})])])):B("",!0)])]),_:1},8,["href"]))}});const kp=A(gp,[["__scopeId","data-v-1ef28411"]]),xp={key:0,class:"VPFeatures"},vp={class:"container"},Ep={class:"items"},yp=O({__name:"VPFeatures",props:{features:null},setup(e){const a=e,n=U(()=>{const t=a.features.length;if(t){if(t===2)return"grid-2";if(t===3)return"grid-3";if(t%3===0)return"grid-6";if(t%2===0)return"grid-4"}else return});return(t,i)=>e.features?(d(),g("div",xp,[x("div",vp,[x("div",Ep,[(d(!0),g(Q,null,$e(e.features,l=>(d(),g("div",{key:l.title,class:_e(["item",[p(n)]])},[$(kp,{icon:l.icon,title:l.title,details:l.details,link:l.link,"link-text":l.linkText},null,8,["icon","title","details","link","link-text"])],2))),128))])])])):B("",!0)}});const Cp=A(yp,[["__scopeId","data-v-6816157f"]]),Sp=O({__name:"VPHomeFeatures",setup(e){const{frontmatter:a}=se();return(n,t)=>p(a).features?(d(),q(Cp,{key:0,class:"VPHomeFeatures",features:p(a).features},null,8,["features"])):B("",!0)}}),jp={class:"VPHome"},Pp=O({__name:"VPHome",setup(e){return(a,n)=>{const t=ia("Content");return d(),g("div",jp,[P(a.$slots,"home-hero-before",{},void 0,!0),$(lp,null,{"home-hero-image":R(()=>[P(a.$slots,"home-hero-image",{},void 0,!0)]),_:3}),P(a.$slots,"home-hero-after",{},void 0,!0),P(a.$slots,"home-features-before",{},void 0,!0),$(Sp),P(a.$slots,"home-features-after",{},void 0,!0),$(t)])}}});const wp=A(Pp,[["__scopeId","data-v-b07783ac"]]);function $p(){const{hasSidebar:e}=oa(),a=Lt("(min-width: 960px)"),n=Lt("(min-width: 1280px)");return{isAsideEnabled:U(()=>!n.value&&!a.value?!1:e.value?n.value:a.value)}}const Mp=71;function Rp(e,a){if(e===!1)return[];let n=[];return document.querySelectorAll("h2, h3, h4, h5, h6").forEach(t=>{if(t.textContent&&t.id){let i=t.textContent;if(a===!1){const l=t.cloneNode(!0);for(const o of l.querySelectorAll(".VPBadge"))o.remove();i=l.textContent||""}n.push({level:Number(t.tagName[1]),title:i.replace(/\s+#\s*$/,""),link:`#${t.id}`})}}),Fp(n,e)}function Fp(e,a){const n=(typeof a=="object"&&!Array.isArray(a)?a.level:a)||2;return Tp(e,typeof n=="number"?[n,n]:n==="deep"?[2,6]:n)}function Tp(e,a){const n=[];return e=e.map(t=>({...t})),e.forEach((t,i)=>{t.level>=a[0]&&t.level<=a[1]&&Lp(i,e,a)&&n.push(t)}),n}function Lp(e,a,n){if(e===0)return!0;const t=a[e];for(let i=e-1;i>=0;i--){const l=a[i];if(l.level<t.level&&l.level>=n[0]&&l.level<=n[1])return l.children==null&&(l.children=[]),l.children.push(t),!1}return!0}function Vp(e,a){const{isAsideEnabled:n}=$p(),t=Wm(l,100);let i=null;Ie(()=>{requestAnimationFrame(l),window.addEventListener("scroll",t)}),ai(()=>{o(location.hash)}),fa(()=>{window.removeEventListener("scroll",t)});function l(){if(!n.value)return;const c=[].slice.call(e.value.querySelectorAll(".outline-link")),r=[].slice.call(document.querySelectorAll(".content .header-anchor")).filter(C=>c.some(z=>z.hash===C.hash&&C.offsetParent!==null)),s=window.scrollY,u=window.innerHeight,b=document.body.offsetHeight,_=Math.abs(s+u-b)<1;if(r.length&&_){o(r[r.length-1].hash);return}for(let C=0;C<r.length;C++){const z=r[C],V=r[C+1],[X,k]=Ap(C,z,V);if(X){o(k);return}}}function o(c){i&&i.classList.remove("active"),c!==null&&(i=e.value.querySelector(`a[href="${decodeURIComponent(c)}"]`));const r=i;r?(r.classList.add("active"),a.value.style.top=r.offsetTop+33+"px",a.value.style.opacity="1"):(a.value.style.top="33px",a.value.style.opacity="0")}}function sl(e){return e.parentElement.offsetTop-Mp}function Ap(e,a,n){const t=window.scrollY;return e===0&&t===0?[!0,null]:t<sl(a)?[!1,null]:!n||t<sl(n)?[!0,a.hash]:[!1,null]}const Ip=["href"],Np=O({__name:"VPDocAsideOutlineItem",props:{headers:null,onClick:{type:Function},root:{type:Boolean}},setup(e){return(a,n)=>{const t=ia("VPDocAsideOutlineItem",!0);return d(),g("ul",{class:_e(e.root?"root":"nested")},[(d(!0),g(Q,null,$e(e.headers,({children:i,link:l,title:o})=>(d(),g("li",null,[x("a",{class:"outline-link",href:l,onClick:n[0]||(n[0]=(...c)=>e.onClick&&e.onClick(...c))},oe(o),9,Ip),i!=null&&i.length?(d(),q(t,{key:0,headers:i,onClick:e.onClick},null,8,["headers","onClick"])):B("",!0)]))),256))],2)}}});const zp=A(Np,[["__scopeId","data-v-1188541a"]]),Op=e=>(Ze("data-v-5dd9d5f6"),e=e(),ea(),e),Bp={class:"content"},Hp={class:"outline-title"},Gp={"aria-labelledby":"doc-outline-aria-label"},Dp=Op(()=>x("span",{class:"visually-hidden",id:"doc-outline-aria-label"}," Table of Contents for current page ",-1)),Up=O({__name:"VPDocAsideOutline",setup(e){const{frontmatter:a,theme:n}=se(),t=U(()=>a.value.outline??n.value.outline),i=qe("onContentUpdated");i.value=()=>{l.value=Rp(t.value,n.value.outlineBadges)};const l=me([]),o=U(()=>l.value.length>0),c=me(),r=me();Vp(c,r);function s({target:u}){const b="#"+u.href.split("#")[1],_=document.querySelector(decodeURIComponent(b));_==null||_.focus()}return(u,b)=>(d(),g("div",{class:_e(["VPDocAsideOutline",{"has-outline":p(o)}]),ref_key:"container",ref:c},[x("div",Bp,[x("div",{class:"outline-marker",ref_key:"marker",ref:r},null,512),x("div",Hp,oe(typeof p(n).outline=="object"&&!Array.isArray(p(n).outline)&&p(n).outline.label||p(n).outlineTitle||"On this page"),1),x("nav",Gp,[Dp,$(zp,{headers:l.value,root:!0,onClick:s},null,8,["headers"])])])],2))}});const qp=A(Up,[["__scopeId","data-v-5dd9d5f6"]]),Kp={class:"VPDocAsideCarbonAds"},Wp=O({__name:"VPDocAsideCarbonAds",props:{carbonAds:null},setup(e){const a=()=>null;return(n,t)=>(d(),g("div",Kp,[$(p(a),{"carbon-ads":e.carbonAds},null,8,["carbon-ads"])]))}}),Jp=e=>(Ze("data-v-cdc66372"),e=e(),ea(),e),Yp={class:"VPDocAside"},Qp=Jp(()=>x("div",{class:"spacer"},null,-1)),Xp=O({__name:"VPDocAside",setup(e){const{theme:a}=se();return(n,t)=>(d(),g("div",Yp,[P(n.$slots,"aside-top",{},void 0,!0),P(n.$slots,"aside-outline-before",{},void 0,!0),$(qp),P(n.$slots,"aside-outline-after",{},void 0,!0),Qp,P(n.$slots,"aside-ads-before",{},void 0,!0),p(a).carbonAds?(d(),q(Wp,{key:0,"carbon-ads":p(a).carbonAds},null,8,["carbon-ads"])):B("",!0),P(n.$slots,"aside-ads-after",{},void 0,!0),P(n.$slots,"aside-bottom",{},void 0,!0)]))}});const Zp=A(Xp,[["__scopeId","data-v-cdc66372"]]);function eb(){const{theme:e,page:a}=se();return U(()=>{const{text:n="Edit this page",pattern:t=""}=e.value.editLink||{},{relativePath:i}=a.value;return{url:t.replace(/:path/g,i),text:n}})}function ab(){const{page:e,theme:a,frontmatter:n}=se();return U(()=>{const t=Eo(a.value.sidebar,e.value.relativePath),i=Ym(t),l=i.findIndex(o=>Ta(e.value.relativePath,o.link));return{prev:n.value.prev?{...i[l-1],text:n.value.prev}:i[l-1],next:n.value.next?{...i[l+1],text:n.value.next}:i[l+1]}})}const nb={},tb={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},ib=x("path",{d:"M18,23H4c-1.7,0-3-1.3-3-3V6c0-1.7,1.3-3,3-3h7c0.6,0,1,0.4,1,1s-0.4,1-1,1H4C3.4,5,3,5.4,3,6v14c0,0.6,0.4,1,1,1h14c0.6,0,1-0.4,1-1v-7c0-0.6,0.4-1,1-1s1,0.4,1,1v7C21,21.7,19.7,23,18,23z"},null,-1),lb=x("path",{d:"M8,17c-0.3,0-0.5-0.1-0.7-0.3C7,16.5,6.9,16.1,7,15.8l1-4c0-0.2,0.1-0.3,0.3-0.5l9.5-9.5c1.2-1.2,3.2-1.2,4.4,0c1.2,1.2,1.2,3.2,0,4.4l-9.5,9.5c-0.1,0.1-0.3,0.2-0.5,0.3l-4,1C8.2,17,8.1,17,8,17zM9.9,12.5l-0.5,2.1l2.1-0.5l9.3-9.3c0.4-0.4,0.4-1.1,0-1.6c-0.4-0.4-1.2-0.4-1.6,0l0,0L9.9,12.5z M18.5,2.5L18.5,2.5L18.5,2.5z"},null,-1),ob=[ib,lb];function cb(e,a){return d(),g("svg",tb,ob)}const rb=A(nb,[["render",cb]]),mb={class:"VPLastUpdated"},sb=["datetime"],hb=O({__name:"VPDocFooterLastUpdated",setup(e){const{theme:a,page:n}=se(),t=U(()=>new Date(n.value.lastUpdated)),i=U(()=>t.value.toISOString()),l=me("");return Ie(()=>{Fa(()=>{l.value=t.value.toLocaleString(window.navigator.language)})}),(o,c)=>(d(),g("p",mb,[Ce(oe(p(a).lastUpdatedText||"Last updated")+": ",1),x("time",{datetime:p(i)},oe(l.value),9,sb)]))}});const ub=A(hb,[["__scopeId","data-v-355aa5ef"]]),db={key:0,class:"VPDocFooter"},pb={key:0,class:"edit-info"},bb={key:0,class:"edit-link"},_b={key:1,class:"last-updated"},fb={key:1,class:"prev-next"},gb={class:"pager"},kb=["href"],xb=["innerHTML"],vb=["innerHTML"],Eb=["href"],yb=["innerHTML"],Cb=["innerHTML"],Sb=O({__name:"VPDocFooter",setup(e){const{theme:a,page:n,frontmatter:t}=se(),i=eb(),l=ab(),o=U(()=>a.value.editLink&&t.value.editLink!==!1),c=U(()=>n.value.lastUpdated&&t.value.lastUpdated!==!1),r=U(()=>o.value||c.value||l.value.prev||l.value.next);return(s,u)=>{var b,_;return p(r)?(d(),g("footer",db,[p(o)||p(c)?(d(),g("div",pb,[p(o)?(d(),g("div",bb,[$(ka,{class:"edit-link-button",href:p(i).url,"no-icon":!0},{default:R(()=>[$(rb,{class:"edit-link-icon"}),Ce(" "+oe(p(i).text),1)]),_:1},8,["href"])])):B("",!0),p(c)?(d(),g("div",_b,[$(ub)])):B("",!0)])):B("",!0),p(l).prev||p(l).next?(d(),g("div",fb,[x("div",gb,[p(l).prev?(d(),g("a",{key:0,class:"pager-link prev",href:p(_n)(p(l).prev.link)},[x("span",{class:"desc",innerHTML:((b=p(a).docFooter)==null?void 0:b.prev)||"Previous page"},null,8,xb),x("span",{class:"title",innerHTML:p(l).prev.text},null,8,vb)],8,kb)):B("",!0)]),x("div",{class:_e(["pager",{"has-prev":p(l).prev}])},[p(l).next?(d(),g("a",{key:0,class:"pager-link next",href:p(_n)(p(l).next.link)},[x("span",{class:"desc",innerHTML:((_=p(a).docFooter)==null?void 0:_.next)||"Next page"},null,8,yb),x("span",{class:"title",innerHTML:p(l).next.text},null,8,Cb)],8,Eb)):B("",!0)],2)])):B("",!0)])):B("",!0)}}});const jb=A(Sb,[["__scopeId","data-v-e033cd21"]]),Pb=e=>(Ze("data-v-c5936a1e"),e=e(),ea(),e),wb={class:"container"},$b={key:0,class:"aside"},Mb=Pb(()=>x("div",{class:"aside-curtain"},null,-1)),Rb={class:"aside-container"},Fb={class:"aside-content"},Tb={class:"content"},Lb={class:"content-container"},Vb={class:"main"},Ab=O({__name:"VPDoc",setup(e){const a=ga(),{hasSidebar:n,hasAside:t}=oa(),i=U(()=>a.path.replace(/[./]+/g,"_").replace(/_html$/,"")),l=me();return Ba("onContentUpdated",l),(o,c)=>{const r=ia("Content");return d(),g("div",{class:_e(["VPDoc",{"has-sidebar":p(n),"has-aside":p(t)}])},[x("div",wb,[p(t)?(d(),g("div",$b,[Mb,x("div",Rb,[x("div",Fb,[$(Zp,null,{"aside-top":R(()=>[P(o.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":R(()=>[P(o.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":R(()=>[P(o.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":R(()=>[P(o.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":R(()=>[P(o.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":R(()=>[P(o.$slots,"aside-ads-after",{},void 0,!0)]),_:3})])])])):B("",!0),x("div",Tb,[x("div",Lb,[P(o.$slots,"doc-before",{},void 0,!0),x("main",Vb,[$(r,{class:_e(["vp-doc",p(i)]),onContentUpdated:l.value},null,8,["class","onContentUpdated"])]),P(o.$slots,"doc-footer-before",{},void 0,!0),$(jb),P(o.$slots,"doc-after",{},void 0,!0)])])])],2)}}});const Ib=A(Ab,[["__scopeId","data-v-c5936a1e"]]),Nb=O({__name:"VPContent",setup(e){const a=ga(),{frontmatter:n}=se(),{hasSidebar:t}=oa(),i=qe("NotFound");return(l,o)=>(d(),g("div",{class:_e(["VPContent",{"has-sidebar":p(t),"is-home":p(n).layout==="home"}]),id:"VPContent"},[p(a).component===p(i)?(d(),q(p(i),{key:0})):p(n).layout==="page"?(d(),q(Gd,{key:1})):p(n).layout==="home"?(d(),q(wp,{key:2},{"home-hero-before":R(()=>[P(l.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-image":R(()=>[P(l.$slots,"home-hero-image",{},void 0,!0)]),"home-hero-after":R(()=>[P(l.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":R(()=>[P(l.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":R(()=>[P(l.$slots,"home-features-after",{},void 0,!0)]),_:3})):(d(),q(Ib,{key:3},{"doc-footer-before":R(()=>[P(l.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":R(()=>[P(l.$slots,"doc-before",{},void 0,!0)]),"doc-after":R(()=>[P(l.$slots,"doc-after",{},void 0,!0)]),"aside-top":R(()=>[P(l.$slots,"aside-top",{},void 0,!0)]),"aside-outline-before":R(()=>[P(l.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":R(()=>[P(l.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":R(()=>[P(l.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":R(()=>[P(l.$slots,"aside-ads-after",{},void 0,!0)]),"aside-bottom":R(()=>[P(l.$slots,"aside-bottom",{},void 0,!0)]),_:3}))],2))}});const zb=A(Nb,[["__scopeId","data-v-0bd490fb"]]),Ob={class:"container"},Bb=["innerHTML"],Hb=["innerHTML"],Gb=O({__name:"VPFooter",setup(e){const{theme:a}=se(),{hasSidebar:n}=oa();return(t,i)=>p(a).footer?(d(),g("footer",{key:0,class:_e(["VPFooter",{"has-sidebar":p(n)}])},[x("div",Ob,[p(a).footer.message?(d(),g("p",{key:0,class:"message",innerHTML:p(a).footer.message},null,8,Bb)):B("",!0),p(a).footer.copyright?(d(),g("p",{key:1,class:"copyright",innerHTML:p(a).footer.copyright},null,8,Hb)):B("",!0)])],2)):B("",!0)}});const Db=A(Gb,[["__scopeId","data-v-d24360a6"]]),Ub={key:0,class:"Layout"},qb=O({__name:"Layout",setup(e){const{isOpen:a,open:n,close:t}=oa(),i=ga();Qe(()=>i.path,t),Qm(a,t),Ba("close-sidebar",t),Ba("is-sidebar-open",a);const{frontmatter:l}=se(),o=Rr(),c=U(()=>!!o["home-hero-image"]);return Ba("hero-image-slot-exists",c),(r,s)=>{const u=ia("Content");return p(l).layout!==!1?(d(),g("div",Ub,[P(r.$slots,"layout-top",{},void 0,!0),$(es),$(ts,{class:"backdrop",show:p(a),onClick:p(t)},null,8,["show","onClick"]),$(rd,null,{"nav-bar-title-before":R(()=>[P(r.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":R(()=>[P(r.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":R(()=>[P(r.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":R(()=>[P(r.$slots,"nav-bar-content-after",{},void 0,!0)]),"nav-screen-content-before":R(()=>[P(r.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":R(()=>[P(r.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3}),$(Ed,{open:p(a),onOpenMenu:p(n)},null,8,["open","onOpenMenu"]),$(zd,{open:p(a)},{"sidebar-nav-before":R(()=>[P(r.$slots,"sidebar-nav-before",{},void 0,!0)]),"sidebar-nav-after":R(()=>[P(r.$slots,"sidebar-nav-after",{},void 0,!0)]),_:3},8,["open"]),$(zb,null,{"home-hero-before":R(()=>[P(r.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-image":R(()=>[P(r.$slots,"home-hero-image",{},void 0,!0)]),"home-hero-after":R(()=>[P(r.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":R(()=>[P(r.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":R(()=>[P(r.$slots,"home-features-after",{},void 0,!0)]),"doc-footer-before":R(()=>[P(r.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":R(()=>[P(r.$slots,"doc-before",{},void 0,!0)]),"doc-after":R(()=>[P(r.$slots,"doc-after",{},void 0,!0)]),"aside-top":R(()=>[P(r.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":R(()=>[P(r.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":R(()=>[P(r.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":R(()=>[P(r.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":R(()=>[P(r.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":R(()=>[P(r.$slots,"aside-ads-after",{},void 0,!0)]),_:3}),$(Db),P(r.$slots,"layout-bottom",{},void 0,!0)])):(d(),q(u,{key:1}))}}});const Kb=A(qb,[["__scopeId","data-v-93a960b4"]]),ot=e=>(Ze("data-v-63c9cdeb"),e=e(),ea(),e),Wb={class:"NotFound"},Jb=ot(()=>x("p",{class:"code"},"404",-1)),Yb=ot(()=>x("h1",{class:"title"},"PAGE NOT FOUND",-1)),Qb=ot(()=>x("div",{class:"divider"},null,-1)),Xb=ot(()=>x("blockquote",{class:"quote"}," But if you don't change your direction, and if you keep looking, you may end up where you are heading. ",-1)),Zb={class:"action"},e_=["href"],a_=O({__name:"NotFound",setup(e){const{site:a}=se(),{localeLinks:n}=gn({removeCurrent:!1}),t=me("/");return Ie(()=>{var l;const i=window.location.pathname.replace(a.value.base,"").replace(/(^.*?\/).*$/,"/$1");n.value.length&&(t.value=((l=n.value.find(({link:o})=>o.startsWith(i)))==null?void 0:l.link)||n.value[0].link)}),(i,l)=>(d(),g("div",Wb,[Jb,Yb,Qb,Xb,x("div",Zb,[x("a",{class:"link",href:p(bn)(t.value),"aria-label":"go to home"}," Take me home ",8,e_)])]))}});const n_=A(a_,[["__scopeId","data-v-63c9cdeb"]]);const t_={Layout:Kb,NotFound:n_,enhanceApp:({app:e})=>{e.component("Badge",km)}};const i_={props:["items"]};function l_(e,a,n,t,i,l){const o=ia("Pydoc"),c=ia("tree",!0);return d(),g("ul",null,[(d(!0),g(Q,null,$e(n.items,r=>(d(),g("li",null,[$(o,{caption:r.id},{default:R(()=>[Ce(oe(r.path),1)]),_:2},1032,["caption"]),r.children&&r.children.length>0?(d(),q(c,{key:0,items:r.children},null,8,["items"])):B("",!0)]))),256))])}const o_=A(i_,[["render",l_]]),c_=JSON.parse('{"machinable.Element.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Element.as_default"}, "machinable.Element.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Element.as_json"}, "machinable.Element.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Element.clone"}, "machinable.Element.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.collect"}, "machinable.Element.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Element.compute_predicate"}, "machinable.Element.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.find"}, "machinable.Element.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.find_by_predicate"}, "machinable.Element.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.find_many"}, "machinable.Element.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.from_json"}, "machinable.Element.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.from_model"}, "machinable.Element.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.from_storage"}, "machinable.Element.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.get"}, "machinable.Element.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.instance"}, "machinable.Element.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.is_connected"}, "machinable.Element.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Element.is_mounted"}, "machinable.Element.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Element.load_data"}, "machinable.Element.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Element.load_file"}, "machinable.Element.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Element.local_directory"}, "machinable.Element.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.make"}, "machinable.Element.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Element.matches"}, "machinable.Element.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.model"}, "machinable.Element.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Element.mount"}, "machinable.Element.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Element.on_before_configure"}, "machinable.Element.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Element.on_compute_predicate"}, "machinable.Element.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Element.on_configure"}, "machinable.Element.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Element.on_instantiate"}, "machinable.Element.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Element.save_data"}, "machinable.Element.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Element.save_file"}, "machinable.Element.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Element.serialize"}, "machinable.Element.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.set_default"}, "machinable.Element.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Element.set_model"}, "machinable.Element.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.singleton"}, "machinable.Element.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Element.to_cli"}, "machinable.Element.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Element.unserialize"}, "machinable.Element": {"kind": "class", "realname": "Element", "name": "machinable", "path": "machinable.Element", "parents": ["machinable.mixin.Mixin", "machinable.utils.Jsonable"]}, "machinable.Execution.add": {"kind": "routine", "realname": "add", "name": "machinable", "path": "machinable.Execution.add"}, "machinable.Execution.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Execution.as_default"}, "machinable.Execution.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Execution.as_json"}, "machinable.Execution.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable", "path": "machinable.Execution.canonicalize_resources"}, "machinable.Execution.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Execution.clone"}, "machinable.Execution.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.collect"}, "machinable.Execution.commit": {"kind": "routine", "realname": "commit", "name": "machinable", "path": "machinable.Execution.commit"}, "machinable.Execution.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Execution.compute_predicate"}, "machinable.Execution.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable", "path": "machinable.Execution.compute_resources"}, "machinable.Execution.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable", "path": "machinable.Execution.default_resources"}, "machinable.Execution.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable", "path": "machinable.Execution.dispatch"}, "machinable.Execution.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.find"}, "machinable.Execution.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.find_by_predicate"}, "machinable.Execution.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.find_many"}, "machinable.Execution.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.from_json"}, "machinable.Execution.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.from_model"}, "machinable.Execution.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.from_storage"}, "machinable.Execution.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.get"}, "machinable.Execution.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.instance"}, "machinable.Execution.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.is_connected"}, "machinable.Execution.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Execution.is_mounted"}, "machinable.Execution.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Execution.load_data"}, "machinable.Execution.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Execution.load_file"}, "machinable.Execution.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Execution.local_directory"}, "machinable.Execution.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.make"}, "machinable.Execution.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Execution.matches"}, "machinable.Execution.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.model"}, "machinable.Execution.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Execution.mount"}, "machinable.Execution.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable", "path": "machinable.Execution.on_after_dispatch"}, "machinable.Execution.on_before_commit": {"kind": "routine", "realname": "on_before_commit", "name": "machinable", "path": "machinable.Execution.on_before_commit"}, "machinable.Execution.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Execution.on_before_configure"}, "machinable.Execution.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable", "path": "machinable.Execution.on_before_dispatch"}, "machinable.Execution.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Execution.on_compute_predicate"}, "machinable.Execution.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Execution.on_configure"}, "machinable.Execution.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Execution.on_instantiate"}, "machinable.Execution.on_verify_schedule": {"kind": "routine", "realname": "on_verify_schedule", "name": "machinable", "path": "machinable.Execution.on_verify_schedule"}, "machinable.Execution.resources": {"kind": "routine", "realname": "resources", "name": "machinable", "path": "machinable.Execution.resources"}, "machinable.Execution.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Execution.save_data"}, "machinable.Execution.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Execution.save_file"}, "machinable.Execution.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Execution.serialize"}, "machinable.Execution.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.set_default"}, "machinable.Execution.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Execution.set_model"}, "machinable.Execution.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.singleton"}, "machinable.Execution.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Execution.to_cli"}, "machinable.Execution.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Execution.unserialize"}, "machinable.Execution": {"kind": "class", "realname": "Execution", "name": "machinable", "path": "machinable.Execution", "parents": ["machinable.element.Element"]}, "machinable.Experiment.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Experiment.as_default"}, "machinable.Experiment.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Experiment.as_json"}, "machinable.Experiment.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Experiment.clone"}, "machinable.Experiment.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.collect"}, "machinable.Experiment.commit": {"kind": "routine", "realname": "commit", "name": "machinable", "path": "machinable.Experiment.commit"}, "machinable.Experiment.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Experiment.compute_predicate"}, "machinable.Experiment.created_at": {"kind": "routine", "realname": "created_at", "name": "machinable", "path": "machinable.Experiment.created_at"}, "machinable.Experiment.derive": {"kind": "routine", "realname": "derive", "name": "machinable", "path": "machinable.Experiment.derive"}, "machinable.Experiment.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable", "path": "machinable.Experiment.dispatch"}, "machinable.Experiment.dispatch_code": {"kind": "routine", "realname": "dispatch_code", "name": "machinable", "path": "machinable.Experiment.dispatch_code"}, "machinable.Experiment.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.find"}, "machinable.Experiment.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.find_by_predicate"}, "machinable.Experiment.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.find_many"}, "machinable.Experiment.finished_at": {"kind": "routine", "realname": "finished_at", "name": "machinable", "path": "machinable.Experiment.finished_at"}, "machinable.Experiment.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.from_json"}, "machinable.Experiment.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.from_model"}, "machinable.Experiment.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.from_storage"}, "machinable.Experiment.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.get"}, "machinable.Experiment.group_as": {"kind": "routine", "realname": "group_as", "name": "machinable", "path": "machinable.Experiment.group_as"}, "machinable.Experiment.heartbeat_at": {"kind": "routine", "realname": "heartbeat_at", "name": "machinable", "path": "machinable.Experiment.heartbeat_at"}, "machinable.Experiment.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.instance"}, "machinable.Experiment.is_active": {"kind": "routine", "realname": "is_active", "name": "machinable", "path": "machinable.Experiment.is_active"}, "machinable.Experiment.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.is_connected"}, "machinable.Experiment.is_finished": {"kind": "routine", "realname": "is_finished", "name": "machinable", "path": "machinable.Experiment.is_finished"}, "machinable.Experiment.is_incomplete": {"kind": "routine", "realname": "is_incomplete", "name": "machinable", "path": "machinable.Experiment.is_incomplete"}, "machinable.Experiment.is_live": {"kind": "routine", "realname": "is_live", "name": "machinable", "path": "machinable.Experiment.is_live"}, "machinable.Experiment.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Experiment.is_mounted"}, "machinable.Experiment.is_started": {"kind": "routine", "realname": "is_started", "name": "machinable", "path": "machinable.Experiment.is_started"}, "machinable.Experiment.launch": {"kind": "routine", "realname": "launch", "name": "machinable", "path": "machinable.Experiment.launch"}, "machinable.Experiment.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Experiment.load_data"}, "machinable.Experiment.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Experiment.load_file"}, "machinable.Experiment.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Experiment.local_directory"}, "machinable.Experiment.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.make"}, "machinable.Experiment.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable", "path": "machinable.Experiment.mark_started"}, "machinable.Experiment.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Experiment.matches"}, "machinable.Experiment.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.model"}, "machinable.Experiment.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Experiment.mount"}, "machinable.Experiment.on_after_create": {"kind": "routine", "realname": "on_after_create", "name": "machinable", "path": "machinable.Experiment.on_after_create"}, "machinable.Experiment.on_after_destroy": {"kind": "routine", "realname": "on_after_destroy", "name": "machinable", "path": "machinable.Experiment.on_after_destroy"}, "machinable.Experiment.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable", "path": "machinable.Experiment.on_after_dispatch"}, "machinable.Experiment.on_before_commit": {"kind": "routine", "realname": "on_before_commit", "name": "machinable", "path": "machinable.Experiment.on_before_commit"}, "machinable.Experiment.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Experiment.on_before_configure"}, "machinable.Experiment.on_before_create": {"kind": "routine", "realname": "on_before_create", "name": "machinable", "path": "machinable.Experiment.on_before_create"}, "machinable.Experiment.on_before_destroy": {"kind": "routine", "realname": "on_before_destroy", "name": "machinable", "path": "machinable.Experiment.on_before_destroy"}, "machinable.Experiment.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable", "path": "machinable.Experiment.on_before_dispatch"}, "machinable.Experiment.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Experiment.on_compute_predicate"}, "machinable.Experiment.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Experiment.on_configure"}, "machinable.Experiment.on_create": {"kind": "routine", "realname": "on_create", "name": "machinable", "path": "machinable.Experiment.on_create"}, "machinable.Experiment.on_destroy": {"kind": "routine", "realname": "on_destroy", "name": "machinable", "path": "machinable.Experiment.on_destroy"}, "machinable.Experiment.on_failure": {"kind": "routine", "realname": "on_failure", "name": "machinable", "path": "machinable.Experiment.on_failure"}, "machinable.Experiment.on_finish": {"kind": "routine", "realname": "on_finish", "name": "machinable", "path": "machinable.Experiment.on_finish"}, "machinable.Experiment.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Experiment.on_instantiate"}, "machinable.Experiment.on_seeding": {"kind": "routine", "realname": "on_seeding", "name": "machinable", "path": "machinable.Experiment.on_seeding"}, "machinable.Experiment.on_success": {"kind": "routine", "realname": "on_success", "name": "machinable", "path": "machinable.Experiment.on_success"}, "machinable.Experiment.on_write_meta_data": {"kind": "routine", "realname": "on_write_meta_data", "name": "machinable", "path": "machinable.Experiment.on_write_meta_data"}, "machinable.Experiment.output": {"kind": "routine", "realname": "output", "name": "machinable", "path": "machinable.Experiment.output"}, "machinable.Experiment.record": {"kind": "routine", "realname": "record", "name": "machinable", "path": "machinable.Experiment.record"}, "machinable.Experiment.records": {"kind": "routine", "realname": "records", "name": "machinable", "path": "machinable.Experiment.records"}, "machinable.Experiment.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Experiment.save_data"}, "machinable.Experiment.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Experiment.save_file"}, "machinable.Experiment.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Experiment.serialize"}, "machinable.Experiment.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.set_default"}, "machinable.Experiment.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Experiment.set_model"}, "machinable.Experiment.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.singleton"}, "machinable.Experiment.started_at": {"kind": "routine", "realname": "started_at", "name": "machinable", "path": "machinable.Experiment.started_at"}, "machinable.Experiment.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Experiment.to_cli"}, "machinable.Experiment.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Experiment.unserialize"}, "machinable.Experiment.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable", "path": "machinable.Experiment.update_heartbeat"}, "machinable.Experiment.use": {"kind": "routine", "realname": "use", "name": "machinable", "path": "machinable.Experiment.use"}, "machinable.Experiment.version": {"kind": "routine", "realname": "version", "name": "machinable", "path": "machinable.Experiment.version"}, "machinable.Experiment": {"kind": "class", "realname": "Experiment", "name": "machinable", "path": "machinable.Experiment", "parents": ["machinable.element.Element"]}, "machinable.Mixin": {"kind": "class", "realname": "Mixin", "name": "machinable", "path": "machinable.Mixin", "parents": ["builtins.object"]}, "machinable.Project.add_to_path": {"kind": "routine", "realname": "add_to_path", "name": "machinable", "path": "machinable.Project.add_to_path"}, "machinable.Project.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Project.as_default"}, "machinable.Project.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Project.as_json"}, "machinable.Project.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Project.clone"}, "machinable.Project.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.collect"}, "machinable.Project.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Project.compute_predicate"}, "machinable.Project.element": {"kind": "routine", "realname": "element", "name": "machinable", "path": "machinable.Project.element"}, "machinable.Project.exists": {"kind": "routine", "realname": "exists", "name": "machinable", "path": "machinable.Project.exists"}, "machinable.Project.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.find"}, "machinable.Project.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.find_by_predicate"}, "machinable.Project.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.find_many"}, "machinable.Project.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.from_json"}, "machinable.Project.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.from_model"}, "machinable.Project.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.from_storage"}, "machinable.Project.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.get"}, "machinable.Project.get_code_version": {"kind": "routine", "realname": "get_code_version", "name": "machinable", "path": "machinable.Project.get_code_version"}, "machinable.Project.get_diff": {"kind": "routine", "realname": "get_diff", "name": "machinable", "path": "machinable.Project.get_diff"}, "machinable.Project.get_host_info": {"kind": "routine", "realname": "get_host_info", "name": "machinable", "path": "machinable.Project.get_host_info"}, "machinable.Project.get_root": {"kind": "routine", "realname": "get_root", "name": "machinable", "path": "machinable.Project.get_root"}, "machinable.Project.get_vendors": {"kind": "routine", "realname": "get_vendors", "name": "machinable", "path": "machinable.Project.get_vendors"}, "machinable.Project.global_predicate": {"kind": "routine", "realname": "global_predicate", "name": "machinable", "path": "machinable.Project.global_predicate"}, "machinable.Project.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.instance"}, "machinable.Project.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.is_connected"}, "machinable.Project.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Project.is_mounted"}, "machinable.Project.is_root": {"kind": "routine", "realname": "is_root", "name": "machinable", "path": "machinable.Project.is_root"}, "machinable.Project.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Project.load_data"}, "machinable.Project.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Project.load_file"}, "machinable.Project.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Project.local_directory"}, "machinable.Project.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.make"}, "machinable.Project.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Project.matches"}, "machinable.Project.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.model"}, "machinable.Project.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Project.mount"}, "machinable.Project.name": {"kind": "routine", "realname": "name", "name": "machinable", "path": "machinable.Project.name"}, "machinable.Project.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Project.on_before_configure"}, "machinable.Project.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Project.on_compute_predicate"}, "machinable.Project.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Project.on_configure"}, "machinable.Project.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Project.on_instantiate"}, "machinable.Project.on_parse_cli": {"kind": "routine", "realname": "on_parse_cli", "name": "machinable", "path": "machinable.Project.on_parse_cli"}, "machinable.Project.on_resolve_element": {"kind": "routine", "realname": "on_resolve_element", "name": "machinable", "path": "machinable.Project.on_resolve_element"}, "machinable.Project.on_resolve_vendor": {"kind": "routine", "realname": "on_resolve_vendor", "name": "machinable", "path": "machinable.Project.on_resolve_vendor"}, "machinable.Project.path": {"kind": "routine", "realname": "path", "name": "machinable", "path": "machinable.Project.path"}, "machinable.Project.provider": {"kind": "routine", "realname": "provider", "name": "machinable", "path": "machinable.Project.provider"}, "machinable.Project.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Project.save_data"}, "machinable.Project.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Project.save_file"}, "machinable.Project.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Project.serialize"}, "machinable.Project.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.set_default"}, "machinable.Project.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Project.set_model"}, "machinable.Project.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.singleton"}, "machinable.Project.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Project.to_cli"}, "machinable.Project.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Project.unserialize"}, "machinable.Project": {"kind": "class", "realname": "Project", "name": "machinable", "path": "machinable.Project", "parents": ["machinable.element.Element"]}, "machinable.Record.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Record.as_default"}, "machinable.Record.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Record.as_json"}, "machinable.Record.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Record.clone"}, "machinable.Record.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.collect"}, "machinable.Record.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Record.compute_predicate"}, "machinable.Record.empty": {"kind": "routine", "realname": "empty", "name": "machinable", "path": "machinable.Record.empty"}, "machinable.Record.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.find"}, "machinable.Record.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.find_by_predicate"}, "machinable.Record.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.find_many"}, "machinable.Record.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.from_json"}, "machinable.Record.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.from_model"}, "machinable.Record.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.from_storage"}, "machinable.Record.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.get"}, "machinable.Record.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.instance"}, "machinable.Record.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.is_connected"}, "machinable.Record.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Record.is_mounted"}, "machinable.Record.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Record.load_data"}, "machinable.Record.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Record.load_file"}, "machinable.Record.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Record.local_directory"}, "machinable.Record.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.make"}, "machinable.Record.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Record.matches"}, "machinable.Record.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.model"}, "machinable.Record.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Record.mount"}, "machinable.Record.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Record.on_before_configure"}, "machinable.Record.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Record.on_compute_predicate"}, "machinable.Record.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Record.on_configure"}, "machinable.Record.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Record.on_instantiate"}, "machinable.Record.save": {"kind": "routine", "realname": "save", "name": "machinable", "path": "machinable.Record.save"}, "machinable.Record.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Record.save_data"}, "machinable.Record.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Record.save_file"}, "machinable.Record.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Record.serialize"}, "machinable.Record.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.set_default"}, "machinable.Record.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Record.set_model"}, "machinable.Record.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.singleton"}, "machinable.Record.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Record.to_cli"}, "machinable.Record.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Record.unserialize"}, "machinable.Record.update": {"kind": "routine", "realname": "update", "name": "machinable", "path": "machinable.Record.update"}, "machinable.Record.write": {"kind": "routine", "realname": "write", "name": "machinable", "path": "machinable.Record.write"}, "machinable.Record": {"kind": "class", "realname": "Record", "name": "machinable", "path": "machinable.Record", "parents": ["machinable.element.Element"]}, "machinable.Schedule.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Schedule.as_default"}, "machinable.Schedule.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Schedule.as_json"}, "machinable.Schedule.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Schedule.clone"}, "machinable.Schedule.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.collect"}, "machinable.Schedule.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Schedule.compute_predicate"}, "machinable.Schedule.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.find"}, "machinable.Schedule.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.find_by_predicate"}, "machinable.Schedule.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.find_many"}, "machinable.Schedule.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.from_json"}, "machinable.Schedule.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.from_model"}, "machinable.Schedule.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.from_storage"}, "machinable.Schedule.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.get"}, "machinable.Schedule.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.instance"}, "machinable.Schedule.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.is_connected"}, "machinable.Schedule.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Schedule.is_mounted"}, "machinable.Schedule.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Schedule.load_data"}, "machinable.Schedule.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Schedule.load_file"}, "machinable.Schedule.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Schedule.local_directory"}, "machinable.Schedule.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.make"}, "machinable.Schedule.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Schedule.matches"}, "machinable.Schedule.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.model"}, "machinable.Schedule.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Schedule.mount"}, "machinable.Schedule.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Schedule.on_before_configure"}, "machinable.Schedule.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Schedule.on_compute_predicate"}, "machinable.Schedule.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Schedule.on_configure"}, "machinable.Schedule.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Schedule.on_instantiate"}, "machinable.Schedule.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Schedule.save_data"}, "machinable.Schedule.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Schedule.save_file"}, "machinable.Schedule.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Schedule.serialize"}, "machinable.Schedule.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.set_default"}, "machinable.Schedule.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Schedule.set_model"}, "machinable.Schedule.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.singleton"}, "machinable.Schedule.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Schedule.to_cli"}, "machinable.Schedule.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Schedule.unserialize"}, "machinable.Schedule": {"kind": "class", "realname": "Schedule", "name": "machinable", "path": "machinable.Schedule", "parents": ["machinable.element.Element"]}, "machinable.Storage.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable", "path": "machinable.Storage.as_default"}, "machinable.Storage.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Storage.as_json"}, "machinable.Storage.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Storage.clone"}, "machinable.Storage.collect": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.collect"}, "machinable.Storage.commit": {"kind": "routine", "realname": "commit", "name": "machinable", "path": "machinable.Storage.commit"}, "machinable.Storage.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable", "path": "machinable.Storage.compute_predicate"}, "machinable.Storage.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable", "path": "machinable.Storage.create_element"}, "machinable.Storage.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable", "path": "machinable.Storage.create_execution"}, "machinable.Storage.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable", "path": "machinable.Storage.create_experiment"}, "machinable.Storage.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable", "path": "machinable.Storage.create_file"}, "machinable.Storage.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable", "path": "machinable.Storage.create_group"}, "machinable.Storage.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable", "path": "machinable.Storage.create_project"}, "machinable.Storage.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable", "path": "machinable.Storage.create_record"}, "machinable.Storage.find": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.find"}, "machinable.Storage.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.find_by_predicate"}, "machinable.Storage.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable", "path": "machinable.Storage.find_experiment"}, "machinable.Storage.find_experiment_by_predicate": {"kind": "routine", "realname": "find_experiment_by_predicate", "name": "machinable", "path": "machinable.Storage.find_experiment_by_predicate"}, "machinable.Storage.find_many": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.find_many"}, "machinable.Storage.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable", "path": "machinable.Storage.find_related"}, "machinable.Storage.from_json": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.from_json"}, "machinable.Storage.from_model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.from_model"}, "machinable.Storage.from_storage": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.from_storage"}, "machinable.Storage.get": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.get"}, "machinable.Storage.instance": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.instance"}, "machinable.Storage.is_connected": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.is_connected"}, "machinable.Storage.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Storage.is_mounted"}, "machinable.Storage.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Storage.load_data"}, "machinable.Storage.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Storage.load_file"}, "machinable.Storage.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Storage.local_directory"}, "machinable.Storage.make": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.make"}, "machinable.Storage.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable", "path": "machinable.Storage.mark_started"}, "machinable.Storage.matches": {"kind": "routine", "realname": "matches", "name": "machinable", "path": "machinable.Storage.matches"}, "machinable.Storage.model": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.model"}, "machinable.Storage.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Storage.mount"}, "machinable.Storage.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Storage.on_before_configure"}, "machinable.Storage.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable", "path": "machinable.Storage.on_compute_predicate"}, "machinable.Storage.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Storage.on_configure"}, "machinable.Storage.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Storage.on_instantiate"}, "machinable.Storage.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable", "path": "machinable.Storage.retrieve_element"}, "machinable.Storage.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable", "path": "machinable.Storage.retrieve_elements"}, "machinable.Storage.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable", "path": "machinable.Storage.retrieve_execution"}, "machinable.Storage.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable", "path": "machinable.Storage.retrieve_executions"}, "machinable.Storage.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable", "path": "machinable.Storage.retrieve_experiment"}, "machinable.Storage.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable", "path": "machinable.Storage.retrieve_experiments"}, "machinable.Storage.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable", "path": "machinable.Storage.retrieve_file"}, "machinable.Storage.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable", "path": "machinable.Storage.retrieve_group"}, "machinable.Storage.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable", "path": "machinable.Storage.retrieve_output"}, "machinable.Storage.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable", "path": "machinable.Storage.retrieve_project"}, "machinable.Storage.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable", "path": "machinable.Storage.retrieve_records"}, "machinable.Storage.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable", "path": "machinable.Storage.retrieve_related"}, "machinable.Storage.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable", "path": "machinable.Storage.retrieve_status"}, "machinable.Storage.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Storage.save_data"}, "machinable.Storage.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Storage.save_file"}, "machinable.Storage.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Storage.serialize"}, "machinable.Storage.set_default": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.set_default"}, "machinable.Storage.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Storage.set_model"}, "machinable.Storage.singleton": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.singleton"}, "machinable.Storage.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable", "path": "machinable.Storage.to_cli"}, "machinable.Storage.unserialize": {"kind": "routine", "realname": null, "name": "machinable", "path": "machinable.Storage.unserialize"}, "machinable.Storage.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable", "path": "machinable.Storage.update_heartbeat"}, "machinable.Storage": {"kind": "class", "realname": "Storage", "name": "machinable", "path": "machinable.Storage", "parents": ["machinable.element.Element"]}, "machinable.get": {"kind": "routine", "realname": "get", "name": "machinable", "path": "machinable.get"}, "machinable.get_settings": {"kind": "routine", "realname": "get_settings", "name": "machinable", "path": "machinable.get_settings"}, "machinable.mixin": {"kind": "routine", "realname": "mixin", "name": "machinable.mixin", "path": "machinable.mixin"}, "machinable": {"kind": "module", "name": "machinable", "path": "machinable"}, "machinable.cli.from_cli": {"kind": "routine", "realname": "from_cli", "name": "machinable.cli", "path": "machinable.cli.from_cli"}, "machinable.cli.main": {"kind": "routine", "realname": "main", "name": "machinable.cli", "path": "machinable.cli.main"}, "machinable.cli.parse": {"kind": "routine", "realname": "parse", "name": "machinable.cli", "path": "machinable.cli.parse"}, "machinable.cli": {"kind": "module", "name": "machinable.cli", "path": "machinable.cli"}, "machinable.collection.Collection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.Collection.all"}, "machinable.collection.Collection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.Collection.append"}, "machinable.collection.Collection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.Collection.as_dataframe"}, "machinable.collection.Collection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.Collection.as_json"}, "machinable.collection.Collection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.Collection.as_numpy"}, "machinable.collection.Collection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.Collection.as_table"}, "machinable.collection.Collection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.Collection.avg"}, "machinable.collection.Collection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.Collection.chunk"}, "machinable.collection.Collection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.Collection.collapse"}, "machinable.collection.Collection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.Collection.contains"}, "machinable.collection.Collection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.Collection.count"}, "machinable.collection.Collection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.Collection.diff"}, "machinable.collection.Collection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.Collection.each"}, "machinable.collection.Collection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.Collection.empty"}, "machinable.collection.Collection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.Collection.every"}, "machinable.collection.Collection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.Collection.filter"}, "machinable.collection.Collection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.Collection.first"}, "machinable.collection.Collection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.Collection.flatten"}, "machinable.collection.Collection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.Collection.forget"}, "machinable.collection.Collection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.Collection.get"}, "machinable.collection.Collection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.Collection.implode"}, "machinable.collection.Collection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.Collection.last"}, "machinable.collection.Collection.make": {"kind": "routine", "realname": null, "name": "machinable.collection", "path": "machinable.collection.Collection.make"}, "machinable.collection.Collection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.Collection.map"}, "machinable.collection.Collection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.Collection.max"}, "machinable.collection.Collection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.Collection.merge"}, "machinable.collection.Collection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.Collection.min"}, "machinable.collection.Collection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.Collection.only"}, "machinable.collection.Collection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.Collection.pluck"}, "machinable.collection.Collection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.Collection.pluck_or_nan"}, "machinable.collection.Collection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.Collection.pluck_or_none"}, "machinable.collection.Collection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.Collection.pop"}, "machinable.collection.Collection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.Collection.pprint"}, "machinable.collection.Collection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.Collection.prepend"}, "machinable.collection.Collection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.Collection.pull"}, "machinable.collection.Collection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.Collection.put"}, "machinable.collection.Collection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.Collection.reduce"}, "machinable.collection.Collection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.Collection.reject"}, "machinable.collection.Collection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.Collection.reverse"}, "machinable.collection.Collection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.Collection.section"}, "machinable.collection.Collection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.Collection.serialize"}, "machinable.collection.Collection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.Collection.sort"}, "machinable.collection.Collection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.Collection.sum"}, "machinable.collection.Collection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.Collection.take"}, "machinable.collection.Collection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.Collection.transform"}, "machinable.collection.Collection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.Collection.unique"}, "machinable.collection.Collection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.Collection.where"}, "machinable.collection.Collection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.Collection.without"}, "machinable.collection.Collection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.Collection.zip"}, "machinable.collection.Collection": {"kind": "class", "realname": "Collection", "name": "machinable.collection", "path": "machinable.collection.Collection", "parents": ["builtins.object"]}, "machinable.collection.ElementCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.all"}, "machinable.collection.ElementCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.append"}, "machinable.collection.ElementCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_dataframe"}, "machinable.collection.ElementCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_json"}, "machinable.collection.ElementCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_numpy"}, "machinable.collection.ElementCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_table"}, "machinable.collection.ElementCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.avg"}, "machinable.collection.ElementCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.chunk"}, "machinable.collection.ElementCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.collapse"}, "machinable.collection.ElementCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.contains"}, "machinable.collection.ElementCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.count"}, "machinable.collection.ElementCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.diff"}, "machinable.collection.ElementCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.each"}, "machinable.collection.ElementCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.empty"}, "machinable.collection.ElementCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.every"}, "machinable.collection.ElementCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.filter"}, "machinable.collection.ElementCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.filter_by_module"}, "machinable.collection.ElementCollection.filter_by_predicate": {"kind": "routine", "realname": "filter_by_predicate", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.filter_by_predicate"}, "machinable.collection.ElementCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.first"}, "machinable.collection.ElementCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.flatten"}, "machinable.collection.ElementCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.forget"}, "machinable.collection.ElementCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.get"}, "machinable.collection.ElementCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.implode"}, "machinable.collection.ElementCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.last"}, "machinable.collection.ElementCollection.make": {"kind": "routine", "realname": null, "name": "machinable.collection", "path": "machinable.collection.ElementCollection.make"}, "machinable.collection.ElementCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.map"}, "machinable.collection.ElementCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.max"}, "machinable.collection.ElementCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.merge"}, "machinable.collection.ElementCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.min"}, "machinable.collection.ElementCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.only"}, "machinable.collection.ElementCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pluck"}, "machinable.collection.ElementCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pluck_or_nan"}, "machinable.collection.ElementCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pluck_or_none"}, "machinable.collection.ElementCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pop"}, "machinable.collection.ElementCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pprint"}, "machinable.collection.ElementCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.prepend"}, "machinable.collection.ElementCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pull"}, "machinable.collection.ElementCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.put"}, "machinable.collection.ElementCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.reduce"}, "machinable.collection.ElementCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.reject"}, "machinable.collection.ElementCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.reverse"}, "machinable.collection.ElementCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.section"}, "machinable.collection.ElementCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.serialize"}, "machinable.collection.ElementCollection.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.singleton"}, "machinable.collection.ElementCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.sort"}, "machinable.collection.ElementCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.sum"}, "machinable.collection.ElementCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.take"}, "machinable.collection.ElementCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.transform"}, "machinable.collection.ElementCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.unique"}, "machinable.collection.ElementCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.where"}, "machinable.collection.ElementCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.without"}, "machinable.collection.ElementCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.zip"}, "machinable.collection.ElementCollection": {"kind": "class", "realname": "ElementCollection", "name": "machinable.collection", "path": "machinable.collection.ElementCollection", "parents": ["Collection"]}, "machinable.collection.ExecutionCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.all"}, "machinable.collection.ExecutionCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.append"}, "machinable.collection.ExecutionCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_dataframe"}, "machinable.collection.ExecutionCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_json"}, "machinable.collection.ExecutionCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_numpy"}, "machinable.collection.ExecutionCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_table"}, "machinable.collection.ExecutionCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.avg"}, "machinable.collection.ExecutionCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.chunk"}, "machinable.collection.ExecutionCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.collapse"}, "machinable.collection.ExecutionCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.contains"}, "machinable.collection.ExecutionCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.count"}, "machinable.collection.ExecutionCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.diff"}, "machinable.collection.ExecutionCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.each"}, "machinable.collection.ExecutionCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.empty"}, "machinable.collection.ExecutionCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.every"}, "machinable.collection.ExecutionCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.filter"}, "machinable.collection.ExecutionCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.filter_by_module"}, "machinable.collection.ExecutionCollection.filter_by_predicate": {"kind": "routine", "realname": "filter_by_predicate", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.filter_by_predicate"}, "machinable.collection.ExecutionCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.first"}, "machinable.collection.ExecutionCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.flatten"}, "machinable.collection.ExecutionCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.forget"}, "machinable.collection.ExecutionCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.get"}, "machinable.collection.ExecutionCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.implode"}, "machinable.collection.ExecutionCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.last"}, "machinable.collection.ExecutionCollection.make": {"kind": "routine", "realname": null, "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.make"}, "machinable.collection.ExecutionCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.map"}, "machinable.collection.ExecutionCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.max"}, "machinable.collection.ExecutionCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.merge"}, "machinable.collection.ExecutionCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.min"}, "machinable.collection.ExecutionCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.only"}, "machinable.collection.ExecutionCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pluck"}, "machinable.collection.ExecutionCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pluck_or_nan"}, "machinable.collection.ExecutionCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pluck_or_none"}, "machinable.collection.ExecutionCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pop"}, "machinable.collection.ExecutionCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pprint"}, "machinable.collection.ExecutionCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.prepend"}, "machinable.collection.ExecutionCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pull"}, "machinable.collection.ExecutionCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.put"}, "machinable.collection.ExecutionCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.reduce"}, "machinable.collection.ExecutionCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.reject"}, "machinable.collection.ExecutionCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.reverse"}, "machinable.collection.ExecutionCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.section"}, "machinable.collection.ExecutionCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.serialize"}, "machinable.collection.ExecutionCollection.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.singleton"}, "machinable.collection.ExecutionCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.sort"}, "machinable.collection.ExecutionCollection.status": {"kind": "routine", "realname": "status", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.status"}, "machinable.collection.ExecutionCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.sum"}, "machinable.collection.ExecutionCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.take"}, "machinable.collection.ExecutionCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.transform"}, "machinable.collection.ExecutionCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.unique"}, "machinable.collection.ExecutionCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.where"}, "machinable.collection.ExecutionCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.without"}, "machinable.collection.ExecutionCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.zip"}, "machinable.collection.ExecutionCollection": {"kind": "class", "realname": "ExecutionCollection", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection", "parents": ["ElementCollection"]}, "machinable.collection.ExperimentCollection.active": {"kind": "routine", "realname": "active", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.active"}, "machinable.collection.ExperimentCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.all"}, "machinable.collection.ExperimentCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.append"}, "machinable.collection.ExperimentCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_dataframe"}, "machinable.collection.ExperimentCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_json"}, "machinable.collection.ExperimentCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_numpy"}, "machinable.collection.ExperimentCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_table"}, "machinable.collection.ExperimentCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.avg"}, "machinable.collection.ExperimentCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.chunk"}, "machinable.collection.ExperimentCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.collapse"}, "machinable.collection.ExperimentCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.contains"}, "machinable.collection.ExperimentCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.count"}, "machinable.collection.ExperimentCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.diff"}, "machinable.collection.ExperimentCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.each"}, "machinable.collection.ExperimentCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.empty"}, "machinable.collection.ExperimentCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.every"}, "machinable.collection.ExperimentCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.filter"}, "machinable.collection.ExperimentCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.filter_by_module"}, "machinable.collection.ExperimentCollection.filter_by_predicate": {"kind": "routine", "realname": "filter_by_predicate", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.filter_by_predicate"}, "machinable.collection.ExperimentCollection.finished": {"kind": "routine", "realname": "finished", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.finished"}, "machinable.collection.ExperimentCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.first"}, "machinable.collection.ExperimentCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.flatten"}, "machinable.collection.ExperimentCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.forget"}, "machinable.collection.ExperimentCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.get"}, "machinable.collection.ExperimentCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.implode"}, "machinable.collection.ExperimentCollection.incomplete": {"kind": "routine", "realname": "incomplete", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.incomplete"}, "machinable.collection.ExperimentCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.last"}, "machinable.collection.ExperimentCollection.launch": {"kind": "routine", "realname": "launch", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.launch"}, "machinable.collection.ExperimentCollection.make": {"kind": "routine", "realname": null, "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.make"}, "machinable.collection.ExperimentCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.map"}, "machinable.collection.ExperimentCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.max"}, "machinable.collection.ExperimentCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.merge"}, "machinable.collection.ExperimentCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.min"}, "machinable.collection.ExperimentCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.only"}, "machinable.collection.ExperimentCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pluck"}, "machinable.collection.ExperimentCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pluck_or_nan"}, "machinable.collection.ExperimentCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pluck_or_none"}, "machinable.collection.ExperimentCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pop"}, "machinable.collection.ExperimentCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pprint"}, "machinable.collection.ExperimentCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.prepend"}, "machinable.collection.ExperimentCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pull"}, "machinable.collection.ExperimentCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.put"}, "machinable.collection.ExperimentCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.reduce"}, "machinable.collection.ExperimentCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.reject"}, "machinable.collection.ExperimentCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.reverse"}, "machinable.collection.ExperimentCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.section"}, "machinable.collection.ExperimentCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.serialize"}, "machinable.collection.ExperimentCollection.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.singleton"}, "machinable.collection.ExperimentCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.sort"}, "machinable.collection.ExperimentCollection.started": {"kind": "routine", "realname": "started", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.started"}, "machinable.collection.ExperimentCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.sum"}, "machinable.collection.ExperimentCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.take"}, "machinable.collection.ExperimentCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.transform"}, "machinable.collection.ExperimentCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.unique"}, "machinable.collection.ExperimentCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.where"}, "machinable.collection.ExperimentCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.without"}, "machinable.collection.ExperimentCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.zip"}, "machinable.collection.ExperimentCollection": {"kind": "class", "realname": "ExperimentCollection", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection", "parents": ["ElementCollection"]}, "machinable.collection.RecordCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.all"}, "machinable.collection.RecordCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.append"}, "machinable.collection.RecordCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_dataframe"}, "machinable.collection.RecordCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_json"}, "machinable.collection.RecordCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_numpy"}, "machinable.collection.RecordCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_table"}, "machinable.collection.RecordCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.avg"}, "machinable.collection.RecordCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.chunk"}, "machinable.collection.RecordCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.collapse"}, "machinable.collection.RecordCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.contains"}, "machinable.collection.RecordCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.count"}, "machinable.collection.RecordCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.diff"}, "machinable.collection.RecordCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.each"}, "machinable.collection.RecordCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.empty"}, "machinable.collection.RecordCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.every"}, "machinable.collection.RecordCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.filter"}, "machinable.collection.RecordCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.filter_by_module"}, "machinable.collection.RecordCollection.filter_by_predicate": {"kind": "routine", "realname": "filter_by_predicate", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.filter_by_predicate"}, "machinable.collection.RecordCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.first"}, "machinable.collection.RecordCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.flatten"}, "machinable.collection.RecordCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.forget"}, "machinable.collection.RecordCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.get"}, "machinable.collection.RecordCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.implode"}, "machinable.collection.RecordCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.last"}, "machinable.collection.RecordCollection.make": {"kind": "routine", "realname": null, "name": "machinable.collection", "path": "machinable.collection.RecordCollection.make"}, "machinable.collection.RecordCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.map"}, "machinable.collection.RecordCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.max"}, "machinable.collection.RecordCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.merge"}, "machinable.collection.RecordCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.min"}, "machinable.collection.RecordCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.only"}, "machinable.collection.RecordCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pluck"}, "machinable.collection.RecordCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pluck_or_nan"}, "machinable.collection.RecordCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pluck_or_none"}, "machinable.collection.RecordCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pop"}, "machinable.collection.RecordCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pprint"}, "machinable.collection.RecordCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.prepend"}, "machinable.collection.RecordCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pull"}, "machinable.collection.RecordCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.put"}, "machinable.collection.RecordCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.reduce"}, "machinable.collection.RecordCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.reject"}, "machinable.collection.RecordCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.reverse"}, "machinable.collection.RecordCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.section"}, "machinable.collection.RecordCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.serialize"}, "machinable.collection.RecordCollection.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.singleton"}, "machinable.collection.RecordCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.sort"}, "machinable.collection.RecordCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.sum"}, "machinable.collection.RecordCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.take"}, "machinable.collection.RecordCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.transform"}, "machinable.collection.RecordCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.unique"}, "machinable.collection.RecordCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.where"}, "machinable.collection.RecordCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.without"}, "machinable.collection.RecordCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.zip"}, "machinable.collection.RecordCollection": {"kind": "class", "realname": "RecordCollection", "name": "machinable.collection", "path": "machinable.collection.RecordCollection", "parents": ["ElementCollection"]}, "machinable.collection.collect": {"kind": "routine", "realname": "collect", "name": "machinable.collection", "path": "machinable.collection.collect"}, "machinable.collection.data_get": {"kind": "routine", "realname": "data_get", "name": "machinable.collection", "path": "machinable.collection.data_get"}, "machinable.collection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.reduce"}, "machinable.collection": {"kind": "module", "name": "machinable.collection", "path": "machinable.collection"}, "machinable.config.Model.construct": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.construct"}, "machinable.config.Model.copy": {"kind": "routine", "realname": "copy", "name": "machinable.config", "path": "machinable.config.Model.copy"}, "machinable.config.Model.dict": {"kind": "routine", "realname": "dict", "name": "machinable.config", "path": "machinable.config.Model.dict"}, "machinable.config.Model.from_orm": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.from_orm"}, "machinable.config.Model.json": {"kind": "routine", "realname": "json", "name": "machinable.config", "path": "machinable.config.Model.json"}, "machinable.config.Model.parse_file": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.parse_file"}, "machinable.config.Model.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.parse_obj"}, "machinable.config.Model.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.parse_raw"}, "machinable.config.Model.schema": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.schema"}, "machinable.config.Model.schema_json": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.schema_json"}, "machinable.config.Model.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.update_forward_refs"}, "machinable.config.Model.validate": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.validate"}, "machinable.config.Model": {"kind": "class", "realname": "BaseModel", "name": "machinable.config", "path": "machinable.config.Model", "parents": ["pydantic.utils.Representation"]}, "machinable.config.Field": {"kind": "routine", "realname": "Field", "name": "machinable.config", "path": "machinable.config.Field"}, "machinable.config.validator": {"kind": "routine", "realname": "validator", "name": "machinable.config", "path": "machinable.config.validator"}, "machinable.config": {"kind": "module", "name": "machinable.config", "path": "machinable.config"}, "machinable.element.ConfigMethod": {"kind": "class", "realname": "ConfigMethod", "name": "machinable.element", "path": "machinable.element.ConfigMethod", "parents": ["builtins.object"]}, "machinable.element.Element.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.element", "path": "machinable.element.Element.as_default"}, "machinable.element.Element.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.element", "path": "machinable.element.Element.as_json"}, "machinable.element.Element.clone": {"kind": "routine", "realname": "clone", "name": "machinable.element", "path": "machinable.element.Element.clone"}, "machinable.element.Element.collect": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.collect"}, "machinable.element.Element.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.element", "path": "machinable.element.Element.compute_predicate"}, "machinable.element.Element.find": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.find"}, "machinable.element.Element.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.find_by_predicate"}, "machinable.element.Element.find_many": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.find_many"}, "machinable.element.Element.from_json": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.from_json"}, "machinable.element.Element.from_model": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.from_model"}, "machinable.element.Element.from_storage": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.from_storage"}, "machinable.element.Element.get": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.get"}, "machinable.element.Element.instance": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.instance"}, "machinable.element.Element.is_connected": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.is_connected"}, "machinable.element.Element.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.element", "path": "machinable.element.Element.is_mounted"}, "machinable.element.Element.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.element", "path": "machinable.element.Element.load_data"}, "machinable.element.Element.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.element", "path": "machinable.element.Element.load_file"}, "machinable.element.Element.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.element", "path": "machinable.element.Element.local_directory"}, "machinable.element.Element.make": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.make"}, "machinable.element.Element.matches": {"kind": "routine", "realname": "matches", "name": "machinable.element", "path": "machinable.element.Element.matches"}, "machinable.element.Element.model": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.model"}, "machinable.element.Element.mount": {"kind": "routine", "realname": "mount", "name": "machinable.element", "path": "machinable.element.Element.mount"}, "machinable.element.Element.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.element", "path": "machinable.element.Element.on_before_configure"}, "machinable.element.Element.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.element", "path": "machinable.element.Element.on_compute_predicate"}, "machinable.element.Element.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.element", "path": "machinable.element.Element.on_configure"}, "machinable.element.Element.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.element", "path": "machinable.element.Element.on_instantiate"}, "machinable.element.Element.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.element", "path": "machinable.element.Element.save_data"}, "machinable.element.Element.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.element", "path": "machinable.element.Element.save_file"}, "machinable.element.Element.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.element", "path": "machinable.element.Element.serialize"}, "machinable.element.Element.set_default": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.set_default"}, "machinable.element.Element.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.element", "path": "machinable.element.Element.set_model"}, "machinable.element.Element.singleton": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.singleton"}, "machinable.element.Element.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.element", "path": "machinable.element.Element.to_cli"}, "machinable.element.Element.unserialize": {"kind": "routine", "realname": null, "name": "machinable.element", "path": "machinable.element.Element.unserialize"}, "machinable.element.Element": {"kind": "class", "realname": "Element", "name": "machinable.element", "path": "machinable.element.Element", "parents": ["machinable.mixin.Mixin", "machinable.utils.Jsonable"]}, "machinable.element.belongs_to": {"kind": "routine", "realname": "belongs_to", "name": "machinable.element", "path": "machinable.element.belongs_to"}, "machinable.element.compact": {"kind": "routine", "realname": "compact", "name": "machinable.element", "path": "machinable.element.compact"}, "machinable.element.defaultversion": {"kind": "routine", "realname": "defaultversion", "name": "machinable.element", "path": "machinable.element.defaultversion"}, "machinable.element.equalversion": {"kind": "routine", "realname": "equalversion", "name": "machinable.element", "path": "machinable.element.equalversion"}, "machinable.element.extract": {"kind": "routine", "realname": "extract", "name": "machinable.element", "path": "machinable.element.extract"}, "machinable.element.get_dump": {"kind": "routine", "realname": "get_dump", "name": "machinable.element", "path": "machinable.element.get_dump"}, "machinable.element.get_lineage": {"kind": "routine", "realname": "get_lineage", "name": "machinable.element", "path": "machinable.element.get_lineage"}, "machinable.element.has_many": {"kind": "routine", "realname": "has_many", "name": "machinable.element", "path": "machinable.element.has_many"}, "machinable.element.has_one": {"kind": "routine", "realname": "belongs_to", "name": "machinable.element", "path": "machinable.element.has_one"}, "machinable.element.idversion": {"kind": "routine", "realname": "idversion", "name": "machinable.element", "path": "machinable.element.idversion"}, "machinable.element.instantiate": {"kind": "routine", "realname": "instantiate", "name": "machinable.element", "path": "machinable.element.instantiate"}, "machinable.element.normversion": {"kind": "routine", "realname": "normversion", "name": "machinable.element", "path": "machinable.element.normversion"}, "machinable.element.resolve_custom_predicate": {"kind": "routine", "realname": "resolve_custom_predicate", "name": "machinable.element", "path": "machinable.element.resolve_custom_predicate"}, "machinable.element.transfer_to": {"kind": "routine", "realname": "transfer_to", "name": "machinable.element", "path": "machinable.element.transfer_to"}, "machinable.element": {"kind": "module", "name": "machinable.element", "path": "machinable.element"}, "machinable.errors.ConfigurationError.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.ConfigurationError.with_traceback"}, "machinable.errors.ConfigurationError": {"kind": "class", "realname": "ConfigurationError", "name": "machinable.errors", "path": "machinable.errors.ConfigurationError", "parents": ["MachinableError"]}, "machinable.errors.DependencyMissing.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.DependencyMissing.with_traceback"}, "machinable.errors.DependencyMissing": {"kind": "class", "realname": "DependencyMissing", "name": "machinable.errors", "path": "machinable.errors.DependencyMissing", "parents": ["MachinableError", "builtins.ImportError"]}, "machinable.errors.ExecutionFailed.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.ExecutionFailed.with_traceback"}, "machinable.errors.ExecutionFailed": {"kind": "class", "realname": "ExecutionFailed", "name": "machinable.errors", "path": "machinable.errors.ExecutionFailed", "parents": ["MachinableError"]}, "machinable.errors.MachinableError.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.MachinableError.with_traceback"}, "machinable.errors.MachinableError": {"kind": "class", "realname": "MachinableError", "name": "machinable.errors", "path": "machinable.errors.MachinableError", "parents": ["builtins.Exception"]}, "machinable.errors.StorageError.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.StorageError.with_traceback"}, "machinable.errors.StorageError": {"kind": "class", "realname": "StorageError", "name": "machinable.errors", "path": "machinable.errors.StorageError", "parents": ["MachinableError"]}, "machinable.errors": {"kind": "module", "name": "machinable.errors", "path": "machinable.errors"}, "machinable.execution.Execution.add": {"kind": "routine", "realname": "add", "name": "machinable.execution", "path": "machinable.execution.Execution.add"}, "machinable.execution.Execution.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.execution", "path": "machinable.execution.Execution.as_default"}, "machinable.execution.Execution.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.execution", "path": "machinable.execution.Execution.as_json"}, "machinable.execution.Execution.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable.execution", "path": "machinable.execution.Execution.canonicalize_resources"}, "machinable.execution.Execution.clone": {"kind": "routine", "realname": "clone", "name": "machinable.execution", "path": "machinable.execution.Execution.clone"}, "machinable.execution.Execution.collect": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.collect"}, "machinable.execution.Execution.commit": {"kind": "routine", "realname": "commit", "name": "machinable.execution", "path": "machinable.execution.Execution.commit"}, "machinable.execution.Execution.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.execution", "path": "machinable.execution.Execution.compute_predicate"}, "machinable.execution.Execution.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable.execution", "path": "machinable.execution.Execution.compute_resources"}, "machinable.execution.Execution.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable.execution", "path": "machinable.execution.Execution.default_resources"}, "machinable.execution.Execution.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.execution", "path": "machinable.execution.Execution.dispatch"}, "machinable.execution.Execution.find": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.find"}, "machinable.execution.Execution.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.find_by_predicate"}, "machinable.execution.Execution.find_many": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.find_many"}, "machinable.execution.Execution.from_json": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.from_json"}, "machinable.execution.Execution.from_model": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.from_model"}, "machinable.execution.Execution.from_storage": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.from_storage"}, "machinable.execution.Execution.get": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.get"}, "machinable.execution.Execution.instance": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.instance"}, "machinable.execution.Execution.is_connected": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.is_connected"}, "machinable.execution.Execution.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.execution", "path": "machinable.execution.Execution.is_mounted"}, "machinable.execution.Execution.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.execution", "path": "machinable.execution.Execution.load_data"}, "machinable.execution.Execution.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.execution", "path": "machinable.execution.Execution.load_file"}, "machinable.execution.Execution.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.execution", "path": "machinable.execution.Execution.local_directory"}, "machinable.execution.Execution.make": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.make"}, "machinable.execution.Execution.matches": {"kind": "routine", "realname": "matches", "name": "machinable.execution", "path": "machinable.execution.Execution.matches"}, "machinable.execution.Execution.model": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.model"}, "machinable.execution.Execution.mount": {"kind": "routine", "realname": "mount", "name": "machinable.execution", "path": "machinable.execution.Execution.mount"}, "machinable.execution.Execution.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable.execution", "path": "machinable.execution.Execution.on_after_dispatch"}, "machinable.execution.Execution.on_before_commit": {"kind": "routine", "realname": "on_before_commit", "name": "machinable.execution", "path": "machinable.execution.Execution.on_before_commit"}, "machinable.execution.Execution.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.execution", "path": "machinable.execution.Execution.on_before_configure"}, "machinable.execution.Execution.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.execution", "path": "machinable.execution.Execution.on_before_dispatch"}, "machinable.execution.Execution.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.execution", "path": "machinable.execution.Execution.on_compute_predicate"}, "machinable.execution.Execution.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.execution", "path": "machinable.execution.Execution.on_configure"}, "machinable.execution.Execution.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.execution", "path": "machinable.execution.Execution.on_instantiate"}, "machinable.execution.Execution.on_verify_schedule": {"kind": "routine", "realname": "on_verify_schedule", "name": "machinable.execution", "path": "machinable.execution.Execution.on_verify_schedule"}, "machinable.execution.Execution.resources": {"kind": "routine", "realname": "resources", "name": "machinable.execution", "path": "machinable.execution.Execution.resources"}, "machinable.execution.Execution.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.execution", "path": "machinable.execution.Execution.save_data"}, "machinable.execution.Execution.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.execution", "path": "machinable.execution.Execution.save_file"}, "machinable.execution.Execution.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.execution", "path": "machinable.execution.Execution.serialize"}, "machinable.execution.Execution.set_default": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.set_default"}, "machinable.execution.Execution.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.execution", "path": "machinable.execution.Execution.set_model"}, "machinable.execution.Execution.singleton": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.singleton"}, "machinable.execution.Execution.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.execution", "path": "machinable.execution.Execution.to_cli"}, "machinable.execution.Execution.unserialize": {"kind": "routine", "realname": null, "name": "machinable.execution", "path": "machinable.execution.Execution.unserialize"}, "machinable.execution.Execution": {"kind": "class", "realname": "Execution", "name": "machinable.execution", "path": "machinable.execution.Execution", "parents": ["machinable.element.Element"]}, "machinable.execution": {"kind": "module", "name": "machinable.execution", "path": "machinable.execution"}, "machinable.experiment.Experiment.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.as_default"}, "machinable.experiment.Experiment.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.as_json"}, "machinable.experiment.Experiment.clone": {"kind": "routine", "realname": "clone", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.clone"}, "machinable.experiment.Experiment.collect": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.collect"}, "machinable.experiment.Experiment.commit": {"kind": "routine", "realname": "commit", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.commit"}, "machinable.experiment.Experiment.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.compute_predicate"}, "machinable.experiment.Experiment.created_at": {"kind": "routine", "realname": "created_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.created_at"}, "machinable.experiment.Experiment.derive": {"kind": "routine", "realname": "derive", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.derive"}, "machinable.experiment.Experiment.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.dispatch"}, "machinable.experiment.Experiment.dispatch_code": {"kind": "routine", "realname": "dispatch_code", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.dispatch_code"}, "machinable.experiment.Experiment.find": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find"}, "machinable.experiment.Experiment.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find_by_predicate"}, "machinable.experiment.Experiment.find_many": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find_many"}, "machinable.experiment.Experiment.finished_at": {"kind": "routine", "realname": "finished_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.finished_at"}, "machinable.experiment.Experiment.from_json": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.from_json"}, "machinable.experiment.Experiment.from_model": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.from_model"}, "machinable.experiment.Experiment.from_storage": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.from_storage"}, "machinable.experiment.Experiment.get": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.get"}, "machinable.experiment.Experiment.group_as": {"kind": "routine", "realname": "group_as", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.group_as"}, "machinable.experiment.Experiment.heartbeat_at": {"kind": "routine", "realname": "heartbeat_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.heartbeat_at"}, "machinable.experiment.Experiment.instance": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.instance"}, "machinable.experiment.Experiment.is_active": {"kind": "routine", "realname": "is_active", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_active"}, "machinable.experiment.Experiment.is_connected": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_connected"}, "machinable.experiment.Experiment.is_finished": {"kind": "routine", "realname": "is_finished", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_finished"}, "machinable.experiment.Experiment.is_incomplete": {"kind": "routine", "realname": "is_incomplete", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_incomplete"}, "machinable.experiment.Experiment.is_live": {"kind": "routine", "realname": "is_live", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_live"}, "machinable.experiment.Experiment.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_mounted"}, "machinable.experiment.Experiment.is_started": {"kind": "routine", "realname": "is_started", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_started"}, "machinable.experiment.Experiment.launch": {"kind": "routine", "realname": "launch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.launch"}, "machinable.experiment.Experiment.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.load_data"}, "machinable.experiment.Experiment.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.load_file"}, "machinable.experiment.Experiment.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.local_directory"}, "machinable.experiment.Experiment.make": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.make"}, "machinable.experiment.Experiment.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.mark_started"}, "machinable.experiment.Experiment.matches": {"kind": "routine", "realname": "matches", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.matches"}, "machinable.experiment.Experiment.model": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.model"}, "machinable.experiment.Experiment.mount": {"kind": "routine", "realname": "mount", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.mount"}, "machinable.experiment.Experiment.on_after_create": {"kind": "routine", "realname": "on_after_create", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_create"}, "machinable.experiment.Experiment.on_after_destroy": {"kind": "routine", "realname": "on_after_destroy", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_destroy"}, "machinable.experiment.Experiment.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_dispatch"}, "machinable.experiment.Experiment.on_before_commit": {"kind": "routine", "realname": "on_before_commit", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_commit"}, "machinable.experiment.Experiment.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_configure"}, "machinable.experiment.Experiment.on_before_create": {"kind": "routine", "realname": "on_before_create", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_create"}, "machinable.experiment.Experiment.on_before_destroy": {"kind": "routine", "realname": "on_before_destroy", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_destroy"}, "machinable.experiment.Experiment.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_dispatch"}, "machinable.experiment.Experiment.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_compute_predicate"}, "machinable.experiment.Experiment.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_configure"}, "machinable.experiment.Experiment.on_create": {"kind": "routine", "realname": "on_create", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_create"}, "machinable.experiment.Experiment.on_destroy": {"kind": "routine", "realname": "on_destroy", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_destroy"}, "machinable.experiment.Experiment.on_failure": {"kind": "routine", "realname": "on_failure", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_failure"}, "machinable.experiment.Experiment.on_finish": {"kind": "routine", "realname": "on_finish", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_finish"}, "machinable.experiment.Experiment.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_instantiate"}, "machinable.experiment.Experiment.on_seeding": {"kind": "routine", "realname": "on_seeding", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_seeding"}, "machinable.experiment.Experiment.on_success": {"kind": "routine", "realname": "on_success", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_success"}, "machinable.experiment.Experiment.on_write_meta_data": {"kind": "routine", "realname": "on_write_meta_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_write_meta_data"}, "machinable.experiment.Experiment.output": {"kind": "routine", "realname": "output", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.output"}, "machinable.experiment.Experiment.record": {"kind": "routine", "realname": "record", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.record"}, "machinable.experiment.Experiment.records": {"kind": "routine", "realname": "records", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.records"}, "machinable.experiment.Experiment.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.save_data"}, "machinable.experiment.Experiment.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.save_file"}, "machinable.experiment.Experiment.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.serialize"}, "machinable.experiment.Experiment.set_default": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.set_default"}, "machinable.experiment.Experiment.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.set_model"}, "machinable.experiment.Experiment.singleton": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.singleton"}, "machinable.experiment.Experiment.started_at": {"kind": "routine", "realname": "started_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.started_at"}, "machinable.experiment.Experiment.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.to_cli"}, "machinable.experiment.Experiment.unserialize": {"kind": "routine", "realname": null, "name": "machinable.experiment", "path": "machinable.experiment.Experiment.unserialize"}, "machinable.experiment.Experiment.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.update_heartbeat"}, "machinable.experiment.Experiment.use": {"kind": "routine", "realname": "use", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.use"}, "machinable.experiment.Experiment.version": {"kind": "routine", "realname": "version", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.version"}, "machinable.experiment.Experiment": {"kind": "class", "realname": "Experiment", "name": "machinable.experiment", "path": "machinable.experiment.Experiment", "parents": ["machinable.element.Element"]}, "machinable.experiment": {"kind": "module", "name": "machinable.experiment", "path": "machinable.experiment"}, "machinable.group.Group.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.group", "path": "machinable.group.Group.as_default"}, "machinable.group.Group.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.group", "path": "machinable.group.Group.as_json"}, "machinable.group.Group.clone": {"kind": "routine", "realname": "clone", "name": "machinable.group", "path": "machinable.group.Group.clone"}, "machinable.group.Group.collect": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.collect"}, "machinable.group.Group.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.group", "path": "machinable.group.Group.compute_predicate"}, "machinable.group.Group.find": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.find"}, "machinable.group.Group.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.find_by_predicate"}, "machinable.group.Group.find_many": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.find_many"}, "machinable.group.Group.from_json": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.from_json"}, "machinable.group.Group.from_model": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.from_model"}, "machinable.group.Group.from_storage": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.from_storage"}, "machinable.group.Group.get": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.get"}, "machinable.group.Group.instance": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.instance"}, "machinable.group.Group.is_connected": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.is_connected"}, "machinable.group.Group.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.group", "path": "machinable.group.Group.is_mounted"}, "machinable.group.Group.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.group", "path": "machinable.group.Group.load_data"}, "machinable.group.Group.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.group", "path": "machinable.group.Group.load_file"}, "machinable.group.Group.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.group", "path": "machinable.group.Group.local_directory"}, "machinable.group.Group.make": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.make"}, "machinable.group.Group.matches": {"kind": "routine", "realname": "matches", "name": "machinable.group", "path": "machinable.group.Group.matches"}, "machinable.group.Group.model": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.model"}, "machinable.group.Group.mount": {"kind": "routine", "realname": "mount", "name": "machinable.group", "path": "machinable.group.Group.mount"}, "machinable.group.Group.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.group", "path": "machinable.group.Group.on_before_configure"}, "machinable.group.Group.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.group", "path": "machinable.group.Group.on_compute_predicate"}, "machinable.group.Group.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.group", "path": "machinable.group.Group.on_configure"}, "machinable.group.Group.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.group", "path": "machinable.group.Group.on_instantiate"}, "machinable.group.Group.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.group", "path": "machinable.group.Group.save_data"}, "machinable.group.Group.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.group", "path": "machinable.group.Group.save_file"}, "machinable.group.Group.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.group", "path": "machinable.group.Group.serialize"}, "machinable.group.Group.set_default": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.set_default"}, "machinable.group.Group.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.group", "path": "machinable.group.Group.set_model"}, "machinable.group.Group.singleton": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.singleton"}, "machinable.group.Group.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.group", "path": "machinable.group.Group.to_cli"}, "machinable.group.Group.unserialize": {"kind": "routine", "realname": null, "name": "machinable.group", "path": "machinable.group.Group.unserialize"}, "machinable.group.Group": {"kind": "class", "realname": "Group", "name": "machinable.group", "path": "machinable.group.Group", "parents": ["machinable.element.Element"]}, "machinable.group.normgroup": {"kind": "routine", "realname": "normgroup", "name": "machinable.group", "path": "machinable.group.normgroup"}, "machinable.group.resolve_group": {"kind": "routine", "realname": "resolve_group", "name": "machinable.group", "path": "machinable.group.resolve_group"}, "machinable.group": {"kind": "module", "name": "machinable.group", "path": "machinable.group"}, "machinable.project.Project.add_to_path": {"kind": "routine", "realname": "add_to_path", "name": "machinable.project", "path": "machinable.project.Project.add_to_path"}, "machinable.project.Project.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.project", "path": "machinable.project.Project.as_default"}, "machinable.project.Project.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.project", "path": "machinable.project.Project.as_json"}, "machinable.project.Project.clone": {"kind": "routine", "realname": "clone", "name": "machinable.project", "path": "machinable.project.Project.clone"}, "machinable.project.Project.collect": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.collect"}, "machinable.project.Project.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.project", "path": "machinable.project.Project.compute_predicate"}, "machinable.project.Project.element": {"kind": "routine", "realname": "element", "name": "machinable.project", "path": "machinable.project.Project.element"}, "machinable.project.Project.exists": {"kind": "routine", "realname": "exists", "name": "machinable.project", "path": "machinable.project.Project.exists"}, "machinable.project.Project.find": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.find"}, "machinable.project.Project.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.find_by_predicate"}, "machinable.project.Project.find_many": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.find_many"}, "machinable.project.Project.from_json": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.from_json"}, "machinable.project.Project.from_model": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.from_model"}, "machinable.project.Project.from_storage": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.from_storage"}, "machinable.project.Project.get": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.get"}, "machinable.project.Project.get_code_version": {"kind": "routine", "realname": "get_code_version", "name": "machinable.project", "path": "machinable.project.Project.get_code_version"}, "machinable.project.Project.get_diff": {"kind": "routine", "realname": "get_diff", "name": "machinable.project", "path": "machinable.project.Project.get_diff"}, "machinable.project.Project.get_host_info": {"kind": "routine", "realname": "get_host_info", "name": "machinable.project", "path": "machinable.project.Project.get_host_info"}, "machinable.project.Project.get_root": {"kind": "routine", "realname": "get_root", "name": "machinable.project", "path": "machinable.project.Project.get_root"}, "machinable.project.Project.get_vendors": {"kind": "routine", "realname": "get_vendors", "name": "machinable.project", "path": "machinable.project.Project.get_vendors"}, "machinable.project.Project.global_predicate": {"kind": "routine", "realname": "global_predicate", "name": "machinable.project", "path": "machinable.project.Project.global_predicate"}, "machinable.project.Project.instance": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.instance"}, "machinable.project.Project.is_connected": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.is_connected"}, "machinable.project.Project.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.project", "path": "machinable.project.Project.is_mounted"}, "machinable.project.Project.is_root": {"kind": "routine", "realname": "is_root", "name": "machinable.project", "path": "machinable.project.Project.is_root"}, "machinable.project.Project.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.project", "path": "machinable.project.Project.load_data"}, "machinable.project.Project.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.project", "path": "machinable.project.Project.load_file"}, "machinable.project.Project.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.project", "path": "machinable.project.Project.local_directory"}, "machinable.project.Project.make": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.make"}, "machinable.project.Project.matches": {"kind": "routine", "realname": "matches", "name": "machinable.project", "path": "machinable.project.Project.matches"}, "machinable.project.Project.model": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.model"}, "machinable.project.Project.mount": {"kind": "routine", "realname": "mount", "name": "machinable.project", "path": "machinable.project.Project.mount"}, "machinable.project.Project.name": {"kind": "routine", "realname": "name", "name": "machinable.project", "path": "machinable.project.Project.name"}, "machinable.project.Project.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.project", "path": "machinable.project.Project.on_before_configure"}, "machinable.project.Project.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.project", "path": "machinable.project.Project.on_compute_predicate"}, "machinable.project.Project.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.project", "path": "machinable.project.Project.on_configure"}, "machinable.project.Project.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.project", "path": "machinable.project.Project.on_instantiate"}, "machinable.project.Project.on_parse_cli": {"kind": "routine", "realname": "on_parse_cli", "name": "machinable.project", "path": "machinable.project.Project.on_parse_cli"}, "machinable.project.Project.on_resolve_element": {"kind": "routine", "realname": "on_resolve_element", "name": "machinable.project", "path": "machinable.project.Project.on_resolve_element"}, "machinable.project.Project.on_resolve_vendor": {"kind": "routine", "realname": "on_resolve_vendor", "name": "machinable.project", "path": "machinable.project.Project.on_resolve_vendor"}, "machinable.project.Project.path": {"kind": "routine", "realname": "path", "name": "machinable.project", "path": "machinable.project.Project.path"}, "machinable.project.Project.provider": {"kind": "routine", "realname": "provider", "name": "machinable.project", "path": "machinable.project.Project.provider"}, "machinable.project.Project.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.project", "path": "machinable.project.Project.save_data"}, "machinable.project.Project.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.project", "path": "machinable.project.Project.save_file"}, "machinable.project.Project.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.project", "path": "machinable.project.Project.serialize"}, "machinable.project.Project.set_default": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.set_default"}, "machinable.project.Project.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.project", "path": "machinable.project.Project.set_model"}, "machinable.project.Project.singleton": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.singleton"}, "machinable.project.Project.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.project", "path": "machinable.project.Project.to_cli"}, "machinable.project.Project.unserialize": {"kind": "routine", "realname": null, "name": "machinable.project", "path": "machinable.project.Project.unserialize"}, "machinable.project.Project": {"kind": "class", "realname": "Project", "name": "machinable.project", "path": "machinable.project.Project", "parents": ["machinable.element.Element"]}, "machinable.project.fetch_directory": {"kind": "routine", "realname": "fetch_directory", "name": "machinable.project", "path": "machinable.project.fetch_directory"}, "machinable.project.fetch_git": {"kind": "routine", "realname": "fetch_git", "name": "machinable.project", "path": "machinable.project.fetch_git"}, "machinable.project.fetch_link": {"kind": "routine", "realname": "fetch_link", "name": "machinable.project", "path": "machinable.project.fetch_link"}, "machinable.project.fetch_vendor": {"kind": "routine", "realname": "fetch_vendor", "name": "machinable.project", "path": "machinable.project.fetch_vendor"}, "machinable.project.fetch_vendors": {"kind": "routine", "realname": "fetch_vendors", "name": "machinable.project", "path": "machinable.project.fetch_vendors"}, "machinable.project.import_element": {"kind": "routine", "realname": "import_element", "name": "machinable.project", "path": "machinable.project.import_element"}, "machinable.project": {"kind": "module", "name": "machinable.project", "path": "machinable.project"}, "machinable.record.Record.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.record", "path": "machinable.record.Record.as_default"}, "machinable.record.Record.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.record", "path": "machinable.record.Record.as_json"}, "machinable.record.Record.clone": {"kind": "routine", "realname": "clone", "name": "machinable.record", "path": "machinable.record.Record.clone"}, "machinable.record.Record.collect": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.collect"}, "machinable.record.Record.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.record", "path": "machinable.record.Record.compute_predicate"}, "machinable.record.Record.empty": {"kind": "routine", "realname": "empty", "name": "machinable.record", "path": "machinable.record.Record.empty"}, "machinable.record.Record.find": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.find"}, "machinable.record.Record.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.find_by_predicate"}, "machinable.record.Record.find_many": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.find_many"}, "machinable.record.Record.from_json": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.from_json"}, "machinable.record.Record.from_model": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.from_model"}, "machinable.record.Record.from_storage": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.from_storage"}, "machinable.record.Record.get": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.get"}, "machinable.record.Record.instance": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.instance"}, "machinable.record.Record.is_connected": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.is_connected"}, "machinable.record.Record.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.record", "path": "machinable.record.Record.is_mounted"}, "machinable.record.Record.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.record", "path": "machinable.record.Record.load_data"}, "machinable.record.Record.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.record", "path": "machinable.record.Record.load_file"}, "machinable.record.Record.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.record", "path": "machinable.record.Record.local_directory"}, "machinable.record.Record.make": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.make"}, "machinable.record.Record.matches": {"kind": "routine", "realname": "matches", "name": "machinable.record", "path": "machinable.record.Record.matches"}, "machinable.record.Record.model": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.model"}, "machinable.record.Record.mount": {"kind": "routine", "realname": "mount", "name": "machinable.record", "path": "machinable.record.Record.mount"}, "machinable.record.Record.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.record", "path": "machinable.record.Record.on_before_configure"}, "machinable.record.Record.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.record", "path": "machinable.record.Record.on_compute_predicate"}, "machinable.record.Record.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.record", "path": "machinable.record.Record.on_configure"}, "machinable.record.Record.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.record", "path": "machinable.record.Record.on_instantiate"}, "machinable.record.Record.save": {"kind": "routine", "realname": "save", "name": "machinable.record", "path": "machinable.record.Record.save"}, "machinable.record.Record.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.record", "path": "machinable.record.Record.save_data"}, "machinable.record.Record.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.record", "path": "machinable.record.Record.save_file"}, "machinable.record.Record.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.record", "path": "machinable.record.Record.serialize"}, "machinable.record.Record.set_default": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.set_default"}, "machinable.record.Record.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.record", "path": "machinable.record.Record.set_model"}, "machinable.record.Record.singleton": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.singleton"}, "machinable.record.Record.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.record", "path": "machinable.record.Record.to_cli"}, "machinable.record.Record.unserialize": {"kind": "routine", "realname": null, "name": "machinable.record", "path": "machinable.record.Record.unserialize"}, "machinable.record.Record.update": {"kind": "routine", "realname": "update", "name": "machinable.record", "path": "machinable.record.Record.update"}, "machinable.record.Record.write": {"kind": "routine", "realname": "write", "name": "machinable.record", "path": "machinable.record.Record.write"}, "machinable.record.Record": {"kind": "class", "realname": "Record", "name": "machinable.record", "path": "machinable.record.Record", "parents": ["machinable.element.Element"]}, "machinable.record": {"kind": "module", "name": "machinable.record", "path": "machinable.record"}, "machinable.schedule.Schedule.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.as_default"}, "machinable.schedule.Schedule.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.as_json"}, "machinable.schedule.Schedule.clone": {"kind": "routine", "realname": "clone", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.clone"}, "machinable.schedule.Schedule.collect": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.collect"}, "machinable.schedule.Schedule.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.compute_predicate"}, "machinable.schedule.Schedule.find": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.find"}, "machinable.schedule.Schedule.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.find_by_predicate"}, "machinable.schedule.Schedule.find_many": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.find_many"}, "machinable.schedule.Schedule.from_json": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.from_json"}, "machinable.schedule.Schedule.from_model": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.from_model"}, "machinable.schedule.Schedule.from_storage": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.from_storage"}, "machinable.schedule.Schedule.get": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.get"}, "machinable.schedule.Schedule.instance": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.instance"}, "machinable.schedule.Schedule.is_connected": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.is_connected"}, "machinable.schedule.Schedule.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.is_mounted"}, "machinable.schedule.Schedule.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.load_data"}, "machinable.schedule.Schedule.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.load_file"}, "machinable.schedule.Schedule.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.local_directory"}, "machinable.schedule.Schedule.make": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.make"}, "machinable.schedule.Schedule.matches": {"kind": "routine", "realname": "matches", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.matches"}, "machinable.schedule.Schedule.model": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.model"}, "machinable.schedule.Schedule.mount": {"kind": "routine", "realname": "mount", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.mount"}, "machinable.schedule.Schedule.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.on_before_configure"}, "machinable.schedule.Schedule.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.on_compute_predicate"}, "machinable.schedule.Schedule.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.on_configure"}, "machinable.schedule.Schedule.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.on_instantiate"}, "machinable.schedule.Schedule.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.save_data"}, "machinable.schedule.Schedule.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.save_file"}, "machinable.schedule.Schedule.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.serialize"}, "machinable.schedule.Schedule.set_default": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.set_default"}, "machinable.schedule.Schedule.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.set_model"}, "machinable.schedule.Schedule.singleton": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.singleton"}, "machinable.schedule.Schedule.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.schedule", "path": "machinable.schedule.Schedule.to_cli"}, "machinable.schedule.Schedule.unserialize": {"kind": "routine", "realname": null, "name": "machinable.schedule", "path": "machinable.schedule.Schedule.unserialize"}, "machinable.schedule.Schedule": {"kind": "class", "realname": "Schedule", "name": "machinable.schedule", "path": "machinable.schedule.Schedule", "parents": ["machinable.element.Element"]}, "machinable.schedule": {"kind": "module", "name": "machinable.schedule", "path": "machinable.schedule"}, "machinable.schema.Element.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.construct"}, "machinable.schema.Element.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Element.copy"}, "machinable.schema.Element.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Element.dict"}, "machinable.schema.Element.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.from_orm"}, "machinable.schema.Element.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Element.json"}, "machinable.schema.Element.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.parse_file"}, "machinable.schema.Element.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.parse_obj"}, "machinable.schema.Element.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.parse_raw"}, "machinable.schema.Element.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.schema"}, "machinable.schema.Element.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.schema_json"}, "machinable.schema.Element.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.update_forward_refs"}, "machinable.schema.Element.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.validate"}, "machinable.schema.Element": {"kind": "class", "realname": "Element", "name": "machinable.schema", "path": "machinable.schema.Element", "parents": ["pydantic.main.BaseModel"]}, "machinable.schema.Execution.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.construct"}, "machinable.schema.Execution.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Execution.copy"}, "machinable.schema.Execution.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Execution.dict"}, "machinable.schema.Execution.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.from_orm"}, "machinable.schema.Execution.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Execution.json"}, "machinable.schema.Execution.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.parse_file"}, "machinable.schema.Execution.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.parse_obj"}, "machinable.schema.Execution.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.parse_raw"}, "machinable.schema.Execution.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.schema"}, "machinable.schema.Execution.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.schema_json"}, "machinable.schema.Execution.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.update_forward_refs"}, "machinable.schema.Execution.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.validate"}, "machinable.schema.Execution": {"kind": "class", "realname": "Execution", "name": "machinable.schema", "path": "machinable.schema.Execution", "parents": ["Element"]}, "machinable.schema.Experiment.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.construct"}, "machinable.schema.Experiment.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Experiment.copy"}, "machinable.schema.Experiment.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Experiment.dict"}, "machinable.schema.Experiment.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.from_orm"}, "machinable.schema.Experiment.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Experiment.json"}, "machinable.schema.Experiment.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.parse_file"}, "machinable.schema.Experiment.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.parse_obj"}, "machinable.schema.Experiment.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.parse_raw"}, "machinable.schema.Experiment.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.schema"}, "machinable.schema.Experiment.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.schema_json"}, "machinable.schema.Experiment.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.update_forward_refs"}, "machinable.schema.Experiment.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.validate"}, "machinable.schema.Experiment": {"kind": "class", "realname": "Experiment", "name": "machinable.schema", "path": "machinable.schema.Experiment", "parents": ["Element"]}, "machinable.schema.Group.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.construct"}, "machinable.schema.Group.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Group.copy"}, "machinable.schema.Group.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Group.dict"}, "machinable.schema.Group.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.from_orm"}, "machinable.schema.Group.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Group.json"}, "machinable.schema.Group.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.parse_file"}, "machinable.schema.Group.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.parse_obj"}, "machinable.schema.Group.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.parse_raw"}, "machinable.schema.Group.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.schema"}, "machinable.schema.Group.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.schema_json"}, "machinable.schema.Group.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.update_forward_refs"}, "machinable.schema.Group.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.validate"}, "machinable.schema.Group": {"kind": "class", "realname": "Group", "name": "machinable.schema", "path": "machinable.schema.Group", "parents": ["Element"]}, "machinable.schema.Project.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.construct"}, "machinable.schema.Project.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Project.copy"}, "machinable.schema.Project.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Project.dict"}, "machinable.schema.Project.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.from_orm"}, "machinable.schema.Project.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Project.json"}, "machinable.schema.Project.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.parse_file"}, "machinable.schema.Project.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.parse_obj"}, "machinable.schema.Project.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.parse_raw"}, "machinable.schema.Project.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.schema"}, "machinable.schema.Project.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.schema_json"}, "machinable.schema.Project.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.update_forward_refs"}, "machinable.schema.Project.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.validate"}, "machinable.schema.Project": {"kind": "class", "realname": "Project", "name": "machinable.schema", "path": "machinable.schema.Project", "parents": ["Element"]}, "machinable.schema.Record.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.construct"}, "machinable.schema.Record.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Record.copy"}, "machinable.schema.Record.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Record.dict"}, "machinable.schema.Record.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.from_orm"}, "machinable.schema.Record.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Record.json"}, "machinable.schema.Record.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.parse_file"}, "machinable.schema.Record.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.parse_obj"}, "machinable.schema.Record.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.parse_raw"}, "machinable.schema.Record.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.schema"}, "machinable.schema.Record.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.schema_json"}, "machinable.schema.Record.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.update_forward_refs"}, "machinable.schema.Record.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.validate"}, "machinable.schema.Record": {"kind": "class", "realname": "Record", "name": "machinable.schema", "path": "machinable.schema.Record", "parents": ["Element"]}, "machinable.schema.Schedule.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.construct"}, "machinable.schema.Schedule.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Schedule.copy"}, "machinable.schema.Schedule.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Schedule.dict"}, "machinable.schema.Schedule.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.from_orm"}, "machinable.schema.Schedule.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Schedule.json"}, "machinable.schema.Schedule.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.parse_file"}, "machinable.schema.Schedule.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.parse_obj"}, "machinable.schema.Schedule.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.parse_raw"}, "machinable.schema.Schedule.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.schema"}, "machinable.schema.Schedule.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.schema_json"}, "machinable.schema.Schedule.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.update_forward_refs"}, "machinable.schema.Schedule.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Schedule.validate"}, "machinable.schema.Schedule": {"kind": "class", "realname": "Schedule", "name": "machinable.schema", "path": "machinable.schema.Schedule", "parents": ["Element"]}, "machinable.schema.Storage.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.construct"}, "machinable.schema.Storage.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Storage.copy"}, "machinable.schema.Storage.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Storage.dict"}, "machinable.schema.Storage.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.from_orm"}, "machinable.schema.Storage.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Storage.json"}, "machinable.schema.Storage.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.parse_file"}, "machinable.schema.Storage.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.parse_obj"}, "machinable.schema.Storage.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.parse_raw"}, "machinable.schema.Storage.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.schema"}, "machinable.schema.Storage.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.schema_json"}, "machinable.schema.Storage.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.update_forward_refs"}, "machinable.schema.Storage.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.validate"}, "machinable.schema.Storage": {"kind": "class", "realname": "Storage", "name": "machinable.schema", "path": "machinable.schema.Storage", "parents": ["Element"]}, "machinable.schema": {"kind": "module", "name": "machinable.schema", "path": "machinable.schema"}, "machinable.settings.Settings.construct": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.construct"}, "machinable.settings.Settings.copy": {"kind": "routine", "realname": "copy", "name": "machinable.settings", "path": "machinable.settings.Settings.copy"}, "machinable.settings.Settings.dict": {"kind": "routine", "realname": "dict", "name": "machinable.settings", "path": "machinable.settings.Settings.dict"}, "machinable.settings.Settings.from_orm": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.from_orm"}, "machinable.settings.Settings.json": {"kind": "routine", "realname": "json", "name": "machinable.settings", "path": "machinable.settings.Settings.json"}, "machinable.settings.Settings.parse_file": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.parse_file"}, "machinable.settings.Settings.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.parse_obj"}, "machinable.settings.Settings.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.parse_raw"}, "machinable.settings.Settings.schema": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.schema"}, "machinable.settings.Settings.schema_json": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.schema_json"}, "machinable.settings.Settings.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.update_forward_refs"}, "machinable.settings.Settings.validate": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.validate"}, "machinable.settings.Settings": {"kind": "class", "realname": "Settings", "name": "machinable.settings", "path": "machinable.settings.Settings", "parents": ["pydantic.main.BaseModel"]}, "machinable.settings.get_settings": {"kind": "routine", "realname": "get_settings", "name": "machinable.settings", "path": "machinable.settings.get_settings"}, "machinable.settings": {"kind": "module", "name": "machinable.settings", "path": "machinable.settings"}, "machinable.storage": {"kind": "module", "name": "machinable.storage", "path": "machinable.storage"}, "machinable.storage.filesystem.Filesystem.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.as_default"}, "machinable.storage.filesystem.Filesystem.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.as_json"}, "machinable.storage.filesystem.Filesystem.clone": {"kind": "routine", "realname": "clone", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.clone"}, "machinable.storage.filesystem.Filesystem.collect": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.collect"}, "machinable.storage.filesystem.Filesystem.commit": {"kind": "routine", "realname": "commit", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.commit"}, "machinable.storage.filesystem.Filesystem.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.compute_predicate"}, "machinable.storage.filesystem.Filesystem.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_element"}, "machinable.storage.filesystem.Filesystem.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_execution"}, "machinable.storage.filesystem.Filesystem.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_experiment"}, "machinable.storage.filesystem.Filesystem.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_file"}, "machinable.storage.filesystem.Filesystem.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_group"}, "machinable.storage.filesystem.Filesystem.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_project"}, "machinable.storage.filesystem.Filesystem.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_record"}, "machinable.storage.filesystem.Filesystem.find": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find"}, "machinable.storage.filesystem.Filesystem.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_by_predicate"}, "machinable.storage.filesystem.Filesystem.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_experiment"}, "machinable.storage.filesystem.Filesystem.find_experiment_by_predicate": {"kind": "routine", "realname": "find_experiment_by_predicate", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_experiment_by_predicate"}, "machinable.storage.filesystem.Filesystem.find_many": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_many"}, "machinable.storage.filesystem.Filesystem.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_related"}, "machinable.storage.filesystem.Filesystem.from_json": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.from_json"}, "machinable.storage.filesystem.Filesystem.from_model": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.from_model"}, "machinable.storage.filesystem.Filesystem.from_storage": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.from_storage"}, "machinable.storage.filesystem.Filesystem.get": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.get"}, "machinable.storage.filesystem.Filesystem.instance": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.instance"}, "machinable.storage.filesystem.Filesystem.is_connected": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.is_connected"}, "machinable.storage.filesystem.Filesystem.is_migrated": {"kind": "routine", "realname": "is_migrated", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.is_migrated"}, "machinable.storage.filesystem.Filesystem.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.is_mounted"}, "machinable.storage.filesystem.Filesystem.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.load_data"}, "machinable.storage.filesystem.Filesystem.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.load_file"}, "machinable.storage.filesystem.Filesystem.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.local_directory"}, "machinable.storage.filesystem.Filesystem.make": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.make"}, "machinable.storage.filesystem.Filesystem.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.mark_started"}, "machinable.storage.filesystem.Filesystem.matches": {"kind": "routine", "realname": "matches", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.matches"}, "machinable.storage.filesystem.Filesystem.migrate": {"kind": "routine", "realname": "migrate", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.migrate"}, "machinable.storage.filesystem.Filesystem.model": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.model"}, "machinable.storage.filesystem.Filesystem.mount": {"kind": "routine", "realname": "mount", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.mount"}, "machinable.storage.filesystem.Filesystem.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_before_configure"}, "machinable.storage.filesystem.Filesystem.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_compute_predicate"}, "machinable.storage.filesystem.Filesystem.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_configure"}, "machinable.storage.filesystem.Filesystem.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_instantiate"}, "machinable.storage.filesystem.Filesystem.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_element"}, "machinable.storage.filesystem.Filesystem.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_elements"}, "machinable.storage.filesystem.Filesystem.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_execution"}, "machinable.storage.filesystem.Filesystem.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_executions"}, "machinable.storage.filesystem.Filesystem.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_experiment"}, "machinable.storage.filesystem.Filesystem.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_experiments"}, "machinable.storage.filesystem.Filesystem.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_file"}, "machinable.storage.filesystem.Filesystem.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_group"}, "machinable.storage.filesystem.Filesystem.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_output"}, "machinable.storage.filesystem.Filesystem.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_project"}, "machinable.storage.filesystem.Filesystem.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_records"}, "machinable.storage.filesystem.Filesystem.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_related"}, "machinable.storage.filesystem.Filesystem.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_status"}, "machinable.storage.filesystem.Filesystem.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.save_data"}, "machinable.storage.filesystem.Filesystem.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.save_file"}, "machinable.storage.filesystem.Filesystem.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.serialize"}, "machinable.storage.filesystem.Filesystem.set_default": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.set_default"}, "machinable.storage.filesystem.Filesystem.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.set_model"}, "machinable.storage.filesystem.Filesystem.singleton": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.singleton"}, "machinable.storage.filesystem.Filesystem.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.to_cli"}, "machinable.storage.filesystem.Filesystem.unserialize": {"kind": "routine", "realname": null, "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.unserialize"}, "machinable.storage.filesystem.Filesystem.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.update_heartbeat"}, "machinable.storage.filesystem.Filesystem": {"kind": "class", "realname": "Filesystem", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem", "parents": ["machinable.storage.storage.Storage"]}, "machinable.storage.filesystem": {"kind": "module", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem"}, "machinable.storage.multiple.Multiple.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.as_default"}, "machinable.storage.multiple.Multiple.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.as_json"}, "machinable.storage.multiple.Multiple.clone": {"kind": "routine", "realname": "clone", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.clone"}, "machinable.storage.multiple.Multiple.collect": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.collect"}, "machinable.storage.multiple.Multiple.commit": {"kind": "routine", "realname": "commit", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.commit"}, "machinable.storage.multiple.Multiple.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.compute_predicate"}, "machinable.storage.multiple.Multiple.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_element"}, "machinable.storage.multiple.Multiple.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_execution"}, "machinable.storage.multiple.Multiple.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_experiment"}, "machinable.storage.multiple.Multiple.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_file"}, "machinable.storage.multiple.Multiple.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_group"}, "machinable.storage.multiple.Multiple.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_project"}, "machinable.storage.multiple.Multiple.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_record"}, "machinable.storage.multiple.Multiple.find": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find"}, "machinable.storage.multiple.Multiple.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_by_predicate"}, "machinable.storage.multiple.Multiple.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_experiment"}, "machinable.storage.multiple.Multiple.find_experiment_by_predicate": {"kind": "routine", "realname": "find_experiment_by_predicate", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_experiment_by_predicate"}, "machinable.storage.multiple.Multiple.find_many": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_many"}, "machinable.storage.multiple.Multiple.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_related"}, "machinable.storage.multiple.Multiple.from_json": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.from_json"}, "machinable.storage.multiple.Multiple.from_model": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.from_model"}, "machinable.storage.multiple.Multiple.from_storage": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.from_storage"}, "machinable.storage.multiple.Multiple.get": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.get"}, "machinable.storage.multiple.Multiple.instance": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.instance"}, "machinable.storage.multiple.Multiple.is_connected": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.is_connected"}, "machinable.storage.multiple.Multiple.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.is_mounted"}, "machinable.storage.multiple.Multiple.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.load_data"}, "machinable.storage.multiple.Multiple.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.load_file"}, "machinable.storage.multiple.Multiple.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.local_directory"}, "machinable.storage.multiple.Multiple.make": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.make"}, "machinable.storage.multiple.Multiple.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.mark_started"}, "machinable.storage.multiple.Multiple.matches": {"kind": "routine", "realname": "matches", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.matches"}, "machinable.storage.multiple.Multiple.model": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.model"}, "machinable.storage.multiple.Multiple.mount": {"kind": "routine", "realname": "mount", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.mount"}, "machinable.storage.multiple.Multiple.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_before_configure"}, "machinable.storage.multiple.Multiple.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_compute_predicate"}, "machinable.storage.multiple.Multiple.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_configure"}, "machinable.storage.multiple.Multiple.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_instantiate"}, "machinable.storage.multiple.Multiple.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_element"}, "machinable.storage.multiple.Multiple.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_elements"}, "machinable.storage.multiple.Multiple.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_execution"}, "machinable.storage.multiple.Multiple.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_executions"}, "machinable.storage.multiple.Multiple.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_experiment"}, "machinable.storage.multiple.Multiple.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_experiments"}, "machinable.storage.multiple.Multiple.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_file"}, "machinable.storage.multiple.Multiple.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_group"}, "machinable.storage.multiple.Multiple.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_output"}, "machinable.storage.multiple.Multiple.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_project"}, "machinable.storage.multiple.Multiple.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_records"}, "machinable.storage.multiple.Multiple.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_related"}, "machinable.storage.multiple.Multiple.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_status"}, "machinable.storage.multiple.Multiple.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.save_data"}, "machinable.storage.multiple.Multiple.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.save_file"}, "machinable.storage.multiple.Multiple.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.serialize"}, "machinable.storage.multiple.Multiple.set_default": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.set_default"}, "machinable.storage.multiple.Multiple.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.set_model"}, "machinable.storage.multiple.Multiple.singleton": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.singleton"}, "machinable.storage.multiple.Multiple.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.to_cli"}, "machinable.storage.multiple.Multiple.unserialize": {"kind": "routine", "realname": null, "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.unserialize"}, "machinable.storage.multiple.Multiple.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.update_heartbeat"}, "machinable.storage.multiple.Multiple": {"kind": "class", "realname": "Multiple", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple", "parents": ["machinable.storage.storage.Storage"]}, "machinable.storage.multiple": {"kind": "module", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple"}, "machinable.storage.storage.Storage.as_default": {"kind": "routine", "realname": "as_default", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.as_default"}, "machinable.storage.storage.Storage.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.as_json"}, "machinable.storage.storage.Storage.clone": {"kind": "routine", "realname": "clone", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.clone"}, "machinable.storage.storage.Storage.collect": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.collect"}, "machinable.storage.storage.Storage.commit": {"kind": "routine", "realname": "commit", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.commit"}, "machinable.storage.storage.Storage.compute_predicate": {"kind": "routine", "realname": "compute_predicate", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.compute_predicate"}, "machinable.storage.storage.Storage.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_element"}, "machinable.storage.storage.Storage.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_execution"}, "machinable.storage.storage.Storage.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_experiment"}, "machinable.storage.storage.Storage.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_file"}, "machinable.storage.storage.Storage.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_group"}, "machinable.storage.storage.Storage.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_project"}, "machinable.storage.storage.Storage.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_record"}, "machinable.storage.storage.Storage.find": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find"}, "machinable.storage.storage.Storage.find_by_predicate": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_by_predicate"}, "machinable.storage.storage.Storage.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_experiment"}, "machinable.storage.storage.Storage.find_experiment_by_predicate": {"kind": "routine", "realname": "find_experiment_by_predicate", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_experiment_by_predicate"}, "machinable.storage.storage.Storage.find_many": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_many"}, "machinable.storage.storage.Storage.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_related"}, "machinable.storage.storage.Storage.from_json": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.from_json"}, "machinable.storage.storage.Storage.from_model": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.from_model"}, "machinable.storage.storage.Storage.from_storage": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.from_storage"}, "machinable.storage.storage.Storage.get": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.get"}, "machinable.storage.storage.Storage.instance": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.instance"}, "machinable.storage.storage.Storage.is_connected": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.is_connected"}, "machinable.storage.storage.Storage.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.is_mounted"}, "machinable.storage.storage.Storage.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.load_data"}, "machinable.storage.storage.Storage.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.load_file"}, "machinable.storage.storage.Storage.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.local_directory"}, "machinable.storage.storage.Storage.make": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.make"}, "machinable.storage.storage.Storage.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.mark_started"}, "machinable.storage.storage.Storage.matches": {"kind": "routine", "realname": "matches", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.matches"}, "machinable.storage.storage.Storage.model": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.model"}, "machinable.storage.storage.Storage.mount": {"kind": "routine", "realname": "mount", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.mount"}, "machinable.storage.storage.Storage.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_before_configure"}, "machinable.storage.storage.Storage.on_compute_predicate": {"kind": "routine", "realname": "on_compute_predicate", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_compute_predicate"}, "machinable.storage.storage.Storage.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_configure"}, "machinable.storage.storage.Storage.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_instantiate"}, "machinable.storage.storage.Storage.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_element"}, "machinable.storage.storage.Storage.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_elements"}, "machinable.storage.storage.Storage.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_execution"}, "machinable.storage.storage.Storage.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_executions"}, "machinable.storage.storage.Storage.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_experiment"}, "machinable.storage.storage.Storage.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_experiments"}, "machinable.storage.storage.Storage.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_file"}, "machinable.storage.storage.Storage.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_group"}, "machinable.storage.storage.Storage.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_output"}, "machinable.storage.storage.Storage.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_project"}, "machinable.storage.storage.Storage.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_records"}, "machinable.storage.storage.Storage.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_related"}, "machinable.storage.storage.Storage.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_status"}, "machinable.storage.storage.Storage.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.save_data"}, "machinable.storage.storage.Storage.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.save_file"}, "machinable.storage.storage.Storage.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.serialize"}, "machinable.storage.storage.Storage.set_default": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.set_default"}, "machinable.storage.storage.Storage.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.set_model"}, "machinable.storage.storage.Storage.singleton": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.singleton"}, "machinable.storage.storage.Storage.to_cli": {"kind": "routine", "realname": "to_cli", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.to_cli"}, "machinable.storage.storage.Storage.unserialize": {"kind": "routine", "realname": null, "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.unserialize"}, "machinable.storage.storage.Storage.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.update_heartbeat"}, "machinable.storage.storage.Storage": {"kind": "class", "realname": "Storage", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage", "parents": ["machinable.element.Element"]}, "machinable.storage.storage": {"kind": "module", "name": "machinable.storage.storage", "path": "machinable.storage.storage"}, "machinable.testing.storage_tests": {"kind": "routine", "realname": "storage_tests", "name": "machinable.testing", "path": "machinable.testing.storage_tests"}, "machinable.testing": {"kind": "module", "name": "machinable.testing", "path": "machinable.testing"}, "machinable.types": {"kind": "module", "name": "machinable.types", "path": "machinable.types"}, "machinable.utils.Connectable.get": {"kind": "routine", "realname": null, "name": "machinable.utils", "path": "machinable.utils.Connectable.get"}, "machinable.utils.Connectable.is_connected": {"kind": "routine", "realname": null, "name": "machinable.utils", "path": "machinable.utils.Connectable.is_connected"}, "machinable.utils.Connectable": {"kind": "class", "realname": "Connectable", "name": "machinable.utils", "path": "machinable.utils.Connectable", "parents": ["builtins.object"]}, "machinable.utils.Events.get_all_handlers": {"kind": "routine", "realname": "get_all_handlers", "name": "machinable.utils", "path": "machinable.utils.Events.get_all_handlers"}, "machinable.utils.Events.get_handlers": {"kind": "routine", "realname": "get_handlers", "name": "machinable.utils", "path": "machinable.utils.Events.get_handlers"}, "machinable.utils.Events.heartbeats": {"kind": "routine", "realname": "heartbeats", "name": "machinable.utils", "path": "machinable.utils.Events.heartbeats"}, "machinable.utils.Events.is_registered": {"kind": "routine", "realname": "is_registered", "name": "machinable.utils", "path": "machinable.utils.Events.is_registered"}, "machinable.utils.Events.off": {"kind": "routine", "realname": "off", "name": "machinable.utils", "path": "machinable.utils.Events.off"}, "machinable.utils.Events.on": {"kind": "routine", "realname": "on", "name": "machinable.utils", "path": "machinable.utils.Events.on"}, "machinable.utils.Events.once": {"kind": "routine", "realname": "once", "name": "machinable.utils", "path": "machinable.utils.Events.once"}, "machinable.utils.Events.trigger": {"kind": "routine", "realname": "trigger", "name": "machinable.utils", "path": "machinable.utils.Events.trigger"}, "machinable.utils.Events": {"kind": "class", "realname": "Events", "name": "machinable.utils", "path": "machinable.utils.Events", "parents": ["observable.core.Observable"]}, "machinable.utils.Jsonable.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.utils", "path": "machinable.utils.Jsonable.as_json"}, "machinable.utils.Jsonable.clone": {"kind": "routine", "realname": "clone", "name": "machinable.utils", "path": "machinable.utils.Jsonable.clone"}, "machinable.utils.Jsonable.from_json": {"kind": "routine", "realname": null, "name": "machinable.utils", "path": "machinable.utils.Jsonable.from_json"}, "machinable.utils.Jsonable.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.utils", "path": "machinable.utils.Jsonable.serialize"}, "machinable.utils.Jsonable.unserialize": {"kind": "routine", "realname": null, "name": "machinable.utils", "path": "machinable.utils.Jsonable.unserialize"}, "machinable.utils.Jsonable": {"kind": "class", "realname": "Jsonable", "name": "machinable.utils", "path": "machinable.utils.Jsonable", "parents": ["builtins.object"]}, "machinable.utils.as_color": {"kind": "routine", "realname": "as_color", "name": "machinable.utils", "path": "machinable.utils.as_color"}, "machinable.utils.decode_experiment_id": {"kind": "routine", "realname": "decode_experiment_id", "name": "machinable.utils", "path": "machinable.utils.decode_experiment_id"}, "machinable.utils.encode_experiment_id": {"kind": "routine", "realname": "encode_experiment_id", "name": "machinable.utils", "path": "machinable.utils.encode_experiment_id"}, "machinable.utils.find_installed_extensions": {"kind": "routine", "realname": "find_installed_extensions", "name": "machinable.utils", "path": "machinable.utils.find_installed_extensions"}, "machinable.utils.find_subclass_in_module": {"kind": "routine", "realname": "find_subclass_in_module", "name": "machinable.utils", "path": "machinable.utils.find_subclass_in_module"}, "machinable.utils.generate_experiment_id": {"kind": "routine", "realname": "generate_experiment_id", "name": "machinable.utils", "path": "machinable.utils.generate_experiment_id"}, "machinable.utils.generate_nickname": {"kind": "routine", "realname": "generate_nickname", "name": "machinable.utils", "path": "machinable.utils.generate_nickname"}, "machinable.utils.generate_seed": {"kind": "routine", "realname": "generate_seed", "name": "machinable.utils", "path": "machinable.utils.generate_seed"}, "machinable.utils.get_commit": {"kind": "routine", "realname": "get_commit", "name": "machinable.utils", "path": "machinable.utils.get_commit"}, "machinable.utils.get_diff": {"kind": "routine", "realname": "get_diff", "name": "machinable.utils", "path": "machinable.utils.get_diff"}, "machinable.utils.get_root_commit": {"kind": "routine", "realname": "get_root_commit", "name": "machinable.utils", "path": "machinable.utils.get_root_commit"}, "machinable.utils.import_from_directory": {"kind": "routine", "realname": "import_from_directory", "name": "machinable.utils", "path": "machinable.utils.import_from_directory"}, "machinable.utils.is_valid_module_path": {"kind": "routine", "realname": "is_valid_module_path", "name": "machinable.utils", "path": "machinable.utils.is_valid_module_path"}, "machinable.utils.is_valid_variable_name": {"kind": "routine", "realname": "is_valid_variable_name", "name": "machinable.utils", "path": "machinable.utils.is_valid_variable_name"}, "machinable.utils.iskeyword": {"kind": "routine", "realname": "__contains__", "name": "machinable.utils", "path": "machinable.utils.iskeyword"}, "machinable.utils.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.utils", "path": "machinable.utils.load_file"}, "machinable.utils.random_str": {"kind": "routine", "realname": "random_str", "name": "machinable.utils", "path": "machinable.utils.random_str"}, "machinable.utils.resolve_at_alias": {"kind": "routine", "realname": "resolve_at_alias", "name": "machinable.utils", "path": "machinable.utils.resolve_at_alias"}, "machinable.utils.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.utils", "path": "machinable.utils.save_file"}, "machinable.utils.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.utils", "path": "machinable.utils.serialize"}, "machinable.utils.timestamp_to_directory": {"kind": "routine", "realname": "timestamp_to_directory", "name": "machinable.utils", "path": "machinable.utils.timestamp_to_directory"}, "machinable.utils.unflatten_dict": {"kind": "routine", "realname": "unflatten_dict", "name": "machinable.utils", "path": "machinable.utils.unflatten_dict"}, "machinable.utils.update_dict": {"kind": "routine", "realname": "update_dict", "name": "machinable.utils", "path": "machinable.utils.update_dict"}, "machinable.utils": {"kind": "module", "name": "machinable.utils", "path": "machinable.utils"}}'),Ua={...t_,enhanceApp({app:e}){e.config.globalProperties.$pydocData=c_,e.component("Pydoc",pm),e.component("Tree",o_)}};function r_(e,a){let n=[],t=!0;const i=l=>{if(t){t=!1;return}n.forEach(o=>document.head.removeChild(o)),n=[],l.forEach(o=>{const c=m_(o);document.head.appendChild(c),n.push(c)})};Fa(()=>{const l=e.data,o=a.value,c=l&&l.description,r=l&&l.frontmatter.head||[];document.title=uo(o,l),document.querySelector("meta[name=description]").setAttribute("content",c||o.description),i(po(o.head,h_(r)))})}function m_([e,a,n]){const t=document.createElement(e);for(const i in a)t.setAttribute(i,a[i]);return n&&(t.innerHTML=n),t}function s_(e){return e[0]==="meta"&&e[1]&&e[1].name==="description"}function h_(e){return e.filter(a=>!s_(a))}const kt=new Set,Fo=()=>document.createElement("link"),u_=e=>{const a=Fo();a.rel="prefetch",a.href=e,document.head.appendChild(a)},d_=e=>{const a=new XMLHttpRequest;a.open("GET",e,a.withCredentials=!0),a.send()};let $n;const p_=Se&&($n=Fo())&&$n.relList&&$n.relList.supports&&$n.relList.supports("prefetch")?u_:d_;function b_(){if(!Se||!window.IntersectionObserver)return;let e;if((e=navigator.connection)&&(e.saveData||/2g/.test(e.effectiveType)))return;const a=window.requestIdleCallback||setTimeout;let n=null;const t=()=>{n&&n.disconnect(),n=new IntersectionObserver(l=>{l.forEach(o=>{if(o.isIntersecting){const c=o.target;n.unobserve(c);const{pathname:r}=c;if(!kt.has(r)){kt.add(r);const s=fo(r);p_(s)}}})}),a(()=>{document.querySelectorAll("#app a").forEach(l=>{const{target:o}=l,{hostname:c,pathname:r}=new URL(l.href instanceof SVGAnimatedString?l.href.animVal:l.href,l.baseURI),s=r.match(/\.\w+$/);s&&s[0]!==".html"||o!=="_blank"&&c===location.hostname&&(r!==location.pathname?n.observe(l):kt.add(r))})})};Ie(t);const i=ga();Qe(()=>i.path,t),fa(()=>{n&&n.disconnect()})}const __=O({setup(e,{slots:a}){const n=me(!1);return Ie(()=>{n.value=!0}),()=>n.value&&a.default?a.default():null}});function f_(){if(Se){const e=new Map;window.addEventListener("click",a=>{var t;const n=a.target;if(n.matches('div[class*="language-"] > button.copy')){const i=n.parentElement,l=(t=n.nextElementSibling)==null?void 0:t.nextElementSibling;if(!i||!l)return;const o=/language-(shellscript|shell|bash|sh|zsh)/.test(i.className);let c="";l.querySelectorAll("span.line:not(.diff.remove)").forEach(r=>c+=(r.textContent||"")+`
`),c=c.slice(0,-1),o&&(c=c.replace(/^ *(\$|>) /gm,"").trim()),g_(c).then(()=>{n.classList.add("copied"),clearTimeout(e.get(n));const r=setTimeout(()=>{n.classList.remove("copied"),n.blur(),e.delete(n)},2e3);e.set(n,r)})}})}}async function g_(e){try{return navigator.clipboard.writeText(e)}catch{const a=document.createElement("textarea"),n=document.activeElement;a.value=e,a.setAttribute("readonly",""),a.style.contain="strict",a.style.position="absolute",a.style.left="-9999px",a.style.fontSize="12pt";const t=document.getSelection(),i=t?t.rangeCount>0&&t.getRangeAt(0):null;document.body.appendChild(a),a.select(),a.selectionStart=0,a.selectionEnd=e.length,document.execCommand("copy"),document.body.removeChild(a),i&&(t.removeAllRanges(),t.addRange(i)),n&&n.focus()}}function k_(){Se&&window.addEventListener("click",e=>{var n,t;const a=e.target;if(a.matches(".vp-code-group input")){const i=(n=a.parentElement)==null?void 0:n.parentElement,l=Array.from((i==null?void 0:i.querySelectorAll("input"))||[]).indexOf(a),o=i==null?void 0:i.querySelector('div[class*="language-"].active'),c=(t=i==null?void 0:i.querySelectorAll('div[class*="language-"]'))==null?void 0:t[l];o&&c&&o!==c&&(o.classList.remove("active"),c.classList.add("active"))}})}const To=Ua.NotFound||(()=>"404 Not Found"),x_=O({name:"VitePressApp",setup(){const{site:e}=_o();return Ie(()=>{Fa(()=>{document.documentElement.lang=e.value.lang,document.documentElement.dir=e.value.dir})}),b_(),f_(),k_(),Ua.setup&&Ua.setup(),()=>zn(Ua.Layout)}});async function v_(){const e=y_(),a=E_();a.provide(go,e);const n=wm(e.route);return a.provide(bo,n),a.provide("NotFound",To),a.component("Content",Tm),a.component("ClientOnly",__),Object.defineProperty(a.config.globalProperties,"$frontmatter",{get(){return n.frontmatter.value}}),Ua.enhanceApp&&await Ua.enhanceApp({app:a,router:e,siteData:ua}),{app:a,router:e,data:n}}function E_(){return sm(x_)}function y_(){let e=Se,a;return Rm(n=>{let t=fo(n);return e&&(a=t),(e||a===t)&&(t=t.replace(/\.js$/,".lean.js")),Se&&(e=!1),fm(()=>import(t),[])},To)}Se&&v_().then(({app:e,router:a,data:n})=>{a.go().then(()=>{r_(a.route,n.site),e.mount("#app")})});export{pm as P,A as _,Er as a,x as b,g as c,v_ as createApp,Ce as d,$ as e,d as o,ia as r,R as w};
