import{_ as p,o as t,c,a as n,b as s,d as e,w as o,e as l,r}from"./app.de67ccd4.js";const T=JSON.parse('{"title":"Implementing experiments","description":"","frontmatter":{},"headers":[{"level":2,"title":"Events","slug":"events","link":"#events","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Design considerations","slug":"design-considerations","link":"#design-considerations","children":[]}],"relativePath":"tutorial/essentials/implementing-experiments.md"}'),i={name:"tutorial/essentials/implementing-experiments.md"},y=n("h1",{id:"implementing-experiments",tabindex:"-1"},[s("Implementing experiments "),n("a",{class:"header-anchor",href:"#implementing-experiments","aria-hidden":"true"},"#")],-1),D=n("h2",{id:"events",tabindex:"-1"},[s("Events "),n("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#")],-1),F=l("",1),C=n("code",null,"on_",-1),A=n("p",null,"When you implement your algorithm, pick an appropriate event and add your code in the event method. Of course, you are free to add other methods or properties to your class if needed.",-1),d=n("a",{href:"./../../reference/"},"reference documentation",-1),m=l("",8),h=l("",7);function u(g,f,_,v,x,E){const a=r("Pydoc");return t(),c("div",null,[y,D,n("p",null,[s("The experiments that we have created so far have been nothing more than an empty shell. Let's add an actual implementation by overriding "),e(a,{caption:"on_execute()"},{default:o(()=>[s("machinable.Experiment.on_execute")]),_:1})]),F,n("p",null,[s("The "),e(a,null,{default:o(()=>[s("machinable.Experiment")]),_:1}),s(" base class provides a variety of these lifecycle event methods that are prefixed with "),C,s(", such as "),e(a,{caption:"on_create()"},{default:o(()=>[s("machinable.Experiment.on_create")]),_:1}),s(", "),e(a,{caption:"on_success()"},{default:o(()=>[s("machinable.Experiment.on_success")]),_:1}),s(", etc.")]),A,n("p",null,[s("The event methods will be called automatically at the appropriate time, so you don't have to call them manually. For example, code placed in the "),e(a,{caption:"on_failure()"},{default:o(()=>[s("machinable.Experiment.on_failure")]),_:1}),s(" event is automatically invoked if an exception occurs.")]),n("p",null,[s("Feel free to explore all available events in the "),d,s("; in most cases, placing your algorithms in the "),e(a,{caption:"on_execute()"},{default:o(()=>[s("machinable.Experiment.on_execute")]),_:1}),s(" method is the right choice.")]),m,n("p",null,[s("To instantiate the experiment with different parameters, you can pass a dictionary as argument to "),e(a,null,{default:o(()=>[s("machinable.Experiment.instance")]),_:1}),s(", for example:")]),h])}const w=p(i,[["render",u]]);export{T as __pageData,w as default};
