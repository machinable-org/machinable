function Lt(e,n){const a=Object.create(null),t=e.split(",");for(let i=0;i<t.length;i++)a[t[i]]=!0;return n?i=>!!a[i.toLowerCase()]:i=>!!a[i]}const Co="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",So=Lt(Co);function cl(e){return!!e||e===""}function da(e){if(U(e)){const n={};for(let a=0;a<e.length;a++){const t=e[a],i=ve(t)?wo(t):da(t);if(i)for(const l in i)n[l]=i[l]}return n}else{if(ve(e))return e;if(ge(e))return e}}const jo=/;(?![^(]*\))/g,Po=/:(.+)/;function wo(e){const n={};return e.split(jo).forEach(a=>{if(a){const t=a.split(Po);t.length>1&&(n[t[0].trim()]=t[1].trim())}}),n}function de(e){let n="";if(ve(e))n=e;else if(U(e))for(let a=0;a<e.length;a++){const t=de(e[a]);t&&(n+=t+" ")}else if(ge(e))for(const a in e)e[a]&&(n+=a+" ");return n.trim()}const te=e=>ve(e)?e:e==null?"":U(e)||ge(e)&&(e.toString===hl||!X(e.toString))?JSON.stringify(e,rl,2):String(e),rl=(e,n)=>n&&n.__v_isRef?rl(e,n.value):Tn(n)?{[`Map(${n.size})`]:[...n.entries()].reduce((a,[t,i])=>(a[`${t} =>`]=i,a),{})}:ml(n)?{[`Set(${n.size})`]:[...n.values()]}:ge(n)&&!U(n)&&!ul(n)?String(n):n,fe={},Vn=[],Ue=()=>{},$o=()=>!1,Mo=/^on[^a-z]/,ba=e=>Mo.test(e),Ft=e=>e.startsWith("onUpdate:"),ye=Object.assign,Vt=(e,n)=>{const a=e.indexOf(n);a>-1&&e.splice(a,1)},Ro=Object.prototype.hasOwnProperty,ie=(e,n)=>Ro.call(e,n),U=Array.isArray,Tn=e=>Ba(e)==="[object Map]",ml=e=>Ba(e)==="[object Set]",X=e=>typeof e=="function",ve=e=>typeof e=="string",Tt=e=>typeof e=="symbol",ge=e=>e!==null&&typeof e=="object",sl=e=>ge(e)&&X(e.then)&&X(e.catch),hl=Object.prototype.toString,Ba=e=>hl.call(e),Lo=e=>Ba(e).slice(8,-1),ul=e=>Ba(e)==="[object Object]",It=e=>ve(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,ea=Lt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Ha=e=>{const n=Object.create(null);return a=>n[a]||(n[a]=e(a))},Fo=/-(\w)/g,Ze=Ha(e=>e.replace(Fo,(n,a)=>a?a.toUpperCase():"")),Vo=/\B([A-Z])/g,Kn=Ha(e=>e.replace(Vo,"-$1").toLowerCase()),Da=Ha(e=>e.charAt(0).toUpperCase()+e.slice(1)),ct=Ha(e=>e?`on${Da(e)}`:""),la=(e,n)=>!Object.is(e,n),rt=(e,n)=>{for(let a=0;a<e.length;a++)e[a](n)},wa=(e,n,a)=>{Object.defineProperty(e,n,{configurable:!0,enumerable:!1,value:a})},dl=e=>{const n=parseFloat(e);return isNaN(n)?e:n};let ui;const To=()=>ui||(ui=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let Ve;class Io{constructor(n=!1){this.active=!0,this.effects=[],this.cleanups=[],!n&&Ve&&(this.parent=Ve,this.index=(Ve.scopes||(Ve.scopes=[])).push(this)-1)}run(n){if(this.active){const a=Ve;try{return Ve=this,n()}finally{Ve=a}}}on(){Ve=this}off(){Ve=this.parent}stop(n){if(this.active){let a,t;for(a=0,t=this.effects.length;a<t;a++)this.effects[a].stop();for(a=0,t=this.cleanups.length;a<t;a++)this.cleanups[a]();if(this.scopes)for(a=0,t=this.scopes.length;a<t;a++)this.scopes[a].stop(!0);if(this.parent&&!n){const i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.active=!1}}}function zo(e,n=Ve){n&&n.active&&n.effects.push(e)}function Ao(){return Ve}function No(e){Ve&&Ve.cleanups.push(e)}const zt=e=>{const n=new Set(e);return n.w=0,n.n=0,n},bl=e=>(e.w&pn)>0,pl=e=>(e.n&pn)>0,Oo=({deps:e})=>{if(e.length)for(let n=0;n<e.length;n++)e[n].w|=pn},Bo=e=>{const{deps:n}=e;if(n.length){let a=0;for(let t=0;t<n.length;t++){const i=n[t];bl(i)&&!pl(i)?i.delete(e):n[a++]=i,i.w&=~pn,i.n&=~pn}n.length=a}},ft=new WeakMap;let Zn=0,pn=1;const _t=30;let De;const $n=Symbol(""),gt=Symbol("");class At{constructor(n,a=null,t){this.fn=n,this.scheduler=a,this.active=!0,this.deps=[],this.parent=void 0,zo(this,t)}run(){if(!this.active)return this.fn();let n=De,a=dn;for(;n;){if(n===this)return;n=n.parent}try{return this.parent=De,De=this,dn=!0,pn=1<<++Zn,Zn<=_t?Oo(this):di(this),this.fn()}finally{Zn<=_t&&Bo(this),pn=1<<--Zn,De=this.parent,dn=a,this.parent=void 0,this.deferStop&&this.stop()}}stop(){De===this?this.deferStop=!0:this.active&&(di(this),this.onStop&&this.onStop(),this.active=!1)}}function di(e){const{deps:n}=e;if(n.length){for(let a=0;a<n.length;a++)n[a].delete(e);n.length=0}}let dn=!0;const fl=[];function qn(){fl.push(dn),dn=!1}function Wn(){const e=fl.pop();dn=e===void 0?!0:e}function Ie(e,n,a){if(dn&&De){let t=ft.get(e);t||ft.set(e,t=new Map);let i=t.get(a);i||t.set(a,i=zt()),_l(i)}}function _l(e,n){let a=!1;Zn<=_t?pl(e)||(e.n|=pn,a=!bl(e)):a=!e.has(De),a&&(e.add(De),De.deps.push(e))}function ln(e,n,a,t,i,l){const o=ft.get(e);if(!o)return;let c=[];if(n==="clear")c=[...o.values()];else if(a==="length"&&U(e))o.forEach((r,h)=>{(h==="length"||h>=t)&&c.push(r)});else switch(a!==void 0&&c.push(o.get(a)),n){case"add":U(e)?It(a)&&c.push(o.get("length")):(c.push(o.get($n)),Tn(e)&&c.push(o.get(gt)));break;case"delete":U(e)||(c.push(o.get($n)),Tn(e)&&c.push(o.get(gt)));break;case"set":Tn(e)&&c.push(o.get($n));break}if(c.length===1)c[0]&&xt(c[0]);else{const r=[];for(const h of c)h&&r.push(...h);xt(zt(r))}}function xt(e,n){const a=U(e)?e:[...e];for(const t of a)t.computed&&bi(t);for(const t of a)t.computed||bi(t)}function bi(e,n){(e!==De||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const Ho=Lt("__proto__,__v_isRef,__isVue"),gl=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Tt)),Do=Nt(),Go=Nt(!1,!0),Uo=Nt(!0),pi=Ko();function Ko(){const e={};return["includes","indexOf","lastIndexOf"].forEach(n=>{e[n]=function(...a){const t=re(this);for(let l=0,o=this.length;l<o;l++)Ie(t,"get",l+"");const i=t[n](...a);return i===-1||i===!1?t[n](...a.map(re)):i}}),["push","pop","shift","unshift","splice"].forEach(n=>{e[n]=function(...a){qn();const t=re(this)[n].apply(this,a);return Wn(),t}}),e}function Nt(e=!1,n=!1){return function(t,i,l){if(i==="__v_isReactive")return!e;if(i==="__v_isReadonly")return e;if(i==="__v_isShallow")return n;if(i==="__v_raw"&&l===(e?n?rc:yl:n?El:vl).get(t))return t;const o=U(t);if(!e&&o&&ie(pi,i))return Reflect.get(pi,i,l);const c=Reflect.get(t,i,l);return(Tt(i)?gl.has(i):Ho(i))||(e||Ie(t,"get",i),n)?c:je(c)?o&&It(i)?c:c.value:ge(c)?e?Ht(c):Ua(c):c}}const qo=xl(),Wo=xl(!0);function xl(e=!1){return function(a,t,i,l){let o=a[t];if(Hn(o)&&je(o)&&!je(i))return!1;if(!e&&(!$a(i)&&!Hn(i)&&(o=re(o),i=re(i)),!U(a)&&je(o)&&!je(i)))return o.value=i,!0;const c=U(a)&&It(t)?Number(t)<a.length:ie(a,t),r=Reflect.set(a,t,i,l);return a===re(l)&&(c?la(i,o)&&ln(a,"set",t,i):ln(a,"add",t,i)),r}}function Jo(e,n){const a=ie(e,n);e[n];const t=Reflect.deleteProperty(e,n);return t&&a&&ln(e,"delete",n,void 0),t}function Yo(e,n){const a=Reflect.has(e,n);return(!Tt(n)||!gl.has(n))&&Ie(e,"has",n),a}function Qo(e){return Ie(e,"iterate",U(e)?"length":$n),Reflect.ownKeys(e)}const kl={get:Do,set:qo,deleteProperty:Jo,has:Yo,ownKeys:Qo},Xo={get:Uo,set(e,n){return!0},deleteProperty(e,n){return!0}},Zo=ye({},kl,{get:Go,set:Wo}),Ot=e=>e,Ga=e=>Reflect.getPrototypeOf(e);function ga(e,n,a=!1,t=!1){e=e.__v_raw;const i=re(e),l=re(n);a||(n!==l&&Ie(i,"get",n),Ie(i,"get",l));const{has:o}=Ga(i),c=t?Ot:a?Gt:oa;if(o.call(i,n))return c(e.get(n));if(o.call(i,l))return c(e.get(l));e!==i&&e.get(n)}function xa(e,n=!1){const a=this.__v_raw,t=re(a),i=re(e);return n||(e!==i&&Ie(t,"has",e),Ie(t,"has",i)),e===i?a.has(e):a.has(e)||a.has(i)}function ka(e,n=!1){return e=e.__v_raw,!n&&Ie(re(e),"iterate",$n),Reflect.get(e,"size",e)}function fi(e){e=re(e);const n=re(this);return Ga(n).has.call(n,e)||(n.add(e),ln(n,"add",e,e)),this}function _i(e,n){n=re(n);const a=re(this),{has:t,get:i}=Ga(a);let l=t.call(a,e);l||(e=re(e),l=t.call(a,e));const o=i.call(a,e);return a.set(e,n),l?la(n,o)&&ln(a,"set",e,n):ln(a,"add",e,n),this}function gi(e){const n=re(this),{has:a,get:t}=Ga(n);let i=a.call(n,e);i||(e=re(e),i=a.call(n,e)),t&&t.call(n,e);const l=n.delete(e);return i&&ln(n,"delete",e,void 0),l}function xi(){const e=re(this),n=e.size!==0,a=e.clear();return n&&ln(e,"clear",void 0,void 0),a}function va(e,n){return function(t,i){const l=this,o=l.__v_raw,c=re(o),r=n?Ot:e?Gt:oa;return!e&&Ie(c,"iterate",$n),o.forEach((h,d)=>t.call(i,r(h),r(d),l))}}function Ea(e,n,a){return function(...t){const i=this.__v_raw,l=re(i),o=Tn(l),c=e==="entries"||e===Symbol.iterator&&o,r=e==="keys"&&o,h=i[e](...t),d=a?Ot:n?Gt:oa;return!n&&Ie(l,"iterate",r?gt:$n),{next(){const{value:_,done:E}=h.next();return E?{value:_,done:E}:{value:c?[d(_[0]),d(_[1])]:d(_),done:E}},[Symbol.iterator](){return this}}}}function rn(e){return function(...n){return e==="delete"?!1:this}}function ec(){const e={get(l){return ga(this,l)},get size(){return ka(this)},has:xa,add:fi,set:_i,delete:gi,clear:xi,forEach:va(!1,!1)},n={get(l){return ga(this,l,!1,!0)},get size(){return ka(this)},has:xa,add:fi,set:_i,delete:gi,clear:xi,forEach:va(!1,!0)},a={get(l){return ga(this,l,!0)},get size(){return ka(this,!0)},has(l){return xa.call(this,l,!0)},add:rn("add"),set:rn("set"),delete:rn("delete"),clear:rn("clear"),forEach:va(!0,!1)},t={get(l){return ga(this,l,!0,!0)},get size(){return ka(this,!0)},has(l){return xa.call(this,l,!0)},add:rn("add"),set:rn("set"),delete:rn("delete"),clear:rn("clear"),forEach:va(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{e[l]=Ea(l,!1,!1),a[l]=Ea(l,!0,!1),n[l]=Ea(l,!1,!0),t[l]=Ea(l,!0,!0)}),[e,a,n,t]}const[nc,ac,tc,ic]=ec();function Bt(e,n){const a=n?e?ic:tc:e?ac:nc;return(t,i,l)=>i==="__v_isReactive"?!e:i==="__v_isReadonly"?e:i==="__v_raw"?t:Reflect.get(ie(a,i)&&i in t?a:t,i,l)}const lc={get:Bt(!1,!1)},oc={get:Bt(!1,!0)},cc={get:Bt(!0,!1)},vl=new WeakMap,El=new WeakMap,yl=new WeakMap,rc=new WeakMap;function mc(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function sc(e){return e.__v_skip||!Object.isExtensible(e)?0:mc(Lo(e))}function Ua(e){return Hn(e)?e:Dt(e,!1,kl,lc,vl)}function hc(e){return Dt(e,!1,Zo,oc,El)}function Ht(e){return Dt(e,!0,Xo,cc,yl)}function Dt(e,n,a,t,i){if(!ge(e)||e.__v_raw&&!(n&&e.__v_isReactive))return e;const l=i.get(e);if(l)return l;const o=sc(e);if(o===0)return e;const c=new Proxy(e,o===2?t:a);return i.set(e,c),c}function In(e){return Hn(e)?In(e.__v_raw):!!(e&&e.__v_isReactive)}function Hn(e){return!!(e&&e.__v_isReadonly)}function $a(e){return!!(e&&e.__v_isShallow)}function Cl(e){return In(e)||Hn(e)}function re(e){const n=e&&e.__v_raw;return n?re(n):e}function na(e){return wa(e,"__v_skip",!0),e}const oa=e=>ge(e)?Ua(e):e,Gt=e=>ge(e)?Ht(e):e;function Sl(e){dn&&De&&(e=re(e),_l(e.dep||(e.dep=zt())))}function jl(e,n){e=re(e),e.dep&&xt(e.dep)}function je(e){return!!(e&&e.__v_isRef===!0)}function _e(e){return Pl(e,!1)}function uc(e){return Pl(e,!0)}function Pl(e,n){return je(e)?e:new dc(e,n)}class dc{constructor(n,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?n:re(n),this._value=a?n:oa(n)}get value(){return Sl(this),this._value}set value(n){const a=this.__v_isShallow||$a(n)||Hn(n);n=a?n:re(n),la(n,this._rawValue)&&(this._rawValue=n,this._value=a?n:oa(n),jl(this))}}function b(e){return je(e)?e.value:e}const bc={get:(e,n,a)=>b(Reflect.get(e,n,a)),set:(e,n,a,t)=>{const i=e[n];return je(i)&&!je(a)?(i.value=a,!0):Reflect.set(e,n,a,t)}};function wl(e){return In(e)?e:new Proxy(e,bc)}var $l;class pc{constructor(n,a,t,i){this._setter=a,this.dep=void 0,this.__v_isRef=!0,this[$l]=!1,this._dirty=!0,this.effect=new At(n,()=>{this._dirty||(this._dirty=!0,jl(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!i,this.__v_isReadonly=t}get value(){const n=re(this);return Sl(n),(n._dirty||!n._cacheable)&&(n._dirty=!1,n._value=n.effect.run()),n._value}set value(n){this._setter(n)}}$l="__v_isReadonly";function fc(e,n,a=!1){let t,i;const l=X(e);return l?(t=e,i=Ue):(t=e.get,i=e.set),new pc(t,i,l||!i,a)}function bn(e,n,a,t){let i;try{i=t?e(...t):e()}catch(l){Ka(l,n,a)}return i}function Ne(e,n,a,t){if(X(e)){const l=bn(e,n,a,t);return l&&sl(l)&&l.catch(o=>{Ka(o,n,a)}),l}const i=[];for(let l=0;l<e.length;l++)i.push(Ne(e[l],n,a,t));return i}function Ka(e,n,a,t=!0){const i=n?n.vnode:null;if(n){let l=n.parent;const o=n.proxy,c=a;for(;l;){const h=l.ec;if(h){for(let d=0;d<h.length;d++)if(h[d](e,o,c)===!1)return}l=l.parent}const r=n.appContext.config.errorHandler;if(r){bn(r,null,10,[e,o,c]);return}}_c(e,a,i,t)}function _c(e,n,a,t=!0){console.error(e)}let ca=!1,kt=!1;const Se=[];let Qe=0;const zn=[];let an=null,Sn=0;const Ml=Promise.resolve();let Ut=null;function qa(e){const n=Ut||Ml;return e?n.then(this?e.bind(this):e):n}function gc(e){let n=Qe+1,a=Se.length;for(;n<a;){const t=n+a>>>1;ra(Se[t])<e?n=t+1:a=t}return n}function Kt(e){(!Se.length||!Se.includes(e,ca&&e.allowRecurse?Qe+1:Qe))&&(e.id==null?Se.push(e):Se.splice(gc(e.id),0,e),Rl())}function Rl(){!ca&&!kt&&(kt=!0,Ut=Ml.then(Ll))}function xc(e){const n=Se.indexOf(e);n>Qe&&Se.splice(n,1)}function kc(e){U(e)?zn.push(...e):(!an||!an.includes(e,e.allowRecurse?Sn+1:Sn))&&zn.push(e),Rl()}function ki(e,n=ca?Qe+1:0){for(;n<Se.length;n++){const a=Se[n];a&&a.pre&&(Se.splice(n,1),n--,a())}}function Ma(e){if(zn.length){const n=[...new Set(zn)];if(zn.length=0,an){an.push(...n);return}for(an=n,an.sort((a,t)=>ra(a)-ra(t)),Sn=0;Sn<an.length;Sn++)an[Sn]();an=null,Sn=0}}const ra=e=>e.id==null?1/0:e.id,vc=(e,n)=>{const a=ra(e)-ra(n);if(a===0){if(e.pre&&!n.pre)return-1;if(n.pre&&!e.pre)return 1}return a};function Ll(e){kt=!1,ca=!0,Se.sort(vc);const n=Ue;try{for(Qe=0;Qe<Se.length;Qe++){const a=Se[Qe];a&&a.active!==!1&&bn(a,null,14)}}finally{Qe=0,Se.length=0,Ma(),ca=!1,Ut=null,(Se.length||zn.length)&&Ll()}}function Ec(e,n,...a){if(e.isUnmounted)return;const t=e.vnode.props||fe;let i=a;const l=n.startsWith("update:"),o=l&&n.slice(7);if(o&&o in t){const d=`${o==="modelValue"?"model":o}Modifiers`,{number:_,trim:E}=t[d]||fe;E&&(i=a.map(j=>j.trim())),_&&(i=a.map(dl))}let c,r=t[c=ct(n)]||t[c=ct(Ze(n))];!r&&l&&(r=t[c=ct(Kn(n))]),r&&Ne(r,e,6,i);const h=t[c+"Once"];if(h){if(!e.emitted)e.emitted={};else if(e.emitted[c])return;e.emitted[c]=!0,Ne(h,e,6,i)}}function Fl(e,n,a=!1){const t=n.emitsCache,i=t.get(e);if(i!==void 0)return i;const l=e.emits;let o={},c=!1;if(!X(e)){const r=h=>{const d=Fl(h,n,!0);d&&(c=!0,ye(o,d))};!a&&n.mixins.length&&n.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}return!l&&!c?(ge(e)&&t.set(e,null),null):(U(l)?l.forEach(r=>o[r]=null):ye(o,l),ge(e)&&t.set(e,o),o)}function Wa(e,n){return!e||!ba(n)?!1:(n=n.slice(2).replace(/Once$/,""),ie(e,n[0].toLowerCase()+n.slice(1))||ie(e,Kn(n))||ie(e,n))}let we=null,Ja=null;function Ra(e){const n=we;return we=e,Ja=e&&e.type.__scopeId||null,n}function Ke(e){Ja=e}function qe(){Ja=null}function F(e,n=we,a){if(!n||e._n)return e;const t=(...i)=>{t._d&&Ri(-1);const l=Ra(n),o=e(...i);return Ra(l),t._d&&Ri(1),o};return t._n=!0,t._c=!0,t._d=!0,t}function mt(e){const{type:n,vnode:a,proxy:t,withProxy:i,props:l,propsOptions:[o],slots:c,attrs:r,emit:h,render:d,renderCache:_,data:E,setupState:j,ctx:D,inheritAttrs:A}=e;let Q,g;const $=Ra(e);try{if(a.shapeFlag&4){const J=i||t;Q=He(d.call(J,J,_,l,j,E,D)),g=r}else{const J=n;Q=He(J.length>1?J(l,{attrs:r,slots:c,emit:h}):J(l,null)),g=n.props?r:yc(r)}}catch(J){aa.length=0,Ka(J,e,1),Q=w(Te)}let G=Q;if(g&&A!==!1){const J=Object.keys(g),{shapeFlag:ae}=G;J.length&&ae&7&&(o&&J.some(Ft)&&(g=Cc(g,o)),G=fn(G,g))}return a.dirs&&(G=fn(G),G.dirs=G.dirs?G.dirs.concat(a.dirs):a.dirs),a.transition&&(G.transition=a.transition),Q=G,Ra($),Q}const yc=e=>{let n;for(const a in e)(a==="class"||a==="style"||ba(a))&&((n||(n={}))[a]=e[a]);return n},Cc=(e,n)=>{const a={};for(const t in e)(!Ft(t)||!(t.slice(9)in n))&&(a[t]=e[t]);return a};function Sc(e,n,a){const{props:t,children:i,component:l}=e,{props:o,children:c,patchFlag:r}=n,h=l.emitsOptions;if(n.dirs||n.transition)return!0;if(a&&r>=0){if(r&1024)return!0;if(r&16)return t?vi(t,o,h):!!o;if(r&8){const d=n.dynamicProps;for(let _=0;_<d.length;_++){const E=d[_];if(o[E]!==t[E]&&!Wa(h,E))return!0}}}else return(i||c)&&(!c||!c.$stable)?!0:t===o?!1:t?o?vi(t,o,h):!0:!!o;return!1}function vi(e,n,a){const t=Object.keys(n);if(t.length!==Object.keys(e).length)return!0;for(let i=0;i<t.length;i++){const l=t[i];if(n[l]!==e[l]&&!Wa(a,l))return!0}return!1}function jc({vnode:e,parent:n},a){for(;n&&n.subTree===e;)(e=n.vnode).el=a,n=n.parent}const Pc=e=>e.__isSuspense;function Vl(e,n){n&&n.pendingBranch?U(e)?n.effects.push(...e):n.effects.push(e):kc(e)}function Ya(e,n){if(Ee){let a=Ee.provides;const t=Ee.parent&&Ee.parent.provides;t===a&&(a=Ee.provides=Object.create(t)),a[e]=n}}function Xe(e,n,a=!1){const t=Ee||we;if(t){const i=t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return a&&X(n)?n.call(t.proxy):n}}function Dn(e,n){return Qa(e,null,n)}function Tl(e,n){return Qa(e,null,{flush:"post"})}const Ei={};function tn(e,n,a){return Qa(e,n,a)}function Qa(e,n,{immediate:a,deep:t,flush:i,onTrack:l,onTrigger:o}=fe){const c=Ee;let r,h=!1,d=!1;if(je(e)?(r=()=>e.value,h=$a(e)):In(e)?(r=()=>e,t=!0):U(e)?(d=!0,h=e.some(g=>In(g)||$a(g)),r=()=>e.map(g=>{if(je(g))return g.value;if(In(g))return Fn(g);if(X(g))return bn(g,c,2)})):X(e)?n?r=()=>bn(e,c,2):r=()=>{if(!(c&&c.isUnmounted))return _&&_(),Ne(e,c,3,[E])}:r=Ue,n&&t){const g=r;r=()=>Fn(g())}let _,E=g=>{_=Q.onStop=()=>{bn(g,c,4)}};if(ha)return E=Ue,n?a&&Ne(n,c,3,[r(),d?[]:void 0,E]):r(),Ue;let j=d?[]:Ei;const D=()=>{if(!!Q.active)if(n){const g=Q.run();(t||h||(d?g.some(($,G)=>la($,j[G])):la(g,j)))&&(_&&_(),Ne(n,c,3,[g,j===Ei?void 0:j,E]),j=g)}else Q.run()};D.allowRecurse=!!n;let A;i==="sync"?A=D:i==="post"?A=()=>$e(D,c&&c.suspense):(D.pre=!0,c&&(D.id=c.uid),A=()=>Kt(D));const Q=new At(r,A);return n?a?D():j=Q.run():i==="post"?$e(Q.run.bind(Q),c&&c.suspense):Q.run(),()=>{Q.stop(),c&&c.scope&&Vt(c.scope.effects,Q)}}function wc(e,n,a){const t=this.proxy,i=ve(e)?e.includes(".")?Il(t,e):()=>t[e]:e.bind(t,t);let l;X(n)?l=n:(l=n.handler,a=n);const o=Ee;Gn(this);const c=Qa(i,l.bind(t),a);return o?Gn(o):Mn(),c}function Il(e,n){const a=n.split(".");return()=>{let t=e;for(let i=0;i<a.length&&t;i++)t=t[a[i]];return t}}function Fn(e,n){if(!ge(e)||e.__v_skip||(n=n||new Set,n.has(e)))return e;if(n.add(e),je(e))Fn(e.value,n);else if(U(e))for(let a=0;a<e.length;a++)Fn(e[a],n);else if(ml(e)||Tn(e))e.forEach(a=>{Fn(a,n)});else if(ul(e))for(const a in e)Fn(e[a],n);return e}function $c(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Oe(()=>{e.isMounted=!0}),Bl(()=>{e.isUnmounting=!0}),e}const ze=[Function,Array],Mc={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ze,onEnter:ze,onAfterEnter:ze,onEnterCancelled:ze,onBeforeLeave:ze,onLeave:ze,onAfterLeave:ze,onLeaveCancelled:ze,onBeforeAppear:ze,onAppear:ze,onAfterAppear:ze,onAppearCancelled:ze},setup(e,{slots:n}){const a=Zt(),t=$c();let i;return()=>{const l=n.default&&Nl(n.default(),!0);if(!l||!l.length)return;let o=l[0];if(l.length>1){for(const A of l)if(A.type!==Te){o=A;break}}const c=re(e),{mode:r}=c;if(t.isLeaving)return st(o);const h=yi(o);if(!h)return st(o);const d=vt(h,c,t,a);Et(h,d);const _=a.subTree,E=_&&yi(_);let j=!1;const{getTransitionKey:D}=h.type;if(D){const A=D();i===void 0?i=A:A!==i&&(i=A,j=!0)}if(E&&E.type!==Te&&(!jn(h,E)||j)){const A=vt(E,c,t,a);if(Et(E,A),r==="out-in")return t.isLeaving=!0,A.afterLeave=()=>{t.isLeaving=!1,a.update()},st(o);r==="in-out"&&h.type!==Te&&(A.delayLeave=(Q,g,$)=>{const G=Al(t,E);G[String(E.key)]=E,Q._leaveCb=()=>{g(),Q._leaveCb=void 0,delete d.delayedLeave},d.delayedLeave=$})}return o}}},zl=Mc;function Al(e,n){const{leavingVNodes:a}=e;let t=a.get(n.type);return t||(t=Object.create(null),a.set(n.type,t)),t}function vt(e,n,a,t){const{appear:i,mode:l,persisted:o=!1,onBeforeEnter:c,onEnter:r,onAfterEnter:h,onEnterCancelled:d,onBeforeLeave:_,onLeave:E,onAfterLeave:j,onLeaveCancelled:D,onBeforeAppear:A,onAppear:Q,onAfterAppear:g,onAppearCancelled:$}=n,G=String(e.key),J=Al(a,e),ae=(L,Z)=>{L&&Ne(L,t,9,Z)},ue=(L,Z)=>{const Y=Z[1];ae(L,Z),U(L)?L.every(ce=>ce.length<=1)&&Y():L.length<=1&&Y()},le={mode:l,persisted:o,beforeEnter(L){let Z=c;if(!a.isMounted)if(i)Z=A||c;else return;L._leaveCb&&L._leaveCb(!0);const Y=J[G];Y&&jn(e,Y)&&Y.el._leaveCb&&Y.el._leaveCb(),ae(Z,[L])},enter(L){let Z=r,Y=h,ce=d;if(!a.isMounted)if(i)Z=Q||r,Y=g||h,ce=$||d;else return;let T=!1;const ee=L._enterCb=N=>{T||(T=!0,N?ae(ce,[L]):ae(Y,[L]),le.delayedLeave&&le.delayedLeave(),L._enterCb=void 0)};Z?ue(Z,[L,ee]):ee()},leave(L,Z){const Y=String(e.key);if(L._enterCb&&L._enterCb(!0),a.isUnmounting)return Z();ae(_,[L]);let ce=!1;const T=L._leaveCb=ee=>{ce||(ce=!0,Z(),ee?ae(D,[L]):ae(j,[L]),L._leaveCb=void 0,J[Y]===e&&delete J[Y])};J[Y]=e,E?ue(E,[L,T]):T()},clone(L){return vt(L,n,a,t)}};return le}function st(e){if(Xa(e))return e=fn(e),e.children=null,e}function yi(e){return Xa(e)?e.children?e.children[0]:void 0:e}function Et(e,n){e.shapeFlag&6&&e.component?Et(e.component.subTree,n):e.shapeFlag&128?(e.ssContent.transition=n.clone(e.ssContent),e.ssFallback.transition=n.clone(e.ssFallback)):e.transition=n}function Nl(e,n=!1,a){let t=[],i=0;for(let l=0;l<e.length;l++){let o=e[l];const c=a==null?o.key:String(a)+String(o.key!=null?o.key:l);o.type===q?(o.patchFlag&128&&i++,t=t.concat(Nl(o.children,n,c))):(n||o.type!==Te)&&t.push(c!=null?fn(o,{key:c}):o)}if(i>1)for(let l=0;l<t.length;l++)t[l].patchFlag=-2;return t}function z(e){return X(e)?{setup:e,name:e.name}:e}const An=e=>!!e.type.__asyncLoader,Xa=e=>e.type.__isKeepAlive;function Rc(e,n){Ol(e,"a",n)}function Lc(e,n){Ol(e,"da",n)}function Ol(e,n,a=Ee){const t=e.__wdc||(e.__wdc=()=>{let i=a;for(;i;){if(i.isDeactivated)return;i=i.parent}return e()});if(Za(n,t,a),a){let i=a.parent;for(;i&&i.parent;)Xa(i.parent.vnode)&&Fc(t,n,a,i),i=i.parent}}function Fc(e,n,a,t){const i=Za(n,e,t,!0);_n(()=>{Vt(t[n],i)},a)}function Za(e,n,a=Ee,t=!1){if(a){const i=a[e]||(a[e]=[]),l=n.__weh||(n.__weh=(...o)=>{if(a.isUnmounted)return;qn(),Gn(a);const c=Ne(n,a,e,o);return Mn(),Wn(),c});return t?i.unshift(l):i.push(l),l}}const cn=e=>(n,a=Ee)=>(!ha||e==="sp")&&Za(e,(...t)=>n(...t),a),Vc=cn("bm"),Oe=cn("m"),Tc=cn("bu"),qt=cn("u"),Bl=cn("bum"),_n=cn("um"),Ic=cn("sp"),zc=cn("rtg"),Ac=cn("rtc");function Nc(e,n=Ee){Za("ec",e,n)}function Ye(e,n,a,t){const i=e.dirs,l=n&&n.dirs;for(let o=0;o<i.length;o++){const c=i[o];l&&(c.oldValue=l[o].value);let r=c.dir[t];r&&(qn(),Ne(r,a,8,[e.el,c,e,n]),Wn())}}const Wt="components";function on(e,n){return Dl(Wt,e,!0,n)||e}const Hl=Symbol();function Jt(e){return ve(e)?Dl(Wt,e,!1)||e:e||Hl}function Dl(e,n,a=!0,t=!1){const i=we||Ee;if(i){const l=i.type;if(e===Wt){const c=pr(l,!1);if(c&&(c===n||c===Ze(n)||c===Da(Ze(n))))return l}const o=Ci(i[e]||l[e],n)||Ci(i.appContext[e],n);return!o&&t?l:o}}function Ci(e,n){return e&&(e[n]||e[Ze(n)]||e[Da(Ze(n))])}function Ce(e,n,a,t){let i;const l=a&&a[t];if(U(e)||ve(e)){i=new Array(e.length);for(let o=0,c=e.length;o<c;o++)i[o]=n(e[o],o,void 0,l&&l[o])}else if(typeof e=="number"){i=new Array(e);for(let o=0;o<e;o++)i[o]=n(o+1,o,void 0,l&&l[o])}else if(ge(e))if(e[Symbol.iterator])i=Array.from(e,(o,c)=>n(o,c,void 0,l&&l[c]));else{const o=Object.keys(e);i=new Array(o.length);for(let c=0,r=o.length;c<r;c++){const h=o[c];i[c]=n(e[h],h,c,l&&l[c])}}else i=[];return a&&(a[t]=i),i}function M(e,n,a={},t,i){if(we.isCE||we.parent&&An(we.parent)&&we.parent.isCE)return w("slot",n==="default"?null:{name:n},t&&t());let l=e[n];l&&l._c&&(l._d=!1),u();const o=l&&Gl(l(a)),c=W(q,{key:a.key||o&&o.key||`_${n}`},o||(t?t():[]),o&&e._===1?64:-2);return!i&&c.scopeId&&(c.slotScopeIds=[c.scopeId+"-s"]),l&&l._c&&(l._d=!0),c}function Gl(e){return e.some(n=>Ta(n)?!(n.type===Te||n.type===q&&!Gl(n.children)):!0)?e:null}const yt=e=>e?no(e)?ei(e)||e.proxy:yt(e.parent):null,La=ye(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>yt(e.parent),$root:e=>yt(e.root),$emit:e=>e.emit,$options:e=>Yt(e),$forceUpdate:e=>e.f||(e.f=()=>Kt(e.update)),$nextTick:e=>e.n||(e.n=qa.bind(e.proxy)),$watch:e=>wc.bind(e)}),Oc={get({_:e},n){const{ctx:a,setupState:t,data:i,props:l,accessCache:o,type:c,appContext:r}=e;let h;if(n[0]!=="$"){const j=o[n];if(j!==void 0)switch(j){case 1:return t[n];case 2:return i[n];case 4:return a[n];case 3:return l[n]}else{if(t!==fe&&ie(t,n))return o[n]=1,t[n];if(i!==fe&&ie(i,n))return o[n]=2,i[n];if((h=e.propsOptions[0])&&ie(h,n))return o[n]=3,l[n];if(a!==fe&&ie(a,n))return o[n]=4,a[n];Ct&&(o[n]=0)}}const d=La[n];let _,E;if(d)return n==="$attrs"&&Ie(e,"get",n),d(e);if((_=c.__cssModules)&&(_=_[n]))return _;if(a!==fe&&ie(a,n))return o[n]=4,a[n];if(E=r.config.globalProperties,ie(E,n))return E[n]},set({_:e},n,a){const{data:t,setupState:i,ctx:l}=e;return i!==fe&&ie(i,n)?(i[n]=a,!0):t!==fe&&ie(t,n)?(t[n]=a,!0):ie(e.props,n)||n[0]==="$"&&n.slice(1)in e?!1:(l[n]=a,!0)},has({_:{data:e,setupState:n,accessCache:a,ctx:t,appContext:i,propsOptions:l}},o){let c;return!!a[o]||e!==fe&&ie(e,o)||n!==fe&&ie(n,o)||(c=l[0])&&ie(c,o)||ie(t,o)||ie(La,o)||ie(i.config.globalProperties,o)},defineProperty(e,n,a){return a.get!=null?e._.accessCache[n]=0:ie(a,"value")&&this.set(e,n,a.value,null),Reflect.defineProperty(e,n,a)}};let Ct=!0;function Bc(e){const n=Yt(e),a=e.proxy,t=e.ctx;Ct=!1,n.beforeCreate&&Si(n.beforeCreate,e,"bc");const{data:i,computed:l,methods:o,watch:c,provide:r,inject:h,created:d,beforeMount:_,mounted:E,beforeUpdate:j,updated:D,activated:A,deactivated:Q,beforeDestroy:g,beforeUnmount:$,destroyed:G,unmounted:J,render:ae,renderTracked:ue,renderTriggered:le,errorCaptured:L,serverPrefetch:Z,expose:Y,inheritAttrs:ce,components:T,directives:ee,filters:N}=n;if(h&&Hc(h,t,null,e.appContext.config.unwrapInjectedRef),o)for(const xe in o){const be=o[xe];X(be)&&(t[xe]=be.bind(a))}if(i){const xe=i.call(a,a);ge(xe)&&(e.data=Ua(xe))}if(Ct=!0,l)for(const xe in l){const be=l[xe],xn=X(be)?be.bind(a,a):X(be.get)?be.get.bind(a,a):Ue,fa=!X(be)&&X(be.set)?be.set.bind(a):Ue,kn=oe({get:xn,set:fa});Object.defineProperty(t,xe,{enumerable:!0,configurable:!0,get:()=>kn.value,set:We=>kn.value=We})}if(c)for(const xe in c)Ul(c[xe],t,a,xe);if(r){const xe=X(r)?r.call(a):r;Reflect.ownKeys(xe).forEach(be=>{Ya(be,xe[be])})}d&&Si(d,e,"c");function se(xe,be){U(be)?be.forEach(xn=>xe(xn.bind(a))):be&&xe(be.bind(a))}if(se(Vc,_),se(Oe,E),se(Tc,j),se(qt,D),se(Rc,A),se(Lc,Q),se(Nc,L),se(Ac,ue),se(zc,le),se(Bl,$),se(_n,J),se(Ic,Z),U(Y))if(Y.length){const xe=e.exposed||(e.exposed={});Y.forEach(be=>{Object.defineProperty(xe,be,{get:()=>a[be],set:xn=>a[be]=xn})})}else e.exposed||(e.exposed={});ae&&e.render===Ue&&(e.render=ae),ce!=null&&(e.inheritAttrs=ce),T&&(e.components=T),ee&&(e.directives=ee)}function Hc(e,n,a=Ue,t=!1){U(e)&&(e=St(e));for(const i in e){const l=e[i];let o;ge(l)?"default"in l?o=Xe(l.from||i,l.default,!0):o=Xe(l.from||i):o=Xe(l),je(o)&&t?Object.defineProperty(n,i,{enumerable:!0,configurable:!0,get:()=>o.value,set:c=>o.value=c}):n[i]=o}}function Si(e,n,a){Ne(U(e)?e.map(t=>t.bind(n.proxy)):e.bind(n.proxy),n,a)}function Ul(e,n,a,t){const i=t.includes(".")?Il(a,t):()=>a[t];if(ve(e)){const l=n[e];X(l)&&tn(i,l)}else if(X(e))tn(i,e.bind(a));else if(ge(e))if(U(e))e.forEach(l=>Ul(l,n,a,t));else{const l=X(e.handler)?e.handler.bind(a):n[e.handler];X(l)&&tn(i,l,e)}}function Yt(e){const n=e.type,{mixins:a,extends:t}=n,{mixins:i,optionsCache:l,config:{optionMergeStrategies:o}}=e.appContext,c=l.get(n);let r;return c?r=c:!i.length&&!a&&!t?r=n:(r={},i.length&&i.forEach(h=>Fa(r,h,o,!0)),Fa(r,n,o)),ge(n)&&l.set(n,r),r}function Fa(e,n,a,t=!1){const{mixins:i,extends:l}=n;l&&Fa(e,l,a,!0),i&&i.forEach(o=>Fa(e,o,a,!0));for(const o in n)if(!(t&&o==="expose")){const c=Dc[o]||a&&a[o];e[o]=c?c(e[o],n[o]):n[o]}return e}const Dc={data:ji,props:Cn,emits:Cn,methods:Cn,computed:Cn,beforeCreate:Pe,created:Pe,beforeMount:Pe,mounted:Pe,beforeUpdate:Pe,updated:Pe,beforeDestroy:Pe,beforeUnmount:Pe,destroyed:Pe,unmounted:Pe,activated:Pe,deactivated:Pe,errorCaptured:Pe,serverPrefetch:Pe,components:Cn,directives:Cn,watch:Uc,provide:ji,inject:Gc};function ji(e,n){return n?e?function(){return ye(X(e)?e.call(this,this):e,X(n)?n.call(this,this):n)}:n:e}function Gc(e,n){return Cn(St(e),St(n))}function St(e){if(U(e)){const n={};for(let a=0;a<e.length;a++)n[e[a]]=e[a];return n}return e}function Pe(e,n){return e?[...new Set([].concat(e,n))]:n}function Cn(e,n){return e?ye(ye(Object.create(null),e),n):n}function Uc(e,n){if(!e)return n;if(!n)return e;const a=ye(Object.create(null),e);for(const t in n)a[t]=Pe(e[t],n[t]);return a}function Kc(e,n,a,t=!1){const i={},l={};wa(l,et,1),e.propsDefaults=Object.create(null),Kl(e,n,i,l);for(const o in e.propsOptions[0])o in i||(i[o]=void 0);a?e.props=t?i:hc(i):e.type.props?e.props=i:e.props=l,e.attrs=l}function qc(e,n,a,t){const{props:i,attrs:l,vnode:{patchFlag:o}}=e,c=re(i),[r]=e.propsOptions;let h=!1;if((t||o>0)&&!(o&16)){if(o&8){const d=e.vnode.dynamicProps;for(let _=0;_<d.length;_++){let E=d[_];if(Wa(e.emitsOptions,E))continue;const j=n[E];if(r)if(ie(l,E))j!==l[E]&&(l[E]=j,h=!0);else{const D=Ze(E);i[D]=jt(r,c,D,j,e,!1)}else j!==l[E]&&(l[E]=j,h=!0)}}}else{Kl(e,n,i,l)&&(h=!0);let d;for(const _ in c)(!n||!ie(n,_)&&((d=Kn(_))===_||!ie(n,d)))&&(r?a&&(a[_]!==void 0||a[d]!==void 0)&&(i[_]=jt(r,c,_,void 0,e,!0)):delete i[_]);if(l!==c)for(const _ in l)(!n||!ie(n,_)&&!0)&&(delete l[_],h=!0)}h&&ln(e,"set","$attrs")}function Kl(e,n,a,t){const[i,l]=e.propsOptions;let o=!1,c;if(n)for(let r in n){if(ea(r))continue;const h=n[r];let d;i&&ie(i,d=Ze(r))?!l||!l.includes(d)?a[d]=h:(c||(c={}))[d]=h:Wa(e.emitsOptions,r)||(!(r in t)||h!==t[r])&&(t[r]=h,o=!0)}if(l){const r=re(a),h=c||fe;for(let d=0;d<l.length;d++){const _=l[d];a[_]=jt(i,r,_,h[_],e,!ie(h,_))}}return o}function jt(e,n,a,t,i,l){const o=e[a];if(o!=null){const c=ie(o,"default");if(c&&t===void 0){const r=o.default;if(o.type!==Function&&X(r)){const{propsDefaults:h}=i;a in h?t=h[a]:(Gn(i),t=h[a]=r.call(null,n),Mn())}else t=r}o[0]&&(l&&!c?t=!1:o[1]&&(t===""||t===Kn(a))&&(t=!0))}return t}function ql(e,n,a=!1){const t=n.propsCache,i=t.get(e);if(i)return i;const l=e.props,o={},c=[];let r=!1;if(!X(e)){const d=_=>{r=!0;const[E,j]=ql(_,n,!0);ye(o,E),j&&c.push(...j)};!a&&n.mixins.length&&n.mixins.forEach(d),e.extends&&d(e.extends),e.mixins&&e.mixins.forEach(d)}if(!l&&!r)return ge(e)&&t.set(e,Vn),Vn;if(U(l))for(let d=0;d<l.length;d++){const _=Ze(l[d]);Pi(_)&&(o[_]=fe)}else if(l)for(const d in l){const _=Ze(d);if(Pi(_)){const E=l[d],j=o[_]=U(E)||X(E)?{type:E}:E;if(j){const D=Mi(Boolean,j.type),A=Mi(String,j.type);j[0]=D>-1,j[1]=A<0||D<A,(D>-1||ie(j,"default"))&&c.push(_)}}}const h=[o,c];return ge(e)&&t.set(e,h),h}function Pi(e){return e[0]!=="$"}function wi(e){const n=e&&e.toString().match(/^\s*function (\w+)/);return n?n[1]:e===null?"null":""}function $i(e,n){return wi(e)===wi(n)}function Mi(e,n){return U(n)?n.findIndex(a=>$i(a,e)):X(n)&&$i(n,e)?0:-1}const Wl=e=>e[0]==="_"||e==="$stable",Qt=e=>U(e)?e.map(He):[He(e)],Wc=(e,n,a)=>{if(n._n)return n;const t=F((...i)=>Qt(n(...i)),a);return t._c=!1,t},Jl=(e,n,a)=>{const t=e._ctx;for(const i in e){if(Wl(i))continue;const l=e[i];if(X(l))n[i]=Wc(i,l,t);else if(l!=null){const o=Qt(l);n[i]=()=>o}}},Yl=(e,n)=>{const a=Qt(n);e.slots.default=()=>a},Jc=(e,n)=>{if(e.vnode.shapeFlag&32){const a=n._;a?(e.slots=re(n),wa(n,"_",a)):Jl(n,e.slots={})}else e.slots={},n&&Yl(e,n);wa(e.slots,et,1)},Yc=(e,n,a)=>{const{vnode:t,slots:i}=e;let l=!0,o=fe;if(t.shapeFlag&32){const c=n._;c?a&&c===1?l=!1:(ye(i,n),!a&&c===1&&delete i._):(l=!n.$stable,Jl(n,i)),o=n}else n&&(Yl(e,n),o={default:1});if(l)for(const c in i)!Wl(c)&&!(c in o)&&delete i[c]};function Ql(){return{app:null,config:{isNativeTag:$o,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Qc=0;function Xc(e,n){return function(t,i=null){X(t)||(t=Object.assign({},t)),i!=null&&!ge(i)&&(i=null);const l=Ql(),o=new Set;let c=!1;const r=l.app={_uid:Qc++,_component:t,_props:i,_container:null,_context:l,_instance:null,version:_r,get config(){return l.config},set config(h){},use(h,...d){return o.has(h)||(h&&X(h.install)?(o.add(h),h.install(r,...d)):X(h)&&(o.add(h),h(r,...d))),r},mixin(h){return l.mixins.includes(h)||l.mixins.push(h),r},component(h,d){return d?(l.components[h]=d,r):l.components[h]},directive(h,d){return d?(l.directives[h]=d,r):l.directives[h]},mount(h,d,_){if(!c){const E=w(t,i);return E.appContext=l,d&&n?n(E,h):e(E,h,_),c=!0,r._container=h,h.__vue_app__=r,ei(E.component)||E.component.proxy}},unmount(){c&&(e(null,r._container),delete r._container.__vue_app__)},provide(h,d){return l.provides[h]=d,r}};return r}}function Va(e,n,a,t,i=!1){if(U(e)){e.forEach((E,j)=>Va(E,n&&(U(n)?n[j]:n),a,t,i));return}if(An(t)&&!i)return;const l=t.shapeFlag&4?ei(t.component)||t.component.proxy:t.el,o=i?null:l,{i:c,r}=e,h=n&&n.r,d=c.refs===fe?c.refs={}:c.refs,_=c.setupState;if(h!=null&&h!==r&&(ve(h)?(d[h]=null,ie(_,h)&&(_[h]=null)):je(h)&&(h.value=null)),X(r))bn(r,c,12,[o,d]);else{const E=ve(r),j=je(r);if(E||j){const D=()=>{if(e.f){const A=E?d[r]:r.value;i?U(A)&&Vt(A,l):U(A)?A.includes(l)||A.push(l):E?(d[r]=[l],ie(_,r)&&(_[r]=d[r])):(r.value=[l],e.k&&(d[e.k]=r.value))}else E?(d[r]=o,ie(_,r)&&(_[r]=o)):j&&(r.value=o,e.k&&(d[e.k]=o))};o?(D.id=-1,$e(D,a)):D()}}}let mn=!1;const ya=e=>/svg/.test(e.namespaceURI)&&e.tagName!=="foreignObject",Ca=e=>e.nodeType===8;function Zc(e){const{mt:n,p:a,o:{patchProp:t,createText:i,nextSibling:l,parentNode:o,remove:c,insert:r,createComment:h}}=e,d=(g,$)=>{if(!$.hasChildNodes()){a(null,g,$),Ma(),$._vnode=g;return}mn=!1,_($.firstChild,g,null,null,null),Ma(),$._vnode=g,mn&&console.error("Hydration completed but contains mismatches.")},_=(g,$,G,J,ae,ue=!1)=>{const le=Ca(g)&&g.data==="[",L=()=>A(g,$,G,J,ae,le),{type:Z,ref:Y,shapeFlag:ce,patchFlag:T}=$;let ee=g.nodeType;$.el=g,T===-2&&(ue=!1,$.dynamicChildren=null);let N=null;switch(Z){case ma:ee!==3?$.children===""?(r($.el=i(""),o(g),g),N=g):N=L():(g.data!==$.children&&(mn=!0,g.data=$.children),N=l(g));break;case Te:ee!==8||le?N=L():N=l(g);break;case Nn:if(le&&(g=l(g),ee=g.nodeType),ee===1||ee===3){N=g;const Le=!$.children.length;for(let se=0;se<$.staticCount;se++)Le&&($.children+=N.nodeType===1?N.outerHTML:N.data),se===$.staticCount-1&&($.anchor=N),N=l(N);return le?l(N):N}else L();break;case q:le?N=D(g,$,G,J,ae,ue):N=L();break;default:if(ce&1)ee!==1||$.type.toLowerCase()!==g.tagName.toLowerCase()?N=L():N=E(g,$,G,J,ae,ue);else if(ce&6){$.slotScopeIds=ae;const Le=o(g);if(n($,Le,null,G,J,ya(Le),ue),N=le?Q(g):l(g),N&&Ca(N)&&N.data==="teleport end"&&(N=l(N)),An($)){let se;le?(se=w(q),se.anchor=N?N.previousSibling:Le.lastChild):se=g.nodeType===3?Re(""):w("div"),se.el=g,$.component.subTree=se}}else ce&64?ee!==8?N=L():N=$.type.hydrate(g,$,G,J,ae,ue,e,j):ce&128&&(N=$.type.hydrate(g,$,G,J,ya(o(g)),ae,ue,e,_))}return Y!=null&&Va(Y,null,J,$),N},E=(g,$,G,J,ae,ue)=>{ue=ue||!!$.dynamicChildren;const{type:le,props:L,patchFlag:Z,shapeFlag:Y,dirs:ce}=$,T=le==="input"&&ce||le==="option";if(T||Z!==-1){if(ce&&Ye($,null,G,"created"),L)if(T||!ue||Z&48)for(const N in L)(T&&N.endsWith("value")||ba(N)&&!ea(N))&&t(g,N,null,L[N],!1,void 0,G);else L.onClick&&t(g,"onClick",null,L.onClick,!1,void 0,G);let ee;if((ee=L&&L.onVnodeBeforeMount)&&Ae(ee,G,$),ce&&Ye($,null,G,"beforeMount"),((ee=L&&L.onVnodeMounted)||ce)&&Vl(()=>{ee&&Ae(ee,G,$),ce&&Ye($,null,G,"mounted")},J),Y&16&&!(L&&(L.innerHTML||L.textContent))){let N=j(g.firstChild,$,g,G,J,ae,ue);for(;N;){mn=!0;const Le=N;N=N.nextSibling,c(Le)}}else Y&8&&g.textContent!==$.children&&(mn=!0,g.textContent=$.children)}return g.nextSibling},j=(g,$,G,J,ae,ue,le)=>{le=le||!!$.dynamicChildren;const L=$.children,Z=L.length;for(let Y=0;Y<Z;Y++){const ce=le?L[Y]:L[Y]=He(L[Y]);if(g)g=_(g,ce,J,ae,ue,le);else{if(ce.type===ma&&!ce.children)continue;mn=!0,a(null,ce,G,null,J,ae,ya(G),ue)}}return g},D=(g,$,G,J,ae,ue)=>{const{slotScopeIds:le}=$;le&&(ae=ae?ae.concat(le):le);const L=o(g),Z=j(l(g),$,L,G,J,ae,ue);return Z&&Ca(Z)&&Z.data==="]"?l($.anchor=Z):(mn=!0,r($.anchor=h("]"),L,Z),Z)},A=(g,$,G,J,ae,ue)=>{if(mn=!0,$.el=null,ue){const Z=Q(g);for(;;){const Y=l(g);if(Y&&Y!==Z)c(Y);else break}}const le=l(g),L=o(g);return c(g),a(null,$,L,le,G,J,ya(L),ae),le},Q=g=>{let $=0;for(;g;)if(g=l(g),g&&Ca(g)&&(g.data==="["&&$++,g.data==="]")){if($===0)return l(g);$--}return g};return[d,_]}const $e=Vl;function er(e){return nr(e,Zc)}function nr(e,n){const a=To();a.__VUE__=!0;const{insert:t,remove:i,patchProp:l,createElement:o,createText:c,createComment:r,setText:h,setElementText:d,parentNode:_,nextSibling:E,setScopeId:j=Ue,insertStaticContent:D}=e,A=(m,s,p,v=null,k=null,S=null,R=!1,C=null,P=!!s.dynamicChildren)=>{if(m===s)return;m&&!jn(m,s)&&(v=_a(m),We(m,k,S,!0),m=null),s.patchFlag===-2&&(P=!1,s.dynamicChildren=null);const{type:y,ref:O,shapeFlag:I}=s;switch(y){case ma:Q(m,s,p,v);break;case Te:g(m,s,p,v);break;case Nn:m==null&&$(s,p,v,R);break;case q:T(m,s,p,v,k,S,R,C,P);break;default:I&1?ae(m,s,p,v,k,S,R,C,P):I&6?ee(m,s,p,v,k,S,R,C,P):(I&64||I&128)&&y.process(m,s,p,v,k,S,R,C,P,Rn)}O!=null&&k&&Va(O,m&&m.ref,S,s||m,!s)},Q=(m,s,p,v)=>{if(m==null)t(s.el=c(s.children),p,v);else{const k=s.el=m.el;s.children!==m.children&&h(k,s.children)}},g=(m,s,p,v)=>{m==null?t(s.el=r(s.children||""),p,v):s.el=m.el},$=(m,s,p,v)=>{[m.el,m.anchor]=D(m.children,s,p,v,m.el,m.anchor)},G=({el:m,anchor:s},p,v)=>{let k;for(;m&&m!==s;)k=E(m),t(m,p,v),m=k;t(s,p,v)},J=({el:m,anchor:s})=>{let p;for(;m&&m!==s;)p=E(m),i(m),m=p;i(s)},ae=(m,s,p,v,k,S,R,C,P)=>{R=R||s.type==="svg",m==null?ue(s,p,v,k,S,R,C,P):Z(m,s,k,S,R,C,P)},ue=(m,s,p,v,k,S,R,C)=>{let P,y;const{type:O,props:I,shapeFlag:B,transition:K,dirs:ne}=m;if(P=m.el=o(m.type,S,I&&I.is,I),B&8?d(P,m.children):B&16&&L(m.children,P,null,v,k,S&&O!=="foreignObject",R,C),ne&&Ye(m,null,v,"created"),I){for(const he in I)he!=="value"&&!ea(he)&&l(P,he,null,I[he],S,m.children,v,k,nn);"value"in I&&l(P,"value",null,I.value),(y=I.onVnodeBeforeMount)&&Ae(y,v,m)}le(P,m,m.scopeId,R,v),ne&&Ye(m,null,v,"beforeMount");const pe=(!k||k&&!k.pendingBranch)&&K&&!K.persisted;pe&&K.beforeEnter(P),t(P,s,p),((y=I&&I.onVnodeMounted)||pe||ne)&&$e(()=>{y&&Ae(y,v,m),pe&&K.enter(P),ne&&Ye(m,null,v,"mounted")},k)},le=(m,s,p,v,k)=>{if(p&&j(m,p),v)for(let S=0;S<v.length;S++)j(m,v[S]);if(k){let S=k.subTree;if(s===S){const R=k.vnode;le(m,R,R.scopeId,R.slotScopeIds,k.parent)}}},L=(m,s,p,v,k,S,R,C,P=0)=>{for(let y=P;y<m.length;y++){const O=m[y]=C?un(m[y]):He(m[y]);A(null,O,s,p,v,k,S,R,C)}},Z=(m,s,p,v,k,S,R)=>{const C=s.el=m.el;let{patchFlag:P,dynamicChildren:y,dirs:O}=s;P|=m.patchFlag&16;const I=m.props||fe,B=s.props||fe;let K;p&&vn(p,!1),(K=B.onVnodeBeforeUpdate)&&Ae(K,p,s,m),O&&Ye(s,m,p,"beforeUpdate"),p&&vn(p,!0);const ne=k&&s.type!=="foreignObject";if(y?Y(m.dynamicChildren,y,C,p,v,ne,S):R||be(m,s,C,null,p,v,ne,S,!1),P>0){if(P&16)ce(C,s,I,B,p,v,k);else if(P&2&&I.class!==B.class&&l(C,"class",null,B.class,k),P&4&&l(C,"style",I.style,B.style,k),P&8){const pe=s.dynamicProps;for(let he=0;he<pe.length;he++){const ke=pe[he],Be=I[ke],Ln=B[ke];(Ln!==Be||ke==="value")&&l(C,ke,Be,Ln,k,m.children,p,v,nn)}}P&1&&m.children!==s.children&&d(C,s.children)}else!R&&y==null&&ce(C,s,I,B,p,v,k);((K=B.onVnodeUpdated)||O)&&$e(()=>{K&&Ae(K,p,s,m),O&&Ye(s,m,p,"updated")},v)},Y=(m,s,p,v,k,S,R)=>{for(let C=0;C<s.length;C++){const P=m[C],y=s[C],O=P.el&&(P.type===q||!jn(P,y)||P.shapeFlag&70)?_(P.el):p;A(P,y,O,null,v,k,S,R,!0)}},ce=(m,s,p,v,k,S,R)=>{if(p!==v){if(p!==fe)for(const C in p)!ea(C)&&!(C in v)&&l(m,C,p[C],null,R,s.children,k,S,nn);for(const C in v){if(ea(C))continue;const P=v[C],y=p[C];P!==y&&C!=="value"&&l(m,C,y,P,R,s.children,k,S,nn)}"value"in v&&l(m,"value",p.value,v.value)}},T=(m,s,p,v,k,S,R,C,P)=>{const y=s.el=m?m.el:c(""),O=s.anchor=m?m.anchor:c("");let{patchFlag:I,dynamicChildren:B,slotScopeIds:K}=s;K&&(C=C?C.concat(K):K),m==null?(t(y,p,v),t(O,p,v),L(s.children,p,O,k,S,R,C,P)):I>0&&I&64&&B&&m.dynamicChildren?(Y(m.dynamicChildren,B,p,k,S,R,C),(s.key!=null||k&&s===k.subTree)&&Xl(m,s,!0)):be(m,s,p,O,k,S,R,C,P)},ee=(m,s,p,v,k,S,R,C,P)=>{s.slotScopeIds=C,m==null?s.shapeFlag&512?k.ctx.activate(s,p,v,R,P):N(s,p,v,k,S,R,P):Le(m,s,P)},N=(m,s,p,v,k,S,R)=>{const C=m.component=sr(m,v,k);if(Xa(m)&&(C.ctx.renderer=Rn),hr(C),C.asyncDep){if(k&&k.registerDep(C,se),!m.el){const P=C.subTree=w(Te);g(null,P,s,p)}return}se(C,m,s,p,k,S,R)},Le=(m,s,p)=>{const v=s.component=m.component;if(Sc(m,s,p))if(v.asyncDep&&!v.asyncResolved){xe(v,s,p);return}else v.next=s,xc(v.update),v.update();else s.el=m.el,v.vnode=s},se=(m,s,p,v,k,S,R)=>{const C=()=>{if(m.isMounted){let{next:O,bu:I,u:B,parent:K,vnode:ne}=m,pe=O,he;vn(m,!1),O?(O.el=ne.el,xe(m,O,R)):O=ne,I&&rt(I),(he=O.props&&O.props.onVnodeBeforeUpdate)&&Ae(he,K,O,ne),vn(m,!0);const ke=mt(m),Be=m.subTree;m.subTree=ke,A(Be,ke,_(Be.el),_a(Be),m,k,S),O.el=ke.el,pe===null&&jc(m,ke.el),B&&$e(B,k),(he=O.props&&O.props.onVnodeUpdated)&&$e(()=>Ae(he,K,O,ne),k)}else{let O;const{el:I,props:B}=s,{bm:K,m:ne,parent:pe}=m,he=An(s);if(vn(m,!1),K&&rt(K),!he&&(O=B&&B.onVnodeBeforeMount)&&Ae(O,pe,s),vn(m,!0),I&&ot){const ke=()=>{m.subTree=mt(m),ot(I,m.subTree,m,k,null)};he?s.type.__asyncLoader().then(()=>!m.isUnmounted&&ke()):ke()}else{const ke=m.subTree=mt(m);A(null,ke,p,v,m,k,S),s.el=ke.el}if(ne&&$e(ne,k),!he&&(O=B&&B.onVnodeMounted)){const ke=s;$e(()=>Ae(O,pe,ke),k)}(s.shapeFlag&256||pe&&An(pe.vnode)&&pe.vnode.shapeFlag&256)&&m.a&&$e(m.a,k),m.isMounted=!0,s=p=v=null}},P=m.effect=new At(C,()=>Kt(y),m.scope),y=m.update=()=>P.run();y.id=m.uid,vn(m,!0),y()},xe=(m,s,p)=>{s.component=m;const v=m.vnode.props;m.vnode=s,m.next=null,qc(m,s.props,v,p),Yc(m,s.children,p),qn(),ki(),Wn()},be=(m,s,p,v,k,S,R,C,P=!1)=>{const y=m&&m.children,O=m?m.shapeFlag:0,I=s.children,{patchFlag:B,shapeFlag:K}=s;if(B>0){if(B&128){fa(y,I,p,v,k,S,R,C,P);return}else if(B&256){xn(y,I,p,v,k,S,R,C,P);return}}K&8?(O&16&&nn(y,k,S),I!==y&&d(p,I)):O&16?K&16?fa(y,I,p,v,k,S,R,C,P):nn(y,k,S,!0):(O&8&&d(p,""),K&16&&L(I,p,v,k,S,R,C,P))},xn=(m,s,p,v,k,S,R,C,P)=>{m=m||Vn,s=s||Vn;const y=m.length,O=s.length,I=Math.min(y,O);let B;for(B=0;B<I;B++){const K=s[B]=P?un(s[B]):He(s[B]);A(m[B],K,p,null,k,S,R,C,P)}y>O?nn(m,k,S,!0,!1,I):L(s,p,v,k,S,R,C,P,I)},fa=(m,s,p,v,k,S,R,C,P)=>{let y=0;const O=s.length;let I=m.length-1,B=O-1;for(;y<=I&&y<=B;){const K=m[y],ne=s[y]=P?un(s[y]):He(s[y]);if(jn(K,ne))A(K,ne,p,null,k,S,R,C,P);else break;y++}for(;y<=I&&y<=B;){const K=m[I],ne=s[B]=P?un(s[B]):He(s[B]);if(jn(K,ne))A(K,ne,p,null,k,S,R,C,P);else break;I--,B--}if(y>I){if(y<=B){const K=B+1,ne=K<O?s[K].el:v;for(;y<=B;)A(null,s[y]=P?un(s[y]):He(s[y]),p,ne,k,S,R,C,P),y++}}else if(y>B)for(;y<=I;)We(m[y],k,S,!0),y++;else{const K=y,ne=y,pe=new Map;for(y=ne;y<=B;y++){const Fe=s[y]=P?un(s[y]):He(s[y]);Fe.key!=null&&pe.set(Fe.key,y)}let he,ke=0;const Be=B-ne+1;let Ln=!1,mi=0;const Qn=new Array(Be);for(y=0;y<Be;y++)Qn[y]=0;for(y=K;y<=I;y++){const Fe=m[y];if(ke>=Be){We(Fe,k,S,!0);continue}let Je;if(Fe.key!=null)Je=pe.get(Fe.key);else for(he=ne;he<=B;he++)if(Qn[he-ne]===0&&jn(Fe,s[he])){Je=he;break}Je===void 0?We(Fe,k,S,!0):(Qn[Je-ne]=y+1,Je>=mi?mi=Je:Ln=!0,A(Fe,s[Je],p,null,k,S,R,C,P),ke++)}const si=Ln?ar(Qn):Vn;for(he=si.length-1,y=Be-1;y>=0;y--){const Fe=ne+y,Je=s[Fe],hi=Fe+1<O?s[Fe+1].el:v;Qn[y]===0?A(null,Je,p,hi,k,S,R,C,P):Ln&&(he<0||y!==si[he]?kn(Je,p,hi,2):he--)}}},kn=(m,s,p,v,k=null)=>{const{el:S,type:R,transition:C,children:P,shapeFlag:y}=m;if(y&6){kn(m.component.subTree,s,p,v);return}if(y&128){m.suspense.move(s,p,v);return}if(y&64){R.move(m,s,p,Rn);return}if(R===q){t(S,s,p);for(let I=0;I<P.length;I++)kn(P[I],s,p,v);t(m.anchor,s,p);return}if(R===Nn){G(m,s,p);return}if(v!==2&&y&1&&C)if(v===0)C.beforeEnter(S),t(S,s,p),$e(()=>C.enter(S),k);else{const{leave:I,delayLeave:B,afterLeave:K}=C,ne=()=>t(S,s,p),pe=()=>{I(S,()=>{ne(),K&&K()})};B?B(S,ne,pe):pe()}else t(S,s,p)},We=(m,s,p,v=!1,k=!1)=>{const{type:S,props:R,ref:C,children:P,dynamicChildren:y,shapeFlag:O,patchFlag:I,dirs:B}=m;if(C!=null&&Va(C,null,p,m,!0),O&256){s.ctx.deactivate(m);return}const K=O&1&&B,ne=!An(m);let pe;if(ne&&(pe=R&&R.onVnodeBeforeUnmount)&&Ae(pe,s,m),O&6)yo(m.component,p,v);else{if(O&128){m.suspense.unmount(p,v);return}K&&Ye(m,null,s,"beforeUnmount"),O&64?m.type.remove(m,s,p,k,Rn,v):y&&(S!==q||I>0&&I&64)?nn(y,s,p,!1,!0):(S===q&&I&384||!k&&O&16)&&nn(P,s,p),v&&ci(m)}(ne&&(pe=R&&R.onVnodeUnmounted)||K)&&$e(()=>{pe&&Ae(pe,s,m),K&&Ye(m,null,s,"unmounted")},p)},ci=m=>{const{type:s,el:p,anchor:v,transition:k}=m;if(s===q){Eo(p,v);return}if(s===Nn){J(m);return}const S=()=>{i(p),k&&!k.persisted&&k.afterLeave&&k.afterLeave()};if(m.shapeFlag&1&&k&&!k.persisted){const{leave:R,delayLeave:C}=k,P=()=>R(p,S);C?C(m.el,S,P):P()}else S()},Eo=(m,s)=>{let p;for(;m!==s;)p=E(m),i(m),m=p;i(s)},yo=(m,s,p)=>{const{bum:v,scope:k,update:S,subTree:R,um:C}=m;v&&rt(v),k.stop(),S&&(S.active=!1,We(R,m,s,p)),C&&$e(C,s),$e(()=>{m.isUnmounted=!0},s),s&&s.pendingBranch&&!s.isUnmounted&&m.asyncDep&&!m.asyncResolved&&m.suspenseId===s.pendingId&&(s.deps--,s.deps===0&&s.resolve())},nn=(m,s,p,v=!1,k=!1,S=0)=>{for(let R=S;R<m.length;R++)We(m[R],s,p,v,k)},_a=m=>m.shapeFlag&6?_a(m.component.subTree):m.shapeFlag&128?m.suspense.next():E(m.anchor||m.el),ri=(m,s,p)=>{m==null?s._vnode&&We(s._vnode,null,null,!0):A(s._vnode||null,m,s,null,null,null,p),ki(),Ma(),s._vnode=m},Rn={p:A,um:We,m:kn,r:ci,mt:N,mc:L,pc:be,pbc:Y,n:_a,o:e};let lt,ot;return n&&([lt,ot]=n(Rn)),{render:ri,hydrate:lt,createApp:Xc(ri,lt)}}function vn({effect:e,update:n},a){e.allowRecurse=n.allowRecurse=a}function Xl(e,n,a=!1){const t=e.children,i=n.children;if(U(t)&&U(i))for(let l=0;l<t.length;l++){const o=t[l];let c=i[l];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=i[l]=un(i[l]),c.el=o.el),a||Xl(o,c))}}function ar(e){const n=e.slice(),a=[0];let t,i,l,o,c;const r=e.length;for(t=0;t<r;t++){const h=e[t];if(h!==0){if(i=a[a.length-1],e[i]<h){n[t]=i,a.push(t);continue}for(l=0,o=a.length-1;l<o;)c=l+o>>1,e[a[c]]<h?l=c+1:o=c;h<e[a[l]]&&(l>0&&(n[t]=a[l-1]),a[l]=t)}}for(l=a.length,o=a[l-1];l-- >0;)a[l]=o,o=n[o];return a}const tr=e=>e.__isTeleport,q=Symbol(void 0),ma=Symbol(void 0),Te=Symbol(void 0),Nn=Symbol(void 0),aa=[];let Ge=null;function u(e=!1){aa.push(Ge=e?null:[])}function ir(){aa.pop(),Ge=aa[aa.length-1]||null}let sa=1;function Ri(e){sa+=e}function Zl(e){return e.dynamicChildren=sa>0?Ge||Vn:null,ir(),sa>0&&Ge&&Ge.push(e),e}function f(e,n,a,t,i,l){return Zl(x(e,n,a,t,i,l,!0))}function W(e,n,a,t,i){return Zl(w(e,n,a,t,i,!0))}function Ta(e){return e?e.__v_isVNode===!0:!1}function jn(e,n){return e.type===n.type&&e.key===n.key}const et="__vInternal",eo=({key:e})=>e!=null?e:null,ja=({ref:e,ref_key:n,ref_for:a})=>e!=null?ve(e)||je(e)||X(e)?{i:we,r:e,k:n,f:!!a}:e:null;function x(e,n=null,a=null,t=0,i=null,l=e===q?0:1,o=!1,c=!1){const r={__v_isVNode:!0,__v_skip:!0,type:e,props:n,key:n&&eo(n),ref:n&&ja(n),scopeId:Ja,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:t,dynamicProps:i,dynamicChildren:null,appContext:null};return c?(Xt(r,a),l&128&&e.normalize(r)):a&&(r.shapeFlag|=ve(a)?8:16),sa>0&&!o&&Ge&&(r.patchFlag>0||l&6)&&r.patchFlag!==32&&Ge.push(r),r}const w=lr;function lr(e,n=null,a=null,t=0,i=null,l=!1){if((!e||e===Hl)&&(e=Te),Ta(e)){const c=fn(e,n,!0);return a&&Xt(c,a),sa>0&&!l&&Ge&&(c.shapeFlag&6?Ge[Ge.indexOf(e)]=c:Ge.push(c)),c.patchFlag|=-2,c}if(fr(e)&&(e=e.__vccOpts),n){n=or(n);let{class:c,style:r}=n;c&&!ve(c)&&(n.class=de(c)),ge(r)&&(Cl(r)&&!U(r)&&(r=ye({},r)),n.style=da(r))}const o=ve(e)?1:Pc(e)?128:tr(e)?64:ge(e)?4:X(e)?2:0;return x(e,n,a,t,i,o,l,!0)}function or(e){return e?Cl(e)||et in e?ye({},e):e:null}function fn(e,n,a=!1){const{props:t,ref:i,patchFlag:l,children:o}=e,c=n?Pa(t||{},n):t;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:c,key:c&&eo(c),ref:n&&n.ref?a&&i?U(i)?i.concat(ja(n)):[i,ja(n)]:ja(n):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:n&&e.type!==q?l===-1?16:l|16:l,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&fn(e.ssContent),ssFallback:e.ssFallback&&fn(e.ssFallback),el:e.el,anchor:e.anchor}}function Re(e=" ",n=0){return w(ma,null,e,n)}function cr(e,n){const a=w(Nn,null,e);return a.staticCount=n,a}function H(e="",n=!1){return n?(u(),W(Te,null,e)):w(Te,null,e)}function He(e){return e==null||typeof e=="boolean"?w(Te):U(e)?w(q,null,e.slice()):typeof e=="object"?un(e):w(ma,null,String(e))}function un(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:fn(e)}function Xt(e,n){let a=0;const{shapeFlag:t}=e;if(n==null)n=null;else if(U(n))a=16;else if(typeof n=="object")if(t&65){const i=n.default;i&&(i._c&&(i._d=!1),Xt(e,i()),i._c&&(i._d=!0));return}else{a=32;const i=n._;!i&&!(et in n)?n._ctx=we:i===3&&we&&(we.slots._===1?n._=1:(n._=2,e.patchFlag|=1024))}else X(n)?(n={default:n,_ctx:we},a=32):(n=String(n),t&64?(a=16,n=[Re(n)]):a=8);e.children=n,e.shapeFlag|=a}function Pa(...e){const n={};for(let a=0;a<e.length;a++){const t=e[a];for(const i in t)if(i==="class")n.class!==t.class&&(n.class=de([n.class,t.class]));else if(i==="style")n.style=da([n.style,t.style]);else if(ba(i)){const l=n[i],o=t[i];o&&l!==o&&!(U(l)&&l.includes(o))&&(n[i]=l?[].concat(l,o):o)}else i!==""&&(n[i]=t[i])}return n}function Ae(e,n,a,t=null){Ne(e,n,7,[a,t])}const rr=Ql();let mr=0;function sr(e,n,a){const t=e.type,i=(n?n.appContext:e.appContext)||rr,l={uid:mr++,vnode:e,type:t,parent:n,appContext:i,root:null,next:null,subTree:null,effect:null,update:null,scope:new Io(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:n?n.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:ql(t,i),emitsOptions:Fl(t,i),emit:null,emitted:null,propsDefaults:fe,inheritAttrs:t.inheritAttrs,ctx:fe,data:fe,props:fe,attrs:fe,slots:fe,refs:fe,setupState:fe,setupContext:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=n?n.root:l,l.emit=Ec.bind(null,l),e.ce&&e.ce(l),l}let Ee=null;const Zt=()=>Ee||we,Gn=e=>{Ee=e,e.scope.on()},Mn=()=>{Ee&&Ee.scope.off(),Ee=null};function no(e){return e.vnode.shapeFlag&4}let ha=!1;function hr(e,n=!1){ha=n;const{props:a,children:t}=e.vnode,i=no(e);Kc(e,a,i,n),Jc(e,t);const l=i?ur(e,n):void 0;return ha=!1,l}function ur(e,n){const a=e.type;e.accessCache=Object.create(null),e.proxy=na(new Proxy(e.ctx,Oc));const{setup:t}=a;if(t){const i=e.setupContext=t.length>1?br(e):null;Gn(e),qn();const l=bn(t,e,0,[e.props,i]);if(Wn(),Mn(),sl(l)){if(l.then(Mn,Mn),n)return l.then(o=>{Li(e,o,n)}).catch(o=>{Ka(o,e,0)});e.asyncDep=l}else Li(e,l,n)}else ao(e,n)}function Li(e,n,a){X(n)?e.type.__ssrInlineRender?e.ssrRender=n:e.render=n:ge(n)&&(e.setupState=wl(n)),ao(e,a)}let Fi;function ao(e,n,a){const t=e.type;if(!e.render){if(!n&&Fi&&!t.render){const i=t.template||Yt(e).template;if(i){const{isCustomElement:l,compilerOptions:o}=e.appContext.config,{delimiters:c,compilerOptions:r}=t,h=ye(ye({isCustomElement:l,delimiters:c},o),r);t.render=Fi(i,h)}}e.render=t.render||Ue}Gn(e),qn(),Bc(e),Wn(),Mn()}function dr(e){return new Proxy(e.attrs,{get(n,a){return Ie(e,"get","$attrs"),n[a]}})}function br(e){const n=t=>{e.exposed=t||{}};let a;return{get attrs(){return a||(a=dr(e))},slots:e.slots,emit:e.emit,expose:n}}function ei(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(wl(na(e.exposed)),{get(n,a){if(a in n)return n[a];if(a in La)return La[a](e)}}))}function pr(e,n=!0){return X(e)?e.displayName||e.name:e.name||n&&e.__name}function fr(e){return X(e)&&"__vccOpts"in e}const oe=(e,n)=>fc(e,n,ha);function Ia(e,n,a){const t=arguments.length;return t===2?ge(n)&&!U(n)?Ta(n)?w(e,null,[n]):w(e,n):w(e,null,n):(t>3?a=Array.prototype.slice.call(arguments,2):t===3&&Ta(a)&&(a=[a]),w(e,n,a))}const _r="3.2.40",gr="http://www.w3.org/2000/svg",Pn=typeof document<"u"?document:null,Vi=Pn&&Pn.createElement("template"),xr={insert:(e,n,a)=>{n.insertBefore(e,a||null)},remove:e=>{const n=e.parentNode;n&&n.removeChild(e)},createElement:(e,n,a,t)=>{const i=n?Pn.createElementNS(gr,e):Pn.createElement(e,a?{is:a}:void 0);return e==="select"&&t&&t.multiple!=null&&i.setAttribute("multiple",t.multiple),i},createText:e=>Pn.createTextNode(e),createComment:e=>Pn.createComment(e),setText:(e,n)=>{e.nodeValue=n},setElementText:(e,n)=>{e.textContent=n},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Pn.querySelector(e),setScopeId(e,n){e.setAttribute(n,"")},insertStaticContent(e,n,a,t,i,l){const o=a?a.previousSibling:n.lastChild;if(i&&(i===l||i.nextSibling))for(;n.insertBefore(i.cloneNode(!0),a),!(i===l||!(i=i.nextSibling)););else{Vi.innerHTML=t?`<svg>${e}</svg>`:e;const c=Vi.content;if(t){const r=c.firstChild;for(;r.firstChild;)c.appendChild(r.firstChild);c.removeChild(r)}n.insertBefore(c,a)}return[o?o.nextSibling:n.firstChild,a?a.previousSibling:n.lastChild]}};function kr(e,n,a){const t=e._vtc;t&&(n=(n?[n,...t]:[...t]).join(" ")),n==null?e.removeAttribute("class"):a?e.setAttribute("class",n):e.className=n}function vr(e,n,a){const t=e.style,i=ve(a);if(a&&!i){for(const l in a)Pt(t,l,a[l]);if(n&&!ve(n))for(const l in n)a[l]==null&&Pt(t,l,"")}else{const l=t.display;i?n!==a&&(t.cssText=a):n&&e.removeAttribute("style"),"_vod"in e&&(t.display=l)}}const Ti=/\s*!important$/;function Pt(e,n,a){if(U(a))a.forEach(t=>Pt(e,n,t));else if(a==null&&(a=""),n.startsWith("--"))e.setProperty(n,a);else{const t=Er(e,n);Ti.test(a)?e.setProperty(Kn(t),a.replace(Ti,""),"important"):e[t]=a}}const Ii=["Webkit","Moz","ms"],ht={};function Er(e,n){const a=ht[n];if(a)return a;let t=Ze(n);if(t!=="filter"&&t in e)return ht[n]=t;t=Da(t);for(let i=0;i<Ii.length;i++){const l=Ii[i]+t;if(l in e)return ht[n]=l}return n}const zi="http://www.w3.org/1999/xlink";function yr(e,n,a,t,i){if(t&&n.startsWith("xlink:"))a==null?e.removeAttributeNS(zi,n.slice(6,n.length)):e.setAttributeNS(zi,n,a);else{const l=So(n);a==null||l&&!cl(a)?e.removeAttribute(n):e.setAttribute(n,l?"":a)}}function Cr(e,n,a,t,i,l,o){if(n==="innerHTML"||n==="textContent"){t&&o(t,i,l),e[n]=a==null?"":a;return}if(n==="value"&&e.tagName!=="PROGRESS"&&!e.tagName.includes("-")){e._value=a;const r=a==null?"":a;(e.value!==r||e.tagName==="OPTION")&&(e.value=r),a==null&&e.removeAttribute(n);return}let c=!1;if(a===""||a==null){const r=typeof e[n];r==="boolean"?a=cl(a):a==null&&r==="string"?(a="",c=!0):r==="number"&&(a=0,c=!0)}try{e[n]=a}catch{}c&&e.removeAttribute(n)}const[to,Sr]=(()=>{let e=Date.now,n=!1;if(typeof window<"u"){Date.now()>document.createEvent("Event").timeStamp&&(e=performance.now.bind(performance));const a=navigator.userAgent.match(/firefox\/(\d+)/i);n=!!(a&&Number(a[1])<=53)}return[e,n]})();let wt=0;const jr=Promise.resolve(),Pr=()=>{wt=0},wr=()=>wt||(jr.then(Pr),wt=to());function $r(e,n,a,t){e.addEventListener(n,a,t)}function Mr(e,n,a,t){e.removeEventListener(n,a,t)}function Rr(e,n,a,t,i=null){const l=e._vei||(e._vei={}),o=l[n];if(t&&o)o.value=t;else{const[c,r]=Lr(n);if(t){const h=l[n]=Fr(t,i);$r(e,c,h,r)}else o&&(Mr(e,c,o,r),l[n]=void 0)}}const Ai=/(?:Once|Passive|Capture)$/;function Lr(e){let n;if(Ai.test(e)){n={};let t;for(;t=e.match(Ai);)e=e.slice(0,e.length-t[0].length),n[t[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):Kn(e.slice(2)),n]}function Fr(e,n){const a=t=>{const i=t.timeStamp||to();(Sr||i>=a.attached-1)&&Ne(Vr(t,a.value),n,5,[t])};return a.value=e,a.attached=wr(),a}function Vr(e,n){if(U(n)){const a=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{a.call(e),e._stopped=!0},n.map(t=>i=>!i._stopped&&t&&t(i))}else return n}const Ni=/^on[a-z]/,Tr=(e,n,a,t,i=!1,l,o,c,r)=>{n==="class"?kr(e,t,i):n==="style"?vr(e,a,t):ba(n)?Ft(n)||Rr(e,n,a,t,o):(n[0]==="."?(n=n.slice(1),!0):n[0]==="^"?(n=n.slice(1),!1):Ir(e,n,t,i))?Cr(e,n,t,l,o,c,r):(n==="true-value"?e._trueValue=t:n==="false-value"&&(e._falseValue=t),yr(e,n,t,i))};function Ir(e,n,a,t){return t?!!(n==="innerHTML"||n==="textContent"||n in e&&Ni.test(n)&&X(a)):n==="spellcheck"||n==="draggable"||n==="translate"||n==="form"||n==="list"&&e.tagName==="INPUT"||n==="type"&&e.tagName==="TEXTAREA"||Ni.test(n)&&ve(a)?!1:n in e}function zr(e){const n=Zt();if(!n)return;const a=()=>$t(n.subTree,e(n.proxy));Tl(a),Oe(()=>{const t=new MutationObserver(a);t.observe(n.subTree.el.parentNode,{childList:!0}),_n(()=>t.disconnect())})}function $t(e,n){if(e.shapeFlag&128){const a=e.suspense;e=a.activeBranch,a.pendingBranch&&!a.isHydrating&&a.effects.push(()=>{$t(a.activeBranch,n)})}for(;e.component;)e=e.component.subTree;if(e.shapeFlag&1&&e.el)Oi(e.el,n);else if(e.type===q)e.children.forEach(a=>$t(a,n));else if(e.type===Nn){let{el:a,anchor:t}=e;for(;a&&(Oi(a,n),a!==t);)a=a.nextSibling}}function Oi(e,n){if(e.nodeType===1){const a=e.style;for(const t in n)a.setProperty(`--${t}`,n[t])}}const sn="transition",Xn="animation",nt=(e,{slots:n})=>Ia(zl,Ar(e),n);nt.displayName="Transition";const io={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};nt.props=ye({},zl.props,io);const En=(e,n=[])=>{U(e)?e.forEach(a=>a(...n)):e&&e(...n)},Bi=e=>e?U(e)?e.some(n=>n.length>1):e.length>1:!1;function Ar(e){const n={};for(const T in e)T in io||(n[T]=e[T]);if(e.css===!1)return n;const{name:a="v",type:t,duration:i,enterFromClass:l=`${a}-enter-from`,enterActiveClass:o=`${a}-enter-active`,enterToClass:c=`${a}-enter-to`,appearFromClass:r=l,appearActiveClass:h=o,appearToClass:d=c,leaveFromClass:_=`${a}-leave-from`,leaveActiveClass:E=`${a}-leave-active`,leaveToClass:j=`${a}-leave-to`}=e,D=Nr(i),A=D&&D[0],Q=D&&D[1],{onBeforeEnter:g,onEnter:$,onEnterCancelled:G,onLeave:J,onLeaveCancelled:ae,onBeforeAppear:ue=g,onAppear:le=$,onAppearCancelled:L=G}=n,Z=(T,ee,N)=>{yn(T,ee?d:c),yn(T,ee?h:o),N&&N()},Y=(T,ee)=>{T._isLeaving=!1,yn(T,_),yn(T,j),yn(T,E),ee&&ee()},ce=T=>(ee,N)=>{const Le=T?le:$,se=()=>Z(ee,T,N);En(Le,[ee,se]),Hi(()=>{yn(ee,T?r:l),hn(ee,T?d:c),Bi(Le)||Di(ee,t,A,se)})};return ye(n,{onBeforeEnter(T){En(g,[T]),hn(T,l),hn(T,o)},onBeforeAppear(T){En(ue,[T]),hn(T,r),hn(T,h)},onEnter:ce(!1),onAppear:ce(!0),onLeave(T,ee){T._isLeaving=!0;const N=()=>Y(T,ee);hn(T,_),Hr(),hn(T,E),Hi(()=>{!T._isLeaving||(yn(T,_),hn(T,j),Bi(J)||Di(T,t,Q,N))}),En(J,[T,N])},onEnterCancelled(T){Z(T,!1),En(G,[T])},onAppearCancelled(T){Z(T,!0),En(L,[T])},onLeaveCancelled(T){Y(T),En(ae,[T])}})}function Nr(e){if(e==null)return null;if(ge(e))return[ut(e.enter),ut(e.leave)];{const n=ut(e);return[n,n]}}function ut(e){return dl(e)}function hn(e,n){n.split(/\s+/).forEach(a=>a&&e.classList.add(a)),(e._vtc||(e._vtc=new Set)).add(n)}function yn(e,n){n.split(/\s+/).forEach(t=>t&&e.classList.remove(t));const{_vtc:a}=e;a&&(a.delete(n),a.size||(e._vtc=void 0))}function Hi(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let Or=0;function Di(e,n,a,t){const i=e._endId=++Or,l=()=>{i===e._endId&&t()};if(a)return setTimeout(l,a);const{type:o,timeout:c,propCount:r}=Br(e,n);if(!o)return t();const h=o+"end";let d=0;const _=()=>{e.removeEventListener(h,E),l()},E=j=>{j.target===e&&++d>=r&&_()};setTimeout(()=>{d<r&&_()},c+1),e.addEventListener(h,E)}function Br(e,n){const a=window.getComputedStyle(e),t=D=>(a[D]||"").split(", "),i=t(sn+"Delay"),l=t(sn+"Duration"),o=Gi(i,l),c=t(Xn+"Delay"),r=t(Xn+"Duration"),h=Gi(c,r);let d=null,_=0,E=0;n===sn?o>0&&(d=sn,_=o,E=l.length):n===Xn?h>0&&(d=Xn,_=h,E=r.length):(_=Math.max(o,h),d=_>0?o>h?sn:Xn:null,E=d?d===sn?l.length:r.length:0);const j=d===sn&&/\b(transform|all)(,|$)/.test(a[sn+"Property"]);return{type:d,timeout:_,propCount:E,hasTransform:j}}function Gi(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max(...n.map((a,t)=>Ui(a)+Ui(e[t])))}function Ui(e){return Number(e.slice(0,-1).replace(",","."))*1e3}function Hr(){return document.body.offsetHeight}const Dr=["ctrl","shift","alt","meta"],Gr={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,n)=>Dr.some(a=>e[`${a}Key`]&&!n.includes(a))},Ur=(e,n)=>(a,...t)=>{for(let i=0;i<n.length;i++){const l=Gr[n[i]];if(l&&l(a,n))return}return e(a,...t)},Kr=ye({patchProp:Tr},xr);let dt,Ki=!1;function qr(){return dt=Ki?dt:er(Kr),Ki=!0,dt}const Wr=(...e)=>{const n=qr().createApp(...e),{mount:a}=n;return n.mount=t=>{const i=Jr(t);if(i)return a(i,!0,i instanceof SVGElement)},n};function Jr(e){return ve(e)?document.querySelector(e):e}const V=(e,n)=>{const a=e.__vccOpts||e;for(const[t,i]of n)a[t]=i;return a},Yr={props:["caption"],computed:{spec(){let e=this.$slots.default?this.$slots.default()[0].children:"<undefined>";return e in this.$pydocData?this.$pydocData[e]:{kind:"unknown",name:e,path:e}},label(){if(this.caption)return this.caption;let e=this.spec.path;return this.spec.kind=="routine"&&(e=e+"()"),e.startsWith("machinable.")&&(e=e.substring(11)),e}}};function Qr(e,n,a,t,i,l){return u(),f("a",{href:"#",style:da(l.spec.kind=="unknown"?{color:"red"}:{})},te(l.label),5)}const Xr=V(Yr,[["render",Qr]]),Zr="modulepreload",em=function(e){return"/"+e},qi={},nm=function(n,a,t){return!a||a.length===0?n():Promise.all(a.map(i=>{if(i=em(i),i in qi)return;qi[i]=!0;const l=i.endsWith(".css"),o=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${o}`))return;const c=document.createElement("link");if(c.rel=l?"stylesheet":Zr,l||(c.as="script",c.crossOrigin=""),c.href=i,document.head.appendChild(c),l)return new Promise((r,h)=>{c.addEventListener("load",r),c.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>n())};const am=JSON.parse('{"lang":"en-US","title":"machinable","description":"A modular configuration system for research projects","base":"/","head":[],"appearance":true,"themeConfig":{"logo":"/logo/logo.svg","nav":[{"text":"Tutorial","link":"/tutorial/introduction"},{"text":"Reference","link":"/reference/"},{"text":"Examples","link":"/examples/overview"},{"text":"Changelog","link":"https://github.com/machinable-org/machinable/blob/main/CHANGELOG.md"}],"sidebar":{"/tutorial/":[{"text":"Getting Started","items":[{"text":"Introduction","link":"/tutorial/introduction"},{"text":"Installation","link":"/tutorial/installation"}]},{"text":"Essentials","items":[{"text":"Quick start","link":"/tutorial/essentials/overview"},{"text":"Project structure","link":"/tutorial/essentials/project-structure"},{"text":"Implementing experiments","link":"/tutorial/essentials/implementing-experiments"},{"text":"Running experiments","link":"/tutorial/essentials/running-experiments"},{"text":"Storage and retrieval","link":"/tutorial/essentials/storage-and-retrieval"},{"text":"Unified representation","link":"/tutorial/essentials/unified-representation"},{"text":"Next steps","link":"/tutorial/essentials/next-steps"}]},{"text":"Elements in-depth","items":[{"text":"Overview","link":"/tutorial/elements-in-depth/overview"},{"text":"Advanced configuration","link":"/tutorial/elements-in-depth/advanced-configuration"},{"text":"Relationships","link":"/tutorial/elements-in-depth/relationships"},{"text":"Experiments","link":"/tutorial/elements-in-depth/experiments"},{"text":"Execution","link":"/tutorial/elements-in-depth/execution"}]},{"text":"Extra topics","items":[{"text":"Collections","link":"/tutorial/extra-topics/collections"}]}]},"footer":{"message":"MIT Licensed","copyright":"Copyright \xA9 2021-present"},"socialLinks":[{"icon":"github","link":"https://github.com/machinable-org/machinable"}],"editLink":{"pattern":"https://github.com/machinable-org/machinable/edit/main/docs/:path","text":"Edit this page on GitHub"}},"locales":{},"langs":{},"scrollOffset":90,"cleanUrls":"disabled"}'),at=/^[a-z]+:/i,Wi="vitepress-theme-appearance",Me=typeof window<"u",lo={relativePath:"",title:"404",description:"Not Found",headers:[],frontmatter:{sidebar:!1,layout:"page"},lastUpdated:0};function tm(e,n){n.sort((a,t)=>{const i=t.split("/").length-a.split("/").length;return i!==0?i:t.length-a.length});for(const a of n)if(e.startsWith(a))return a}function Ji(e,n){const a=tm(n,Object.keys(e));return a?e[a]:void 0}function im(e){const{locales:n}=e.themeConfig||{},a=e.locales;return n&&a?Object.keys(n).reduce((t,i)=>(t[i]={label:n[i].label,lang:a[i].lang},t),{}):{}}function lm(e,n){n=cm(e,n);const a=Ji(e.locales||{},n),t=Ji(e.themeConfig.locales||{},n);return Object.assign({},e,a,{themeConfig:Object.assign({},e.themeConfig,t,{locales:{}}),lang:(a||e).lang,locales:{},langs:im(e)})}function oo(e,n){var l;const a=n.title||e.title,t=(l=n.titleTemplate)!=null?l:e.titleTemplate;if(typeof t=="string"&&t.includes(":title"))return t.replace(/:title/g,a);const i=om(e.title,t);return`${a}${i}`}function om(e,n){return n===!1?"":n===!0||n===void 0?` | ${e}`:e===n?"":` | ${n}`}function cm(e,n){if(!Me)return n;const a=e.base,t=a.endsWith("/")?a.slice(0,-1):a;return n.slice(t.length)}function rm(e,n){const[a,t]=n;if(a!=="meta")return!1;const i=Object.entries(t)[0];return i==null?!1:e.some(([l,o])=>l===a&&o[i[0]]===i[1])}function mm(e,n){return[...e.filter(a=>!rm(n,a)),...n]}function sm(e,n){return`${e}${n}`.replace(/\/+/g,"/")}function ua(e){return at.test(e)?e:sm(Un.value.base,e)}function co(e){let n=e.replace(/\.html$/,"");if(n=decodeURIComponent(n),n.endsWith("/")&&(n+="index"),Me){const a="/";n=(n.slice(a.length).replace(/\//g,"_")||"index")+".md";const t=__VP_HASH_MAP__[n.toLowerCase()];n=`${a}assets/${n}.${t}.js`}else n=`./${n.slice(1).replace(/\//g,"_")}.md.js`;return n}const ro=Symbol(),Un=uc(am);function hm(e){const n=oe(()=>lm(Un.value,e.path));return{site:n,theme:oe(()=>n.value.themeConfig),page:oe(()=>e.data),frontmatter:oe(()=>e.data.frontmatter),lang:oe(()=>n.value.lang),localePath:oe(()=>{const{langs:a,lang:t}=n.value,i=Object.keys(a).find(l=>a[l].lang===t);return ua(i||"/")}),title:oe(()=>oo(n.value,e.data)),description:oe(()=>e.data.description||n.value.description)}}function me(){const e=Xe(ro);if(!e)throw new Error("vitepress data not properly injected in app");return e}const mo=Symbol(),Yi="http://a.com",um=()=>({path:"/",component:null,data:lo});function dm(e,n){const a=Ua(um()),t={route:a,go:i};async function i(c=Me?location.href:"/"){var h,d;await((h=t.onBeforeRouteChange)==null?void 0:h.call(t,c));const r=new URL(c,Yi);Un.value.cleanUrls==="disabled"&&!r.pathname.endsWith("/")&&!r.pathname.endsWith(".html")&&(r.pathname+=".html",c=r.pathname+r.search+r.hash),Me&&(history.replaceState({scrollPosition:window.scrollY},document.title),history.pushState(null,"",c)),await o(c),await((d=t.onAfterRouteChanged)==null?void 0:d.call(t,c))}let l=null;async function o(c,r=0,h=!1){const d=new URL(c,Yi),_=l=d.pathname;try{let E=await e(_);if(l===_){l=null;const{default:j,__pageData:D}=E;if(!j)throw new Error(`Invalid route component: ${j}`);a.path=Me?_:ua(_),a.component=na(j),a.data=na(D),Me&&qa(()=>{if(d.hash&&!r){let A=null;try{A=document.querySelector(decodeURIComponent(d.hash))}catch(Q){console.warn(Q)}if(A){Qi(A,d.hash);return}}window.scrollTo(0,r)})}}catch(E){if(!/fetch/.test(E.message)&&!/^\/404(\.html|\/)?$/.test(c)&&console.error(E),!h)try{const j=await fetch(Un.value.base+"hashmap.json");window.__VP_HASH_MAP__=await j.json(),await o(c,r,!0);return}catch{}l===_&&(l=null,a.path=Me?_:ua(_),a.component=n?na(n):null,a.data=lo)}}return Me&&(window.addEventListener("click",c=>{if(c.target.closest("button"))return;const h=c.target.closest("a");if(h&&!h.closest(".vp-raw")){const{href:d,origin:_,pathname:E,hash:j,search:D,target:A}=h,Q=window.location,g=E.match(/\.\w+$/);!c.ctrlKey&&!c.shiftKey&&!c.altKey&&!c.metaKey&&A!=="_blank"&&_===Q.origin&&!(g&&g[0]!==".html")&&(c.preventDefault(),E===Q.pathname&&D===Q.search?j&&j!==Q.hash&&(history.pushState(null,"",j),window.dispatchEvent(new Event("hashchange")),Qi(h,j,h.classList.contains("header-anchor"))):i(d))}},{capture:!0}),window.addEventListener("popstate",c=>{o(location.href,c.state&&c.state.scrollPosition||0)}),window.addEventListener("hashchange",c=>{c.preventDefault()})),t}function bm(){const e=Xe(mo);if(!e)throw new Error("useRouter() is called without provider.");return e}function gn(){return bm().route}function Qi(e,n,a=!1){let t=null;try{t=e.classList.contains("header-anchor")?e:document.querySelector(decodeURIComponent(n))}catch(i){console.warn(i)}if(t){let i=Un.value.scrollOffset;typeof i=="string"&&(i=document.querySelector(i).getBoundingClientRect().bottom+24);const l=parseInt(window.getComputedStyle(t).paddingTop,10),o=window.scrollY+t.getBoundingClientRect().top-i+l;!a||Math.abs(o-window.scrollY)>window.innerHeight?window.scrollTo(0,o):window.scrollTo({left:0,top:o,behavior:"smooth"})}}const pm=z({name:"VitePressContent",props:{onContentUpdated:Function},setup(e){const n=gn();return qt(()=>{var a;(a=e.onContentUpdated)==null||a.call(e)}),()=>Ia("div",{style:{position:"relative"}},[n.component?Ia(n.component):null])}}),so=/#.*$/,fm=/(index)?\.(md|html)$/,_m=typeof window<"u",gm=_e(_m?location.hash:"");function xm(e){return at.test(e)}function km(e,n){let a,t=!1;return()=>{a&&clearTimeout(a),t?a=setTimeout(e,n):(e(),t=!0,setTimeout(()=>{t=!1},n))}}function Jn(e,n,a=!1){if(n===void 0)return!1;if(e=Zi(`/${e}`),a)return new RegExp(n).test(e);if(Zi(n)!==e)return!1;const t=n.match(so);return t?gm.value===t[0]:!0}function Xi(e){return/^\//.test(e)?e:`/${e}`}function Zi(e){return decodeURI(e).replace(so,"").replace(fm,"")}function za(e){if(xm(e))return e;const{site:n}=me(),{pathname:a,search:t,hash:i}=new URL(e,"http://example.com"),l=a.endsWith("/")||a.endsWith(".html")?e:`${a.replace(/(\.md)?$/,n.value.cleanUrls==="disabled"?".html":"")}${t}${i}`;return ua(l)}function ho(e,n){if(Array.isArray(e))return e;n=Xi(n);for(const a in e)if(n.startsWith(Xi(a)))return e[a];return[]}function vm(e){const n=[];function a(t){for(const i of t)i.link&&n.push({...i,link:i.link}),"items"in i&&a(i.items)}for(const t of e)a(t.items);return n}function en(){const e=gn(),{theme:n,frontmatter:a}=me(),t=_e(!1),i=oe(()=>{const d=n.value.sidebar,_=e.data.relativePath;return d?ho(d,_):[]}),l=oe(()=>a.value.sidebar!==!1&&i.value.length>0&&a.value.layout!=="home"),o=oe(()=>a.value.layout!=="home"&&a.value.aside!==!1);function c(){t.value=!0}function r(){t.value=!1}function h(){t.value?r():c()}return{isOpen:t,sidebar:i,hasSidebar:l,hasAside:o,open:c,close:r,toggle:h}}function Em(e,n){let a;Dn(()=>{a=e.value?document.activeElement:void 0}),Oe(()=>{window.addEventListener("keyup",t)}),_n(()=>{window.removeEventListener("keyup",t)});function t(i){i.key==="Escape"&&e.value&&(n(),a==null||a.focus())}}const ym=z({__name:"VPSkipLink",setup(e){const n=gn(),a=_e();tn(()=>n.path,()=>a.value.focus());function t({target:i}){const l=document.querySelector(i.hash);if(l){const o=()=>{l.removeAttribute("tabindex"),l.removeEventListener("blur",o)};l.setAttribute("tabindex","-1"),l.addEventListener("blur",o),l.focus(),window.scrollTo(0,0)}}return(i,l)=>(u(),f(q,null,[x("span",{ref_key:"backToTop",ref:a,tabindex:"-1"},null,512),x("a",{href:"#VPContent",class:"VPSkipLink visually-hidden",onClick:t}," Skip to content ")],64))}});const Cm=V(ym,[["__scopeId","data-v-151f2593"]]),Sm={key:0,class:"VPBackdrop"},jm=z({__name:"VPBackdrop",props:{show:{type:Boolean}},setup(e){return(n,a)=>(u(),W(nt,{name:"fade"},{default:F(()=>[e.show?(u(),f("div",Sm)):H("",!0)]),_:1}))}});const Pm=V(jm,[["__scopeId","data-v-0164f098"]]);function wm(){const e=_e(!1);function n(){e.value=!0,window.addEventListener("resize",i)}function a(){e.value=!1,window.removeEventListener("resize",i)}function t(){e.value?a():n()}function i(){window.outerWidth>=768&&a()}const l=gn();return tn(()=>l.path,a),{isScreenOpen:e,openScreen:n,closeScreen:a,toggleScreen:t}}const $m=["src","alt"],Mm={inheritAttrs:!1},Rm=z({...Mm,__name:"VPImage",props:{image:null},setup(e){return(n,a)=>{const t=on("VPImage",!0);return e.image?(u(),f(q,{key:0},[typeof e.image=="string"||"src"in e.image?(u(),f("img",Pa({key:0,class:"VPImage"},typeof e.image=="string"?n.$attrs:{...e.image,...n.$attrs},{src:b(ua)(typeof e.image=="string"?e.image:e.image.src),alt:typeof e.image=="string"?"":e.image.alt||""}),null,16,$m)):(u(),f(q,{key:1},[w(t,Pa({class:"dark",image:e.image.dark},n.$attrs),null,16,["image"]),w(t,Pa({class:"light",image:e.image.light},n.$attrs),null,16,["image"])],64))],64)):H("",!0)}}});const uo=V(Rm,[["__scopeId","data-v-8e4dd84f"]]),Lm=["href"],Fm=z({__name:"VPNavBarTitle",setup(e){const{site:n,theme:a}=me(),{hasSidebar:t}=en();return(i,l)=>(u(),f("div",{class:de(["VPNavBarTitle",{"has-sidebar":b(t)}])},[x("a",{class:"title",href:b(n).base},[M(i.$slots,"nav-bar-title-before",{},void 0,!0),w(uo,{class:"logo",image:b(a).logo},null,8,["image"]),b(a).siteTitle?(u(),f(q,{key:0},[Re(te(b(a).siteTitle),1)],64)):b(a).siteTitle===void 0?(u(),f(q,{key:1},[Re(te(b(n).title),1)],64)):H("",!0),M(i.$slots,"nav-bar-title-after",{},void 0,!0)],8,Lm)],2))}});const Vm=V(Fm,[["__scopeId","data-v-d5925166"]]);const Tm={key:0,class:"VPNavBarSearch"},Im={type:"button",class:"DocSearch DocSearch-Button","aria-label":"Search"},zm={class:"DocSearch-Button-Container"},Am=x("svg",{class:"DocSearch-Search-Icon",width:"20",height:"20",viewBox:"0 0 20 20"},[x("path",{d:"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z",stroke:"currentColor",fill:"none","fill-rule":"evenodd","stroke-linecap":"round","stroke-linejoin":"round"})],-1),Nm={class:"DocSearch-Button-Placeholder"},Om=x("span",{class:"DocSearch-Button-Keys"},[x("kbd",{class:"DocSearch-Button-Key"}),x("kbd",{class:"DocSearch-Button-Key"},"K")],-1),Bm=z({__name:"VPNavBarSearch",setup(e){zr(o=>({"5943dbe8":i.value}));const n=()=>null,{theme:a}=me(),t=_e(!1),i=_e("'Meta'");Oe(()=>{if(!a.value.algolia)return;i.value=/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)?"'\u2318'":"'Ctrl'";const o=r=>{r.key==="k"&&(r.ctrlKey||r.metaKey)&&(r.preventDefault(),l(),c())},c=()=>{window.removeEventListener("keydown",o)};window.addEventListener("keydown",o),_n(c)});function l(){t.value||(t.value=!0)}return(o,c)=>{var r;return b(a).algolia?(u(),f("div",Tm,[t.value?(u(),W(b(n),{key:0})):(u(),f("div",{key:1,id:"docsearch",onClick:l},[x("button",Im,[x("span",zm,[Am,x("span",Nm,te(((r=b(a).algolia)==null?void 0:r.buttonText)||"Search"),1)]),Om])]))])):H("",!0)}}});const Hm={},Dm={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",height:"24px",viewBox:"0 0 24 24",width:"24px"},Gm=x("path",{d:"M0 0h24v24H0V0z",fill:"none"},null,-1),Um=x("path",{d:"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5H9z"},null,-1),Km=[Gm,Um];function qm(e,n){return u(),f("svg",Dm,Km)}const Wm=V(Hm,[["render",qm]]),Jm=z({__name:"VPLink",props:{href:null,noIcon:{type:Boolean}},setup(e){const n=e,a=oe(()=>n.href&&at.test(n.href));return(t,i)=>(u(),W(Jt(e.href?"a":"span"),{class:de(["VPLink",{link:e.href}]),href:e.href?b(za)(e.href):void 0,target:b(a)?"_blank":void 0,rel:b(a)?"noreferrer":void 0},{default:F(()=>[M(t.$slots,"default",{},void 0,!0),b(a)&&!e.noIcon?(u(),W(Wm,{key:0,class:"icon"})):H("",!0)]),_:3},8,["class","href","target","rel"]))}});const Yn=V(Jm,[["__scopeId","data-v-3c355974"]]),Ym=z({__name:"VPNavBarMenuLink",props:{item:null},setup(e){const{page:n}=me();return(a,t)=>(u(),W(Yn,{class:de({VPNavBarMenuLink:!0,active:b(Jn)(b(n).relativePath,e.item.activeMatch||e.item.link,!!e.item.activeMatch)}),href:e.item.link,noIcon:!0},{default:F(()=>[Re(te(e.item.text),1)]),_:1},8,["class","href"]))}});const Qm=V(Ym,[["__scopeId","data-v-47a2263e"]]),ni=_e();let bo=!1,bt=0;function Xm(e){const n=_e(!1);if(typeof window<"u"){!bo&&Zm(),bt++;const a=tn(ni,t=>{var i,l,o;t===e.el.value||((i=e.el.value)==null?void 0:i.contains(t))?(n.value=!0,(l=e.onFocus)==null||l.call(e)):(n.value=!1,(o=e.onBlur)==null||o.call(e))});_n(()=>{a(),bt--,bt||es()})}return Ht(n)}function Zm(){document.addEventListener("focusin",po),bo=!0,ni.value=document.activeElement}function es(){document.removeEventListener("focusin",po)}function po(){ni.value=document.activeElement}const ns={},as={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},ts=x("path",{d:"M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-6,6C12.5,15.9,12.3,16,12,16z"},null,-1),is=[ts];function ls(e,n){return u(),f("svg",as,is)}const fo=V(ns,[["render",ls]]),os={},cs={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},rs=x("circle",{cx:"12",cy:"12",r:"2"},null,-1),ms=x("circle",{cx:"19",cy:"12",r:"2"},null,-1),ss=x("circle",{cx:"5",cy:"12",r:"2"},null,-1),hs=[rs,ms,ss];function us(e,n){return u(),f("svg",cs,hs)}const ds=V(os,[["render",us]]),bs={class:"VPMenuLink"},ps=z({__name:"VPMenuLink",props:{item:null},setup(e){const{page:n}=me();return(a,t)=>(u(),f("div",bs,[w(Yn,{class:de({active:b(Jn)(b(n).relativePath,e.item.activeMatch||e.item.link)}),href:e.item.link},{default:F(()=>[Re(te(e.item.text),1)]),_:1},8,["class","href"])]))}});const tt=V(ps,[["__scopeId","data-v-e8e0fb1d"]]),fs={class:"VPMenuGroup"},_s={key:0,class:"title"},gs=z({__name:"VPMenuGroup",props:{text:null,items:null},setup(e){return(n,a)=>(u(),f("div",fs,[e.text?(u(),f("p",_s,te(e.text),1)):H("",!0),(u(!0),f(q,null,Ce(e.items,t=>(u(),f(q,null,["link"in t?(u(),W(tt,{key:0,item:t},null,8,["item"])):H("",!0)],64))),256))]))}});const xs=V(gs,[["__scopeId","data-v-9ca52130"]]),ks={class:"VPMenu"},vs={key:0,class:"items"},Es=z({__name:"VPMenu",props:{items:null},setup(e){return(n,a)=>(u(),f("div",ks,[e.items?(u(),f("div",vs,[(u(!0),f(q,null,Ce(e.items,t=>(u(),f(q,{key:t.text},["link"in t?(u(),W(tt,{key:0,item:t},null,8,["item"])):(u(),W(xs,{key:1,text:t.text,items:t.items},null,8,["text","items"]))],64))),128))])):H("",!0),M(n.$slots,"default",{},void 0,!0)]))}});const ys=V(Es,[["__scopeId","data-v-1c5d0cfc"]]),Cs=["aria-expanded","aria-label"],Ss={key:0,class:"text"},js={class:"menu"},Ps=z({__name:"VPFlyout",props:{icon:null,button:null,label:null,items:null},setup(e){const n=_e(!1),a=_e();Xm({el:a,onBlur:t});function t(){n.value=!1}return(i,l)=>(u(),f("div",{class:"VPFlyout",ref_key:"el",ref:a,onMouseenter:l[1]||(l[1]=o=>n.value=!0),onMouseleave:l[2]||(l[2]=o=>n.value=!1)},[x("button",{type:"button",class:"button","aria-haspopup":"true","aria-expanded":n.value,"aria-label":e.label,onClick:l[0]||(l[0]=o=>n.value=!n.value)},[e.button||e.icon?(u(),f("span",Ss,[e.icon?(u(),W(Jt(e.icon),{key:0,class:"option-icon"})):H("",!0),Re(" "+te(e.button)+" ",1),w(fo,{class:"text-icon"})])):(u(),W(ds,{key:1,class:"icon"}))],8,Cs),x("div",js,[w(ys,{items:e.items},{default:F(()=>[M(i.$slots,"default",{},void 0,!0)]),_:3},8,["items"])])],544))}});const ai=V(Ps,[["__scopeId","data-v-6ffb57d3"]]),ws=z({__name:"VPNavBarMenuGroup",props:{item:null},setup(e){const{page:n}=me();return(a,t)=>(u(),W(ai,{class:de({VPNavBarMenuGroup:!0,active:b(Jn)(b(n).relativePath,e.item.activeMatch,!!e.item.activeMatch)}),button:e.item.text,items:e.item.items},null,8,["class","button","items"]))}}),$s=e=>(Ke("data-v-f83db6ba"),e=e(),qe(),e),Ms={key:0,"aria-labelledby":"main-nav-aria-label",class:"VPNavBarMenu"},Rs=$s(()=>x("span",{id:"main-nav-aria-label",class:"visually-hidden"},"Main Navigation",-1)),Ls=z({__name:"VPNavBarMenu",setup(e){const{theme:n}=me();return(a,t)=>b(n).nav?(u(),f("nav",Ms,[Rs,(u(!0),f(q,null,Ce(b(n).nav,i=>(u(),f(q,{key:i.text},["link"in i?(u(),W(Qm,{key:0,item:i},null,8,["item"])):(u(),W(ws,{key:1,item:i},null,8,["item"]))],64))),128))])):H("",!0)}});const Fs=V(Ls,[["__scopeId","data-v-f83db6ba"]]),Vs={},Ts={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Is=x("path",{d:"M0 0h24v24H0z",fill:"none"},null,-1),zs=x("path",{d:" M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z ",class:"css-c4d79v"},null,-1),As=[Is,zs];function Ns(e,n){return u(),f("svg",Ts,As)}const _o=V(Vs,[["render",Ns]]),Os={class:"items"},Bs={class:"title"},Hs=z({__name:"VPNavBarTranslations",setup(e){const{theme:n}=me();return(a,t)=>b(n).localeLinks?(u(),W(ai,{key:0,class:"VPNavBarTranslations",icon:_o},{default:F(()=>[x("div",Os,[x("p",Bs,te(b(n).localeLinks.text),1),(u(!0),f(q,null,Ce(b(n).localeLinks.items,i=>(u(),W(tt,{key:i.link,item:i},null,8,["item"]))),128))])]),_:1})):H("",!0)}});const Ds=V(Hs,[["__scopeId","data-v-db824e91"]]);const Gs={},Us={class:"VPSwitch",type:"button",role:"switch"},Ks={class:"check"},qs={key:0,class:"icon"};function Ws(e,n){return u(),f("button",Us,[x("span",Ks,[e.$slots.default?(u(),f("span",qs,[M(e.$slots,"default",{},void 0,!0)])):H("",!0)])])}const Js=V(Gs,[["render",Ws],["__scopeId","data-v-086e8519"]]),Ys={},Qs={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Xs=cr('<path d="M12,18c-3.3,0-6-2.7-6-6s2.7-6,6-6s6,2.7,6,6S15.3,18,12,18zM12,8c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4c2.2,0,4-1.8,4-4C16,9.8,14.2,8,12,8z"></path><path d="M12,4c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1s1,0.4,1,1v2C13,3.6,12.6,4,12,4z"></path><path d="M12,24c-0.6,0-1-0.4-1-1v-2c0-0.6,0.4-1,1-1s1,0.4,1,1v2C13,23.6,12.6,24,12,24z"></path><path d="M5.6,6.6c-0.3,0-0.5-0.1-0.7-0.3L3.5,4.9c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l1.4,1.4c0.4,0.4,0.4,1,0,1.4C6.2,6.5,5.9,6.6,5.6,6.6z"></path><path d="M19.8,20.8c-0.3,0-0.5-0.1-0.7-0.3l-1.4-1.4c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l1.4,1.4c0.4,0.4,0.4,1,0,1.4C20.3,20.7,20,20.8,19.8,20.8z"></path><path d="M3,13H1c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0.6,0,1,0.4,1,1S3.6,13,3,13z"></path><path d="M23,13h-2c-0.6,0-1-0.4-1-1s0.4-1,1-1h2c0.6,0,1,0.4,1,1S23.6,13,23,13z"></path><path d="M4.2,20.8c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.4-1.4c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-1.4,1.4C4.7,20.7,4.5,20.8,4.2,20.8z"></path><path d="M18.4,6.6c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l1.4-1.4c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-1.4,1.4C18.9,6.5,18.6,6.6,18.4,6.6z"></path>',9),Zs=[Xs];function eh(e,n){return u(),f("svg",Qs,Zs)}const nh=V(Ys,[["render",eh]]),ah={},th={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},ih=x("path",{d:"M12.1,22c-0.3,0-0.6,0-0.9,0c-5.5-0.5-9.5-5.4-9-10.9c0.4-4.8,4.2-8.6,9-9c0.4,0,0.8,0.2,1,0.5c0.2,0.3,0.2,0.8-0.1,1.1c-2,2.7-1.4,6.4,1.3,8.4c2.1,1.6,5,1.6,7.1,0c0.3-0.2,0.7-0.3,1.1-0.1c0.3,0.2,0.5,0.6,0.5,1c-0.2,2.7-1.5,5.1-3.6,6.8C16.6,21.2,14.4,22,12.1,22zM9.3,4.4c-2.9,1-5,3.6-5.2,6.8c-0.4,4.4,2.8,8.3,7.2,8.7c2.1,0.2,4.2-0.4,5.8-1.8c1.1-0.9,1.9-2.1,2.4-3.4c-2.5,0.9-5.3,0.5-7.5-1.1C9.2,11.4,8.1,7.7,9.3,4.4z"},null,-1),lh=[ih];function oh(e,n){return u(),f("svg",th,lh)}const ch=V(ah,[["render",oh]]),rh=z({__name:"VPSwitchAppearance",setup(e){const n=_e(!1),a=typeof localStorage<"u"?t():()=>{};Oe(()=>{n.value=document.documentElement.classList.contains("dark")});function t(){const i=window.matchMedia("(prefers-color-scheme: dark)"),l=document.documentElement.classList;let o=localStorage.getItem(Wi)||"auto",c=o==="auto"?i.matches:o==="dark";i.onchange=d=>{o==="auto"&&h(c=d.matches)};function r(){h(c=!c),o=c?i.matches?"auto":"dark":i.matches?"light":"auto",localStorage.setItem(Wi,o)}function h(d){n.value=d,l[d?"add":"remove"]("dark")}return r}return(i,l)=>(u(),W(Js,{class:"VPSwitchAppearance","aria-label":"toggle dark mode","aria-checked":n.value,onClick:b(a)},{default:F(()=>[w(nh,{class:"sun"}),w(ch,{class:"moon"})]),_:1},8,["aria-checked","onClick"]))}});const ti=V(rh,[["__scopeId","data-v-1899cd41"]]),mh={key:0,class:"VPNavBarAppearance"},sh=z({__name:"VPNavBarAppearance",setup(e){const{site:n}=me();return(a,t)=>b(n).appearance?(u(),f("div",mh,[w(ti)])):H("",!0)}});const hh=V(sh,[["__scopeId","data-v-a3e7452b"]]),uh={discord:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Discord</title><path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.946 2.4189-2.1568 2.4189Z"/></svg>',facebook:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Facebook</title><path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/></svg>',github:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>GitHub</title><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg>',instagram:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Instagram</title><path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/></svg>',linkedin:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>LinkedIn</title><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>',slack:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Slack</title><path d="M5.042 15.165a2.528 2.528 0 0 1-2.52 2.523A2.528 2.528 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52v2.52zM6.313 15.165a2.527 2.527 0 0 1 2.521-2.52 2.527 2.527 0 0 1 2.521 2.52v6.313A2.528 2.528 0 0 1 8.834 24a2.528 2.528 0 0 1-2.521-2.522v-6.313zM8.834 5.042a2.528 2.528 0 0 1-2.521-2.52A2.528 2.528 0 0 1 8.834 0a2.528 2.528 0 0 1 2.521 2.522v2.52H8.834zM8.834 6.313a2.528 2.528 0 0 1 2.521 2.521 2.528 2.528 0 0 1-2.521 2.521H2.522A2.528 2.528 0 0 1 0 8.834a2.528 2.528 0 0 1 2.522-2.521h6.312zM18.956 8.834a2.528 2.528 0 0 1 2.522-2.521A2.528 2.528 0 0 1 24 8.834a2.528 2.528 0 0 1-2.522 2.521h-2.522V8.834zM17.688 8.834a2.528 2.528 0 0 1-2.523 2.521 2.527 2.527 0 0 1-2.52-2.521V2.522A2.527 2.527 0 0 1 15.165 0a2.528 2.528 0 0 1 2.523 2.522v6.312zM15.165 18.956a2.528 2.528 0 0 1 2.523 2.522A2.528 2.528 0 0 1 15.165 24a2.527 2.527 0 0 1-2.52-2.522v-2.522h2.52zM15.165 17.688a2.527 2.527 0 0 1-2.52-2.523 2.526 2.526 0 0 1 2.52-2.52h6.313A2.527 2.527 0 0 1 24 15.165a2.528 2.528 0 0 1-2.522 2.523h-6.313z"/></svg>',twitter:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Twitter</title><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>',youtube:'<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>YouTube</title><path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/></svg>'},dh=["href","innerHTML"],bh=z({__name:"VPSocialLink",props:{icon:null,link:null},setup(e){const n=e,a=oe(()=>typeof n.icon=="object"?n.icon.svg:uh[n.icon]);return(t,i)=>(u(),f("a",{class:"VPSocialLink",href:e.link,target:"_blank",rel:"noopener",innerHTML:b(a)},null,8,dh))}});const ph=V(bh,[["__scopeId","data-v-e57698f6"]]),fh={class:"VPSocialLinks"},_h=z({__name:"VPSocialLinks",props:{links:null},setup(e){return(n,a)=>(u(),f("div",fh,[(u(!0),f(q,null,Ce(e.links,({link:t,icon:i})=>(u(),W(ph,{key:t,icon:i,link:t},null,8,["icon","link"]))),128))]))}});const ii=V(_h,[["__scopeId","data-v-f6988cfb"]]),gh=z({__name:"VPNavBarSocialLinks",setup(e){const{theme:n}=me();return(a,t)=>b(n).socialLinks?(u(),W(ii,{key:0,class:"VPNavBarSocialLinks",links:b(n).socialLinks},null,8,["links"])):H("",!0)}});const xh=V(gh,[["__scopeId","data-v-738bef5a"]]),kh=e=>(Ke("data-v-e4361c82"),e=e(),qe(),e),vh={key:0,class:"group"},Eh={class:"trans-title"},yh={key:1,class:"group"},Ch={class:"item appearance"},Sh=kh(()=>x("p",{class:"label"},"Appearance",-1)),jh={class:"appearance-action"},Ph={key:2,class:"group"},wh={class:"item social-links"},$h=z({__name:"VPNavBarExtra",setup(e){const{site:n,theme:a}=me(),t=oe(()=>a.value.localeLinks||n.value.appearance||a.value.socialLinks);return(i,l)=>b(t)?(u(),W(ai,{key:0,class:"VPNavBarExtra",label:"extra navigation"},{default:F(()=>[b(a).localeLinks?(u(),f("div",vh,[x("p",Eh,te(b(a).localeLinks.text),1),(u(!0),f(q,null,Ce(b(a).localeLinks.items,o=>(u(),W(tt,{key:o.link,item:o},null,8,["item"]))),128))])):H("",!0),b(n).appearance?(u(),f("div",yh,[x("div",Ch,[Sh,x("div",jh,[w(ti)])])])):H("",!0),b(a).socialLinks?(u(),f("div",Ph,[x("div",wh,[w(ii,{class:"social-links-list",links:b(a).socialLinks},null,8,["links"])])])):H("",!0)]),_:1})):H("",!0)}});const Mh=V($h,[["__scopeId","data-v-e4361c82"]]),Rh=e=>(Ke("data-v-e5dd9c1c"),e=e(),qe(),e),Lh=["aria-expanded"],Fh=Rh(()=>x("span",{class:"container"},[x("span",{class:"top"}),x("span",{class:"middle"}),x("span",{class:"bottom"})],-1)),Vh=[Fh],Th=z({__name:"VPNavBarHamburger",props:{active:{type:Boolean}},emits:["click"],setup(e){return(n,a)=>(u(),f("button",{type:"button",class:de(["VPNavBarHamburger",{active:e.active}]),"aria-label":"mobile navigation","aria-expanded":e.active,"aria-controls":"VPNavScreen",onClick:a[0]||(a[0]=t=>n.$emit("click"))},Vh,10,Lh))}});const Ih=V(Th,[["__scopeId","data-v-e5dd9c1c"]]),zh={class:"container"},Ah={class:"content"},Nh=z({__name:"VPNavBar",props:{isScreenOpen:{type:Boolean}},emits:["toggle-screen"],setup(e){const{hasSidebar:n}=en();return(a,t)=>(u(),f("div",{class:de(["VPNavBar",{"has-sidebar":b(n)}])},[x("div",zh,[w(Vm,null,{"nav-bar-title-before":F(()=>[M(a.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":F(()=>[M(a.$slots,"nav-bar-title-after",{},void 0,!0)]),_:3}),x("div",Ah,[M(a.$slots,"nav-bar-content-before",{},void 0,!0),w(Bm,{class:"search"}),w(Fs,{class:"menu"}),w(Ds,{class:"translations"}),w(hh,{class:"appearance"}),w(xh,{class:"social-links"}),w(Mh,{class:"extra"}),M(a.$slots,"nav-bar-content-after",{},void 0,!0),w(Ih,{class:"hamburger",active:e.isScreenOpen,onClick:t[0]||(t[0]=i=>a.$emit("toggle-screen"))},null,8,["active"])])])],2))}});const Oh=V(Nh,[["__scopeId","data-v-6f1d18b5"]]);function Bh(e){if(Array.isArray(e)){for(var n=0,a=Array(e.length);n<e.length;n++)a[n]=e[n];return a}else return Array.from(e)}var li=!1;if(typeof window<"u"){var el={get passive(){li=!0}};window.addEventListener("testPassive",null,el),window.removeEventListener("testPassive",null,el)}var Aa=typeof window<"u"&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||window.navigator.platform==="MacIntel"&&window.navigator.maxTouchPoints>1),On=[],Na=!1,oi=-1,ta=void 0,wn=void 0,ia=void 0,go=function(n){return On.some(function(a){return!!(a.options.allowTouchMove&&a.options.allowTouchMove(n))})},Oa=function(n){var a=n||window.event;return go(a.target)||a.touches.length>1?!0:(a.preventDefault&&a.preventDefault(),!1)},Hh=function(n){if(ia===void 0){var a=!!n&&n.reserveScrollBarGap===!0,t=window.innerWidth-document.documentElement.clientWidth;if(a&&t>0){var i=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right"),10);ia=document.body.style.paddingRight,document.body.style.paddingRight=i+t+"px"}}ta===void 0&&(ta=document.body.style.overflow,document.body.style.overflow="hidden")},Dh=function(){ia!==void 0&&(document.body.style.paddingRight=ia,ia=void 0),ta!==void 0&&(document.body.style.overflow=ta,ta=void 0)},Gh=function(){return window.requestAnimationFrame(function(){if(wn===void 0){wn={position:document.body.style.position,top:document.body.style.top,left:document.body.style.left};var n=window,a=n.scrollY,t=n.scrollX,i=n.innerHeight;document.body.style.position="fixed",document.body.style.top=-a,document.body.style.left=-t,setTimeout(function(){return window.requestAnimationFrame(function(){var l=i-window.innerHeight;l&&a>=i&&(document.body.style.top=-(a+l))})},300)}})},Uh=function(){if(wn!==void 0){var n=-parseInt(document.body.style.top,10),a=-parseInt(document.body.style.left,10);document.body.style.position=wn.position,document.body.style.top=wn.top,document.body.style.left=wn.left,window.scrollTo(a,n),wn=void 0}},Kh=function(n){return n?n.scrollHeight-n.scrollTop<=n.clientHeight:!1},qh=function(n,a){var t=n.targetTouches[0].clientY-oi;return go(n.target)?!1:a&&a.scrollTop===0&&t>0||Kh(a)&&t<0?Oa(n):(n.stopPropagation(),!0)},Wh=function(n,a){if(!n){console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.");return}if(!On.some(function(i){return i.targetElement===n})){var t={targetElement:n,options:a||{}};On=[].concat(Bh(On),[t]),Aa?Gh():Hh(a),Aa&&(n.ontouchstart=function(i){i.targetTouches.length===1&&(oi=i.targetTouches[0].clientY)},n.ontouchmove=function(i){i.targetTouches.length===1&&qh(i,n)},Na||(document.addEventListener("touchmove",Oa,li?{passive:!1}:void 0),Na=!0))}},Jh=function(){Aa&&(On.forEach(function(n){n.targetElement.ontouchstart=null,n.targetElement.ontouchmove=null}),Na&&(document.removeEventListener("touchmove",Oa,li?{passive:!1}:void 0),Na=!1),oi=-1),Aa?Uh():Dh(),On=[]};const Yh=z({__name:"VPNavScreenMenuLink",props:{text:null,link:null},setup(e){const n=Xe("close-screen");return(a,t)=>(u(),W(Yn,{class:"VPNavScreenMenuLink",href:e.link,onClick:b(n)},{default:F(()=>[Re(te(e.text),1)]),_:1},8,["href","onClick"]))}});const Qh=V(Yh,[["__scopeId","data-v-b7098508"]]),Xh={},Zh={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},eu=x("path",{d:"M18.9,10.9h-6v-6c0-0.6-0.4-1-1-1s-1,0.4-1,1v6h-6c-0.6,0-1,0.4-1,1s0.4,1,1,1h6v6c0,0.6,0.4,1,1,1s1-0.4,1-1v-6h6c0.6,0,1-0.4,1-1S19.5,10.9,18.9,10.9z"},null,-1),nu=[eu];function au(e,n){return u(),f("svg",Zh,nu)}const tu=V(Xh,[["render",au]]),iu=z({__name:"VPNavScreenMenuGroupLink",props:{text:null,link:null},setup(e){const n=Xe("close-screen");return(a,t)=>(u(),W(Yn,{class:"VPNavScreenMenuGroupLink",href:e.link,onClick:b(n)},{default:F(()=>[Re(te(e.text),1)]),_:1},8,["href","onClick"]))}});const xo=V(iu,[["__scopeId","data-v-7f173864"]]),lu={class:"VPNavScreenMenuGroupSection"},ou={key:0,class:"title"},cu=z({__name:"VPNavScreenMenuGroupSection",props:{text:null,items:null},setup(e){return(n,a)=>(u(),f("div",lu,[e.text?(u(),f("p",ou,te(e.text),1)):H("",!0),(u(!0),f(q,null,Ce(e.items,t=>(u(),W(xo,{key:t.text,text:t.text,link:t.link},null,8,["text","link"]))),128))]))}});const ru=V(cu,[["__scopeId","data-v-7478538b"]]),mu=["aria-controls","aria-expanded"],su={class:"button-text"},hu=["id"],uu={key:1,class:"group"},du=z({__name:"VPNavScreenMenuGroup",props:{text:null,items:null},setup(e){const n=e,a=_e(!1),t=oe(()=>`NavScreenGroup-${n.text.replace(" ","-").toLowerCase()}`);function i(){a.value=!a.value}return(l,o)=>(u(),f("div",{class:de(["VPNavScreenMenuGroup",{open:a.value}])},[x("button",{class:"button","aria-controls":b(t),"aria-expanded":a.value,onClick:i},[x("span",su,te(e.text),1),w(tu,{class:"button-icon"})],8,mu),x("div",{id:b(t),class:"items"},[(u(!0),f(q,null,Ce(e.items,c=>(u(),f(q,{key:c.text},["link"in c?(u(),f("div",{key:c.text,class:"item"},[w(xo,{text:c.text,link:c.link},null,8,["text","link"])])):(u(),f("div",uu,[w(ru,{text:c.text,items:c.items},null,8,["text","items"])]))],64))),128))],8,hu)],2))}});const bu=V(du,[["__scopeId","data-v-5bc84358"]]),pu={key:0,class:"VPNavScreenMenu"},fu=z({__name:"VPNavScreenMenu",setup(e){const{theme:n}=me();return(a,t)=>b(n).nav?(u(),f("nav",pu,[(u(!0),f(q,null,Ce(b(n).nav,i=>(u(),f(q,{key:i.text},["link"in i?(u(),W(Qh,{key:0,text:i.text,link:i.link},null,8,["text","link"])):(u(),W(bu,{key:1,text:i.text||"",items:i.items},null,8,["text","items"]))],64))),128))])):H("",!0)}}),_u=e=>(Ke("data-v-7bc19822"),e=e(),qe(),e),gu={key:0,class:"VPNavScreenAppearance"},xu=_u(()=>x("p",{class:"text"},"Appearance",-1)),ku=z({__name:"VPNavScreenAppearance",setup(e){const{site:n}=me();return(a,t)=>b(n).appearance?(u(),f("div",gu,[xu,w(ti)])):H("",!0)}});const vu=V(ku,[["__scopeId","data-v-7bc19822"]]),Eu={class:"list"},yu=["href"],Cu=z({__name:"VPNavScreenTranslations",setup(e){const{theme:n}=me(),a=_e(!1);function t(){a.value=!a.value}return(i,l)=>b(n).localeLinks?(u(),f("div",{key:0,class:de(["VPNavScreenTranslations",{open:a.value}])},[x("button",{class:"title",onClick:t},[w(_o,{class:"icon lang"}),Re(" "+te(b(n).localeLinks.text)+" ",1),w(fo,{class:"icon chevron"})]),x("ul",Eu,[(u(!0),f(q,null,Ce(b(n).localeLinks.items,o=>(u(),f("li",{key:o.link,class:"item"},[x("a",{class:"link",href:o.link},te(o.text),9,yu)]))),128))])],2)):H("",!0)}});const Su=V(Cu,[["__scopeId","data-v-6bfcad30"]]),ju=z({__name:"VPNavScreenSocialLinks",setup(e){const{theme:n}=me();return(a,t)=>b(n).socialLinks?(u(),W(ii,{key:0,class:"VPNavScreenSocialLinks",links:b(n).socialLinks},null,8,["links"])):H("",!0)}}),Pu={class:"container"},wu=z({__name:"VPNavScreen",props:{open:{type:Boolean}},setup(e){const n=_e(null);function a(){Wh(n.value,{reserveScrollBarGap:!0})}function t(){Jh()}return(i,l)=>(u(),W(nt,{name:"fade",onEnter:a,onAfterLeave:t},{default:F(()=>[e.open?(u(),f("div",{key:0,class:"VPNavScreen",ref_key:"screen",ref:n},[x("div",Pu,[M(i.$slots,"nav-screen-content-before",{},void 0,!0),w(fu,{class:"menu"}),w(Su,{class:"translations"}),w(vu,{class:"appearance"}),w(ju,{class:"social-links"}),M(i.$slots,"nav-screen-content-after",{},void 0,!0)])],512)):H("",!0)]),_:3}))}});const $u=V(wu,[["__scopeId","data-v-3428b523"]]),Mu=z({__name:"VPNav",setup(e){const{isScreenOpen:n,closeScreen:a,toggleScreen:t}=wm(),{hasSidebar:i}=en();return Ya("close-screen",a),(l,o)=>(u(),f("header",{class:de(["VPNav",{"no-sidebar":!b(i)}])},[w(Oh,{"is-screen-open":b(n),onToggleScreen:b(t)},{"nav-bar-title-before":F(()=>[M(l.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":F(()=>[M(l.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":F(()=>[M(l.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":F(()=>[M(l.$slots,"nav-bar-content-after",{},void 0,!0)]),_:3},8,["is-screen-open","onToggleScreen"]),w($u,{open:b(n)},{"nav-screen-content-before":F(()=>[M(l.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":F(()=>[M(l.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3},8,["open"])],2))}});const Ru=V(Mu,[["__scopeId","data-v-a71a30f1"]]),Lu={},Fu={xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",viewBox:"0 0 24 24"},Vu=x("path",{d:"M17,11H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h14c0.6,0,1,0.4,1,1S17.6,11,17,11z"},null,-1),Tu=x("path",{d:"M21,7H3C2.4,7,2,6.6,2,6s0.4-1,1-1h18c0.6,0,1,0.4,1,1S21.6,7,21,7z"},null,-1),Iu=x("path",{d:"M21,15H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h18c0.6,0,1,0.4,1,1S21.6,15,21,15z"},null,-1),zu=x("path",{d:"M17,19H3c-0.6,0-1-0.4-1-1s0.4-1,1-1h14c0.6,0,1,0.4,1,1S17.6,19,17,19z"},null,-1),Au=[Vu,Tu,Iu,zu];function Nu(e,n){return u(),f("svg",Fu,Au)}const Ou=V(Lu,[["render",Nu]]),Bu=e=>(Ke("data-v-aac27d5e"),e=e(),qe(),e),Hu={key:0,class:"VPLocalNav"},Du=["aria-expanded"],Gu=Bu(()=>x("span",{class:"menu-text"},"Menu",-1)),Uu=z({__name:"VPLocalNav",props:{open:{type:Boolean}},emits:["open-menu"],setup(e){const{hasSidebar:n}=en();function a(){window.scrollTo({top:0,left:0,behavior:"smooth"})}return(t,i)=>b(n)?(u(),f("div",Hu,[x("button",{class:"menu","aria-expanded":e.open,"aria-controls":"VPSidebarNav",onClick:i[0]||(i[0]=l=>t.$emit("open-menu"))},[w(Ou,{class:"menu-icon"}),Gu],8,Du),x("a",{class:"top-link",href:"#",onClick:a}," Return to top ")])):H("",!0)}});const Ku=V(Uu,[["__scopeId","data-v-aac27d5e"]]),qu={},Wu={version:"1.1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},Ju=x("path",{d:"M19,2H5C3.3,2,2,3.3,2,5v14c0,1.7,1.3,3,3,3h14c1.7,0,3-1.3,3-3V5C22,3.3,20.7,2,19,2z M20,19c0,0.6-0.4,1-1,1H5c-0.6,0-1-0.4-1-1V5c0-0.6,0.4-1,1-1h14c0.6,0,1,0.4,1,1V19z"},null,-1),Yu=x("path",{d:"M16,11h-3V8c0-0.6-0.4-1-1-1s-1,0.4-1,1v3H8c-0.6,0-1,0.4-1,1s0.4,1,1,1h3v3c0,0.6,0.4,1,1,1s1-0.4,1-1v-3h3c0.6,0,1-0.4,1-1S16.6,11,16,11z"},null,-1),Qu=[Ju,Yu];function Xu(e,n){return u(),f("svg",Wu,Qu)}const Zu=V(qu,[["render",Xu]]),ed={},nd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ad=x("path",{d:"M19,2H5C3.3,2,2,3.3,2,5v14c0,1.7,1.3,3,3,3h14c1.7,0,3-1.3,3-3V5C22,3.3,20.7,2,19,2zM20,19c0,0.6-0.4,1-1,1H5c-0.6,0-1-0.4-1-1V5c0-0.6,0.4-1,1-1h14c0.6,0,1,0.4,1,1V19z"},null,-1),td=x("path",{d:"M16,11H8c-0.6,0-1,0.4-1,1s0.4,1,1,1h8c0.6,0,1-0.4,1-1S16.6,11,16,11z"},null,-1),id=[ad,td];function ld(e,n){return u(),f("svg",nd,id)}const od=V(ed,[["render",ld]]),cd=z({__name:"VPSidebarLink",props:{item:null,depth:{default:1}},setup(e){const{page:n,frontmatter:a}=me(),t=oe(()=>a.value.sidebarDepth||1/0),i=Xe("close-sidebar");return(l,o)=>{const c=on("VPSidebarLink",!0);return u(),f(q,null,[w(Yn,{class:de(["link",{active:b(Jn)(b(n).relativePath,e.item.link)}]),style:da({paddingLeft:16*(e.depth-1)+"px"}),href:e.item.link,onClick:b(i)},{default:F(()=>[x("span",{class:de(["link-text",{light:e.depth>1}])},te(e.item.text),3)]),_:1},8,["class","style","href","onClick"]),"items"in e.item&&e.depth<b(t)?(u(!0),f(q,{key:0},Ce(e.item.items,r=>(u(),W(c,{key:r.link,item:r,depth:e.depth+1},null,8,["item","depth"]))),128)):H("",!0)],64)}}});const rd=V(cd,[["__scopeId","data-v-2cfe069a"]]),md=["role"],sd={class:"title-text"},hd={class:"action"},ud={class:"items"},dd=z({__name:"VPSidebarGroup",props:{text:null,items:null,collapsible:{type:Boolean},collapsed:{type:Boolean}},setup(e){const n=e,a=_e(!1);Dn(()=>{a.value=!!(n.collapsible&&n.collapsed)});const{page:t}=me();Dn(()=>{n.items.some(l=>Jn(t.value.relativePath,l.link))&&(a.value=!1)});function i(){n.collapsible&&(a.value=!a.value)}return(l,o)=>(u(),f("section",{class:de(["VPSidebarGroup",{collapsible:e.collapsible,collapsed:a.value}])},[e.text?(u(),f("div",{key:0,class:"title",role:e.collapsible?"button":void 0,onClick:i},[x("h2",sd,te(e.text),1),x("div",hd,[w(od,{class:"icon minus"}),w(Zu,{class:"icon plus"})])],8,md)):H("",!0),x("div",ud,[(u(!0),f(q,null,Ce(e.items,c=>(u(),W(rd,{key:c.link,item:c},null,8,["item"]))),128))])],2))}});const bd=V(dd,[["__scopeId","data-v-35f99ef5"]]),pd=e=>(Ke("data-v-f332cb62"),e=e(),qe(),e),fd={class:"nav",id:"VPSidebarNav","aria-labelledby":"sidebar-aria-label",tabindex:"-1"},_d=pd(()=>x("span",{class:"visually-hidden",id:"sidebar-aria-label"}," Sidebar Navigation ",-1)),gd=z({__name:"VPSidebar",props:{open:{type:Boolean}},setup(e){const n=e,{sidebar:a,hasSidebar:t}=en();let i=_e(null);return Tl(async()=>{var l;n.open&&(await qa(),(l=i.value)==null||l.focus())}),(l,o)=>b(t)?(u(),f("aside",{key:0,class:de(["VPSidebar",{open:e.open}]),ref_key:"navEl",ref:i,onClick:o[0]||(o[0]=Ur(()=>{},["stop"]))},[x("nav",fd,[_d,(u(!0),f(q,null,Ce(b(a),c=>(u(),f("div",{key:c.text,class:"group"},[w(bd,{text:c.text,items:c.items,collapsible:c.collapsible,collapsed:c.collapsed},null,8,["text","items","collapsible","collapsed"])]))),128))])],2)):H("",!0)}});const xd=V(gd,[["__scopeId","data-v-f332cb62"]]),kd={},vd={class:"VPPage"};function Ed(e,n){const a=on("Content");return u(),f("div",vd,[w(a)])}const yd=V(kd,[["render",Ed]]),Cd=z({__name:"VPButton",props:{tag:null,size:null,theme:null,text:null,href:null},setup(e){const n=e,a=oe(()=>{var l,o;return[(l=n.size)!=null?l:"medium",(o=n.theme)!=null?o:"brand"]}),t=oe(()=>n.href&&at.test(n.href)),i=oe(()=>n.tag?n.tag:n.href?"a":"button");return(l,o)=>(u(),W(Jt(b(i)),{class:de(["VPButton",b(a)]),href:e.href?b(za)(e.href):void 0,target:b(t)?"_blank":void 0,rel:b(t)?"noreferrer":void 0},{default:F(()=>[Re(te(e.text),1)]),_:1},8,["class","href","target","rel"]))}});const Sd=V(Cd,[["__scopeId","data-v-53dbb8eb"]]),jd=e=>(Ke("data-v-923ba72e"),e=e(),qe(),e),Pd={class:"container"},wd={class:"main"},$d={key:0,class:"name"},Md={class:"clip"},Rd={key:1,class:"text"},Ld={key:2,class:"tagline"},Fd={key:3,class:"actions"},Vd={key:0,class:"image"},Td={class:"image-container"},Id=jd(()=>x("div",{class:"image-bg"},null,-1)),zd=z({__name:"VPHero",props:{name:null,text:null,tagline:null,image:null,actions:null},setup(e){return(n,a)=>(u(),f("div",{class:de(["VPHero",{"has-image":e.image}])},[x("div",Pd,[x("div",wd,[e.name?(u(),f("h1",$d,[x("span",Md,te(e.name),1)])):H("",!0),e.text?(u(),f("p",Rd,te(e.text),1)):H("",!0),e.tagline?(u(),f("p",Ld,te(e.tagline),1)):H("",!0),e.actions?(u(),f("div",Fd,[(u(!0),f(q,null,Ce(e.actions,t=>(u(),f("div",{key:t.link,class:"action"},[w(Sd,{tag:"a",size:"medium",theme:t.theme,text:t.text,href:t.link},null,8,["theme","text","href"])]))),128))])):H("",!0)]),e.image?(u(),f("div",Vd,[x("div",Td,[Id,w(uo,{class:"image-src",image:e.image},null,8,["image"])])])):H("",!0)])],2))}});const Ad=V(zd,[["__scopeId","data-v-923ba72e"]]),Nd=z({__name:"VPHomeHero",setup(e){const{frontmatter:n}=me();return(a,t)=>b(n).hero?(u(),W(Ad,{key:0,class:"VPHomeHero",name:b(n).hero.name,text:b(n).hero.text,tagline:b(n).hero.tagline,image:b(n).hero.image,actions:b(n).hero.actions},null,8,["name","text","tagline","image","actions"])):H("",!0)}}),Od={class:"VPFeature"},Bd={key:0,class:"icon"},Hd={class:"title"},Dd={class:"details"},Gd=z({__name:"VPFeature",props:{icon:null,title:null,details:null},setup(e){return(n,a)=>(u(),f("article",Od,[e.icon?(u(),f("div",Bd,te(e.icon),1)):H("",!0),x("h2",Hd,te(e.title),1),x("p",Dd,te(e.details),1)]))}});const Ud=V(Gd,[["__scopeId","data-v-d99b2f77"]]),Kd={key:0,class:"VPFeatures"},qd={class:"container"},Wd={class:"items"},Jd=z({__name:"VPFeatures",props:{features:null},setup(e){const n=e,a=oe(()=>{const t=n.features.length;if(t){if(t===2)return"grid-2";if(t===3)return"grid-3";if(t%3===0)return"grid-6";if(t%2===0)return"grid-4"}else return});return(t,i)=>e.features?(u(),f("div",Kd,[x("div",qd,[x("div",Wd,[(u(!0),f(q,null,Ce(e.features,l=>(u(),f("div",{key:l.title,class:de(["item",[b(a)]])},[w(Ud,{icon:l.icon,title:l.title,details:l.details},null,8,["icon","title","details"])],2))),128))])])])):H("",!0)}});const Yd=V(Jd,[["__scopeId","data-v-6a6451ec"]]),Qd=z({__name:"VPHomeFeatures",setup(e){const{frontmatter:n}=me();return(a,t)=>b(n).features?(u(),W(Yd,{key:0,class:"VPHomeFeatures",features:b(n).features},null,8,["features"])):H("",!0)}}),Xd={class:"VPHome"},Zd=z({__name:"VPHome",setup(e){return(n,a)=>{const t=on("Content");return u(),f("div",Xd,[M(n.$slots,"home-hero-before",{},void 0,!0),w(Nd),M(n.$slots,"home-hero-after",{},void 0,!0),M(n.$slots,"home-features-before",{},void 0,!0),w(Qd),M(n.$slots,"home-features-after",{},void 0,!0),w(t)])}}});const eb=V(Zd,[["__scopeId","data-v-1db23833"]]);var nl;const pa=typeof window<"u";pa&&((nl=window==null?void 0:window.navigator)==null?void 0:nl.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function nb(e){return e}function ab(e){return Ao()?(No(e),!0):!1}function tb(e){return typeof e=="function"?oe(e):_e(e)}function ib(e,n=!0){Zt()?Oe(e):n?e():qa(e)}const lb=pa?window:void 0;pa&&window.document;pa&&window.navigator;pa&&window.location;function ob(e,n=!1){const a=_e(),t=()=>a.value=Boolean(e());return t(),ib(t,n),a}function al(e,n={}){const{window:a=lb}=n,t=ob(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let i;const l=_e(!1),o=()=>{!i||("removeEventListener"in i?i.removeEventListener("change",c):i.removeListener(c))},c=()=>{!t.value||(o(),i=a.matchMedia(tb(e).value),l.value=i.matches,"addEventListener"in i?i.addEventListener("change",c):i.addListener(c))};return Dn(c),ab(()=>o()),l}const Mt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Rt="__vueuse_ssr_handlers__";Mt[Rt]=Mt[Rt]||{};Mt[Rt];var tl;(function(e){e.UP="UP",e.RIGHT="RIGHT",e.DOWN="DOWN",e.LEFT="LEFT",e.NONE="NONE"})(tl||(tl={}));var cb=Object.defineProperty,il=Object.getOwnPropertySymbols,rb=Object.prototype.hasOwnProperty,mb=Object.prototype.propertyIsEnumerable,ll=(e,n,a)=>n in e?cb(e,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[n]=a,sb=(e,n)=>{for(var a in n||(n={}))rb.call(n,a)&&ll(e,a,n[a]);if(il)for(var a of il(n))mb.call(n,a)&&ll(e,a,n[a]);return e};const hb={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};sb({linear:nb},hb);function ub(){const{hasSidebar:e}=en(),n=al("(min-width: 960px)"),a=al("(min-width: 1280px)");return{isAsideEnabled:oe(()=>!a.value&&!n.value?!1:e.value?a.value:n.value)}}const db=71;function bb(e){if(e===!1)return[];let n=[];return document.querySelectorAll("h2, h3, h4, h5, h6").forEach(a=>{a.textContent&&a.id&&n.push({level:Number(a.tagName[1]),title:a.innerText.replace(/\s+#\s*$/,""),link:`#${a.id}`})}),pb(n,e)}function pb(e,n=2){return fb(e,typeof n=="number"?[n,n]:n==="deep"?[2,6]:n)}function fb(e,n){const a=[];return e=e.map(t=>({...t})),e.forEach((t,i)=>{t.level>=n[0]&&t.level<=n[1]&&_b(i,e,n)&&a.push(t)}),a}function _b(e,n,a){if(e===0)return!0;const t=n[e];for(let i=e-1;i>=0;i--){const l=n[i];if(l.level<t.level&&l.level>=a[0]&&l.level<=a[1])return l.children==null&&(l.children=[]),l.children.push(t),!1}return!0}function gb(e,n){const{isAsideEnabled:a}=ub(),t=km(l,100);let i=null;Oe(()=>{requestAnimationFrame(l),window.addEventListener("scroll",t)}),qt(()=>{o(location.hash)}),_n(()=>{window.removeEventListener("scroll",t)});function l(){if(!a.value)return;const c=[].slice.call(e.value.querySelectorAll(".outline-link")),r=[].slice.call(document.querySelectorAll(".content .header-anchor")).filter(j=>c.some(D=>D.hash===j.hash&&j.offsetParent!==null)),h=window.scrollY,d=window.innerHeight,_=document.body.offsetHeight,E=Math.abs(h+d-_)<1;if(r.length&&E){o(r[r.length-1].hash);return}for(let j=0;j<r.length;j++){const D=r[j],A=r[j+1],[Q,g]=xb(j,D,A);if(Q){o(g);return}}}function o(c){i&&i.classList.remove("active"),c!==null&&(i=e.value.querySelector(`a[href="${decodeURIComponent(c)}"]`));const r=i;r?(r.classList.add("active"),n.value.style.top=r.offsetTop+33+"px",n.value.style.opacity="1"):(n.value.style.top="33px",n.value.style.opacity="0")}}function ol(e){return e.parentElement.offsetTop-db}function xb(e,n,a){const t=window.scrollY;return e===0&&t===0?[!0,null]:t<ol(n)?[!1,null]:!a||t<ol(a)?[!0,n.hash]:[!1,null]}const kb=["href"],vb=z({__name:"VPDocAsideOutlineItem",props:{headers:null,onClick:null,root:{type:Boolean}},setup(e){return(n,a)=>{const t=on("VPDocAsideOutlineItem",!0);return u(),f("ul",{class:de(e.root?"root":"nested")},[(u(!0),f(q,null,Ce(e.headers,({children:i,link:l,title:o})=>(u(),f("li",null,[x("a",{class:"outline-link",href:l,onClick:a[0]||(a[0]=(...c)=>e.onClick&&e.onClick(...c))},te(o),9,kb),i!=null&&i.length?(u(),W(t,{key:0,headers:i,onClick:e.onClick},null,8,["headers","onClick"])):H("",!0)]))),256))],2)}}});const Eb=V(vb,[["__scopeId","data-v-1188541a"]]),yb=e=>(Ke("data-v-2865c0b0"),e=e(),qe(),e),Cb={class:"content"},Sb={class:"outline-title"},jb={"aria-labelledby":"doc-outline-aria-label"},Pb=yb(()=>x("span",{class:"visually-hidden",id:"doc-outline-aria-label"}," Table of Contents for current page ",-1)),wb=z({__name:"VPDocAsideOutline",setup(e){const{frontmatter:n,theme:a}=me(),t=oe(()=>{var d;return(d=n.value.outline)!=null?d:a.value.outline}),i=Xe("onContentUpdated");i.value=()=>{l.value=bb(t.value)};const l=_e([]),o=oe(()=>l.value.length>0),c=_e(),r=_e();gb(c,r);function h({target:d}){const _="#"+d.href.split("#")[1],E=document.querySelector(decodeURIComponent(_));E==null||E.focus()}return(d,_)=>(u(),f("div",{class:de(["VPDocAsideOutline",{"has-outline":b(o)}]),ref_key:"container",ref:c},[x("div",Cb,[x("div",{class:"outline-marker",ref_key:"marker",ref:r},null,512),x("div",Sb,te(b(a).outlineTitle||"On this page"),1),x("nav",jb,[Pb,w(Eb,{headers:l.value,root:!0,onClick:h},null,8,["headers"])])])],2))}});const $b=V(wb,[["__scopeId","data-v-2865c0b0"]]),Mb={class:"VPDocAsideCarbonAds"},Rb=z({__name:"VPDocAsideCarbonAds",setup(e){const n=()=>null;return(a,t)=>(u(),f("div",Mb,[w(b(n))]))}}),Lb=e=>(Ke("data-v-afc4c1a1"),e=e(),qe(),e),Fb={class:"VPDocAside"},Vb=Lb(()=>x("div",{class:"spacer"},null,-1)),Tb=z({__name:"VPDocAside",setup(e){const{theme:n}=me();return(a,t)=>(u(),f("div",Fb,[M(a.$slots,"aside-top",{},void 0,!0),M(a.$slots,"aside-outline-before",{},void 0,!0),w($b),M(a.$slots,"aside-outline-after",{},void 0,!0),Vb,M(a.$slots,"aside-ads-before",{},void 0,!0),b(n).carbonAds?(u(),W(Rb,{key:0})):H("",!0),M(a.$slots,"aside-ads-after",{},void 0,!0),M(a.$slots,"aside-bottom",{},void 0,!0)]))}});const Ib=V(Tb,[["__scopeId","data-v-afc4c1a1"]]);function zb(){const{theme:e,page:n}=me();return oe(()=>{const{text:a="Edit this page",pattern:t}=e.value.editLink||{},{relativePath:i}=n.value;return{url:t.replace(/:path/g,i),text:a}})}function Ab(){const{page:e,theme:n,frontmatter:a}=me();return oe(()=>{const t=ho(n.value.sidebar,e.value.relativePath),i=vm(t),l=i.findIndex(o=>Jn(e.value.relativePath,o.link));return{prev:a.value.prev?{...i[l-1],text:a.value.prev}:i[l-1],next:a.value.next?{...i[l+1],text:a.value.next}:i[l+1]}})}const Nb={},Ob={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},Bb=x("path",{d:"M18,23H4c-1.7,0-3-1.3-3-3V6c0-1.7,1.3-3,3-3h7c0.6,0,1,0.4,1,1s-0.4,1-1,1H4C3.4,5,3,5.4,3,6v14c0,0.6,0.4,1,1,1h14c0.6,0,1-0.4,1-1v-7c0-0.6,0.4-1,1-1s1,0.4,1,1v7C21,21.7,19.7,23,18,23z"},null,-1),Hb=x("path",{d:"M8,17c-0.3,0-0.5-0.1-0.7-0.3C7,16.5,6.9,16.1,7,15.8l1-4c0-0.2,0.1-0.3,0.3-0.5l9.5-9.5c1.2-1.2,3.2-1.2,4.4,0c1.2,1.2,1.2,3.2,0,4.4l-9.5,9.5c-0.1,0.1-0.3,0.2-0.5,0.3l-4,1C8.2,17,8.1,17,8,17zM9.9,12.5l-0.5,2.1l2.1-0.5l9.3-9.3c0.4-0.4,0.4-1.1,0-1.6c-0.4-0.4-1.2-0.4-1.6,0l0,0L9.9,12.5z M18.5,2.5L18.5,2.5L18.5,2.5z"},null,-1),Db=[Bb,Hb];function Gb(e,n){return u(),f("svg",Ob,Db)}const Ub=V(Nb,[["render",Gb]]),Kb={class:"VPLastUpdated"},qb=["datatime"],Wb=z({__name:"VPDocFooterLastUpdated",setup(e){const{theme:n,page:a}=me(),t=oe(()=>new Date(a.value.lastUpdated)),i=oe(()=>t.value.toISOString()),l=_e("");return Oe(()=>{Dn(()=>{l.value=t.value.toLocaleString(window.navigator.language)})}),(o,c)=>{var r;return u(),f("p",Kb,[Re(te((r=b(n).lastUpdatedText)!=null?r:"Last updated")+": ",1),x("time",{datatime:b(i)},te(l.value),9,qb)])}}});const Jb=V(Wb,[["__scopeId","data-v-f7d51a9c"]]),Yb={key:0,class:"VPDocFooter"},Qb={key:0,class:"edit-info"},Xb={key:0,class:"edit-link"},Zb={key:1,class:"last-updated"},ep={key:1,class:"prev-next"},np={class:"pager"},ap=["href"],tp={class:"desc"},ip={class:"title"},lp=["href"],op={class:"desc"},cp={class:"title"},rp=z({__name:"VPDocFooter",setup(e){const{theme:n,page:a,frontmatter:t}=me(),i=zb(),l=Ab(),o=oe(()=>n.value.editLink&&t.value.editLink!==!1),c=oe(()=>a.value.lastUpdated&&t.value.lastUpdated!==!1),r=oe(()=>o.value||c.value||l.value.prev||l.value.next);return(h,d)=>{var _,E,j,D;return b(r)?(u(),f("footer",Yb,[b(o)||b(c)?(u(),f("div",Qb,[b(o)?(u(),f("div",Xb,[w(Yn,{class:"edit-link-button",href:b(i).url,"no-icon":!0},{default:F(()=>[w(Ub,{class:"edit-link-icon"}),Re(" "+te(b(i).text),1)]),_:1},8,["href"])])):H("",!0),b(c)?(u(),f("div",Zb,[w(Jb)])):H("",!0)])):H("",!0),b(l).prev||b(l).next?(u(),f("div",ep,[x("div",np,[b(l).prev?(u(),f("a",{key:0,class:"pager-link prev",href:b(za)(b(l).prev.link)},[x("span",tp,te((E=(_=b(n).docFooter)==null?void 0:_.prev)!=null?E:"Previous page"),1),x("span",ip,te(b(l).prev.text),1)],8,ap)):H("",!0)]),x("div",{class:de(["pager",{"has-prev":b(l).prev}])},[b(l).next?(u(),f("a",{key:0,class:"pager-link next",href:b(za)(b(l).next.link)},[x("span",op,te((D=(j=b(n).docFooter)==null?void 0:j.next)!=null?D:"Next page"),1),x("span",cp,te(b(l).next.text),1)],8,lp)):H("",!0)],2)])):H("",!0)])):H("",!0)}}});const mp=V(rp,[["__scopeId","data-v-a54a85bd"]]),sp=e=>(Ke("data-v-37ebe389"),e=e(),qe(),e),hp={class:"container"},up={key:0,class:"aside"},dp=sp(()=>x("div",{class:"aside-curtain"},null,-1)),bp={class:"aside-container"},pp={class:"aside-content"},fp={class:"content"},_p={class:"content-container"},gp={class:"main"},xp=z({__name:"VPDoc",setup(e){const n=gn(),{hasSidebar:a,hasAside:t}=en(),i=oe(()=>n.path.replace(/[./]+/g,"_").replace(/_html$/,"")),l=_e();return Ya("onContentUpdated",l),(o,c)=>{const r=on("Content");return u(),f("div",{class:de(["VPDoc",{"has-sidebar":b(a),"has-aside":b(t)}])},[x("div",hp,[b(t)?(u(),f("div",up,[dp,x("div",bp,[x("div",pp,[w(Ib,null,{"aside-top":F(()=>[M(o.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":F(()=>[M(o.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":F(()=>[M(o.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":F(()=>[M(o.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":F(()=>[M(o.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":F(()=>[M(o.$slots,"aside-ads-after",{},void 0,!0)]),_:3})])])])):H("",!0),x("div",fp,[x("div",_p,[M(o.$slots,"doc-before",{},void 0,!0),x("main",gp,[w(r,{class:de(["vp-doc",b(i)]),onContentUpdated:l.value},null,8,["class","onContentUpdated"])]),M(o.$slots,"doc-footer-before",{},void 0,!0),w(mp),M(o.$slots,"doc-after",{},void 0,!0)])])])],2)}}});const kp=V(xp,[["__scopeId","data-v-37ebe389"]]),vp=z({__name:"VPContent",setup(e){const n=gn(),{frontmatter:a}=me(),{hasSidebar:t}=en(),i=Xe("NotFound");return(l,o)=>(u(),f("div",{class:de(["VPContent",{"has-sidebar":b(t),"is-home":b(a).layout==="home"}]),id:"VPContent"},[b(n).component===b(i)?(u(),W(b(i),{key:0})):b(a).layout==="page"?(u(),W(yd,{key:1})):b(a).layout==="home"?(u(),W(eb,{key:2},{"home-hero-before":F(()=>[M(l.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-after":F(()=>[M(l.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":F(()=>[M(l.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":F(()=>[M(l.$slots,"home-features-after",{},void 0,!0)]),_:3})):(u(),W(kp,{key:3},{"doc-footer-before":F(()=>[M(l.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":F(()=>[M(l.$slots,"doc-before",{},void 0,!0)]),"doc-after":F(()=>[M(l.$slots,"doc-after",{},void 0,!0)]),"aside-top":F(()=>[M(l.$slots,"aside-top",{},void 0,!0)]),"aside-outline-before":F(()=>[M(l.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":F(()=>[M(l.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":F(()=>[M(l.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":F(()=>[M(l.$slots,"aside-ads-after",{},void 0,!0)]),"aside-bottom":F(()=>[M(l.$slots,"aside-bottom",{},void 0,!0)]),_:3}))],2))}});const Ep=V(vp,[["__scopeId","data-v-c95df128"]]),yp={class:"container"},Cp=["innerHTML"],Sp=["innerHTML"],jp=z({__name:"VPFooter",setup(e){const{theme:n}=me(),{hasSidebar:a}=en();return(t,i)=>b(n).footer?(u(),f("footer",{key:0,class:de(["VPFooter",{"has-sidebar":b(a)}])},[x("div",yp,[b(n).footer.message?(u(),f("p",{key:0,class:"message",innerHTML:b(n).footer.message},null,8,Cp)):H("",!0),b(n).footer.copyright?(u(),f("p",{key:1,class:"copyright",innerHTML:b(n).footer.copyright},null,8,Sp)):H("",!0)])],2)):H("",!0)}});const Pp=V(jp,[["__scopeId","data-v-9f24cc86"]]),wp={key:0,class:"Layout"},$p=z({__name:"Layout",setup(e){const{isOpen:n,open:a,close:t}=en(),i=gn();tn(()=>i.path,t),Em(n,t),Ya("close-sidebar",t);const{frontmatter:l}=me();return(o,c)=>{const r=on("Content");return b(l).layout!==!1?(u(),f("div",wp,[M(o.$slots,"layout-top",{},void 0,!0),w(Cm),w(Pm,{class:"backdrop",show:b(n),onClick:b(t)},null,8,["show","onClick"]),w(Ru,null,{"nav-bar-title-before":F(()=>[M(o.$slots,"nav-bar-title-before",{},void 0,!0)]),"nav-bar-title-after":F(()=>[M(o.$slots,"nav-bar-title-after",{},void 0,!0)]),"nav-bar-content-before":F(()=>[M(o.$slots,"nav-bar-content-before",{},void 0,!0)]),"nav-bar-content-after":F(()=>[M(o.$slots,"nav-bar-content-after",{},void 0,!0)]),"nav-screen-content-before":F(()=>[M(o.$slots,"nav-screen-content-before",{},void 0,!0)]),"nav-screen-content-after":F(()=>[M(o.$slots,"nav-screen-content-after",{},void 0,!0)]),_:3}),w(Ku,{open:b(n),onOpenMenu:b(a)},null,8,["open","onOpenMenu"]),w(xd,{open:b(n)},null,8,["open"]),w(Ep,null,{"home-hero-before":F(()=>[M(o.$slots,"home-hero-before",{},void 0,!0)]),"home-hero-after":F(()=>[M(o.$slots,"home-hero-after",{},void 0,!0)]),"home-features-before":F(()=>[M(o.$slots,"home-features-before",{},void 0,!0)]),"home-features-after":F(()=>[M(o.$slots,"home-features-after",{},void 0,!0)]),"doc-footer-before":F(()=>[M(o.$slots,"doc-footer-before",{},void 0,!0)]),"doc-before":F(()=>[M(o.$slots,"doc-before",{},void 0,!0)]),"doc-after":F(()=>[M(o.$slots,"doc-after",{},void 0,!0)]),"aside-top":F(()=>[M(o.$slots,"aside-top",{},void 0,!0)]),"aside-bottom":F(()=>[M(o.$slots,"aside-bottom",{},void 0,!0)]),"aside-outline-before":F(()=>[M(o.$slots,"aside-outline-before",{},void 0,!0)]),"aside-outline-after":F(()=>[M(o.$slots,"aside-outline-after",{},void 0,!0)]),"aside-ads-before":F(()=>[M(o.$slots,"aside-ads-before",{},void 0,!0)]),"aside-ads-after":F(()=>[M(o.$slots,"aside-ads-after",{},void 0,!0)]),_:3}),w(Pp),M(o.$slots,"layout-bottom",{},void 0,!0)])):(u(),W(r,{key:1}))}}});const Mp=V($p,[["__scopeId","data-v-c6a644e1"]]),it=e=>(Ke("data-v-95656537"),e=e(),qe(),e),Rp={class:"NotFound"},Lp=it(()=>x("p",{class:"code"},"404",-1)),Fp=it(()=>x("h1",{class:"title"},"PAGE NOT FOUND",-1)),Vp=it(()=>x("div",{class:"divider"},null,-1)),Tp=it(()=>x("blockquote",{class:"quote"}," But if you don't change your direction, and if you keep looking, you may end up where you are heading. ",-1)),Ip={class:"action"},zp=["href"],Ap=z({__name:"NotFound",setup(e){const{site:n}=me();return(a,t)=>(u(),f("div",Rp,[Lp,Fp,Vp,Tp,x("div",Ip,[x("a",{class:"link",href:b(n).base,"aria-label":"go to home"}," Take me home ",8,zp)])]))}});const Np=V(Ap,[["__scopeId","data-v-95656537"]]);const Op={Layout:Mp,NotFound:Np};const Bp={props:["items"]};function Hp(e,n,a,t,i,l){const o=on("Pydoc"),c=on("tree",!0);return u(),f("ul",null,[(u(!0),f(q,null,Ce(a.items,r=>(u(),f("li",null,[w(o,{caption:r.id},{default:F(()=>[Re(te(r.path),1)]),_:2},1032,["caption"]),r.children&&r.children.length>0?(u(),W(c,{key:0,items:r.children},null,8,["items"])):H("",!0)]))),256))])}const Dp=V(Bp,[["render",Hp]]),Gp=JSON.parse('{"machinable.Element.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Element.as_json"}, "machinable.Element.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Element.clone"}, "machinable.Element.collect": {"kind": "routine", "realname": "collect", "name": "machinable", "path": "machinable.Element.collect"}, "machinable.Element.find": {"kind": "routine", "realname": "find", "name": "machinable", "path": "machinable.Element.find"}, "machinable.Element.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable", "path": "machinable.Element.find_by_version"}, "machinable.Element.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable", "path": "machinable.Element.find_latest"}, "machinable.Element.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable", "path": "machinable.Element.find_many"}, "machinable.Element.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable", "path": "machinable.Element.from_json"}, "machinable.Element.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable", "path": "machinable.Element.from_model"}, "machinable.Element.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable", "path": "machinable.Element.from_storage"}, "machinable.Element.instance": {"kind": "routine", "realname": "instance", "name": "machinable", "path": "machinable.Element.instance"}, "machinable.Element.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Element.is_mounted"}, "machinable.Element.make": {"kind": "routine", "realname": "make", "name": "machinable", "path": "machinable.Element.make"}, "machinable.Element.model": {"kind": "routine", "realname": "model", "name": "machinable", "path": "machinable.Element.model"}, "machinable.Element.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Element.mount"}, "machinable.Element.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Element.on_before_configure"}, "machinable.Element.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Element.on_configure"}, "machinable.Element.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Element.on_instantiate"}, "machinable.Element.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Element.serialize"}, "machinable.Element.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable", "path": "machinable.Element.set_default"}, "machinable.Element.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Element.set_model"}, "machinable.Element.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable", "path": "machinable.Element.singleton"}, "machinable.Element.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable", "path": "machinable.Element.unserialize"}, "machinable.Element": {"kind": "class", "realname": "Element", "name": "machinable", "path": "machinable.Element", "parents": ["machinable.utils.Jsonable"]}, "machinable.Execution.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Execution.as_json"}, "machinable.Execution.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable", "path": "machinable.Execution.canonicalize_resources"}, "machinable.Execution.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Execution.clone"}, "machinable.Execution.collect": {"kind": "routine", "realname": "collect", "name": "machinable", "path": "machinable.Execution.collect"}, "machinable.Execution.commit": {"kind": "routine", "realname": "commit", "name": "machinable", "path": "machinable.Execution.commit"}, "machinable.Execution.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable", "path": "machinable.Execution.compute_resources"}, "machinable.Execution.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable", "path": "machinable.Execution.default_resources"}, "machinable.Execution.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable", "path": "machinable.Execution.dispatch"}, "machinable.Execution.find": {"kind": "routine", "realname": "find", "name": "machinable", "path": "machinable.Execution.find"}, "machinable.Execution.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable", "path": "machinable.Execution.find_by_version"}, "machinable.Execution.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable", "path": "machinable.Execution.find_latest"}, "machinable.Execution.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable", "path": "machinable.Execution.find_many"}, "machinable.Execution.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable", "path": "machinable.Execution.from_json"}, "machinable.Execution.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable", "path": "machinable.Execution.from_model"}, "machinable.Execution.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable", "path": "machinable.Execution.from_storage"}, "machinable.Execution.instance": {"kind": "routine", "realname": "instance", "name": "machinable", "path": "machinable.Execution.instance"}, "machinable.Execution.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Execution.is_mounted"}, "machinable.Execution.local": {"kind": "routine", "realname": "local", "name": "machinable", "path": "machinable.Execution.local"}, "machinable.Execution.make": {"kind": "routine", "realname": "make", "name": "machinable", "path": "machinable.Execution.make"}, "machinable.Execution.model": {"kind": "routine", "realname": "model", "name": "machinable", "path": "machinable.Execution.model"}, "machinable.Execution.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Execution.mount"}, "machinable.Execution.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable", "path": "machinable.Execution.on_after_dispatch"}, "machinable.Execution.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Execution.on_before_configure"}, "machinable.Execution.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable", "path": "machinable.Execution.on_before_dispatch"}, "machinable.Execution.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Execution.on_configure"}, "machinable.Execution.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable", "path": "machinable.Execution.on_dispatch"}, "machinable.Execution.on_dispatch_experiment": {"kind": "routine", "realname": "on_dispatch_experiment", "name": "machinable", "path": "machinable.Execution.on_dispatch_experiment"}, "machinable.Execution.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Execution.on_instantiate"}, "machinable.Execution.resources": {"kind": "routine", "realname": "resources", "name": "machinable", "path": "machinable.Execution.resources"}, "machinable.Execution.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Execution.serialize"}, "machinable.Execution.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable", "path": "machinable.Execution.set_default"}, "machinable.Execution.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Execution.set_model"}, "machinable.Execution.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable", "path": "machinable.Execution.singleton"}, "machinable.Execution.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable", "path": "machinable.Execution.unserialize"}, "machinable.Execution.use": {"kind": "routine", "realname": "use", "name": "machinable", "path": "machinable.Execution.use"}, "machinable.Execution": {"kind": "class", "realname": "Execution", "name": "machinable", "path": "machinable.Execution", "parents": ["machinable.element.Element"]}, "machinable.Experiment.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Experiment.as_json"}, "machinable.Experiment.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Experiment.clone"}, "machinable.Experiment.collect": {"kind": "routine", "realname": "collect", "name": "machinable", "path": "machinable.Experiment.collect"}, "machinable.Experiment.commit": {"kind": "routine", "realname": "commit", "name": "machinable", "path": "machinable.Experiment.commit"}, "machinable.Experiment.created_at": {"kind": "routine", "realname": "created_at", "name": "machinable", "path": "machinable.Experiment.created_at"}, "machinable.Experiment.derive": {"kind": "routine", "realname": "derive", "name": "machinable", "path": "machinable.Experiment.derive"}, "machinable.Experiment.derive_modified": {"kind": "routine", "realname": "derive_modified", "name": "machinable", "path": "machinable.Experiment.derive_modified"}, "machinable.Experiment.derive_singleton": {"kind": "routine", "realname": "derive_singleton", "name": "machinable", "path": "machinable.Experiment.derive_singleton"}, "machinable.Experiment.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable", "path": "machinable.Experiment.dispatch"}, "machinable.Experiment.execute": {"kind": "routine", "realname": "execute", "name": "machinable", "path": "machinable.Experiment.execute"}, "machinable.Experiment.find": {"kind": "routine", "realname": "find", "name": "machinable", "path": "machinable.Experiment.find"}, "machinable.Experiment.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable", "path": "machinable.Experiment.find_by_version"}, "machinable.Experiment.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable", "path": "machinable.Experiment.find_latest"}, "machinable.Experiment.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable", "path": "machinable.Experiment.find_many"}, "machinable.Experiment.finished_at": {"kind": "routine", "realname": "finished_at", "name": "machinable", "path": "machinable.Experiment.finished_at"}, "machinable.Experiment.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable", "path": "machinable.Experiment.from_json"}, "machinable.Experiment.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable", "path": "machinable.Experiment.from_model"}, "machinable.Experiment.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable", "path": "machinable.Experiment.from_storage"}, "machinable.Experiment.group_as": {"kind": "routine", "realname": "group_as", "name": "machinable", "path": "machinable.Experiment.group_as"}, "machinable.Experiment.heartbeat_at": {"kind": "routine", "realname": "heartbeat_at", "name": "machinable", "path": "machinable.Experiment.heartbeat_at"}, "machinable.Experiment.instance": {"kind": "routine", "realname": "instance", "name": "machinable", "path": "machinable.Experiment.instance"}, "machinable.Experiment.is_active": {"kind": "routine", "realname": "is_active", "name": "machinable", "path": "machinable.Experiment.is_active"}, "machinable.Experiment.is_finished": {"kind": "routine", "realname": "is_finished", "name": "machinable", "path": "machinable.Experiment.is_finished"}, "machinable.Experiment.is_incomplete": {"kind": "routine", "realname": "is_incomplete", "name": "machinable", "path": "machinable.Experiment.is_incomplete"}, "machinable.Experiment.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Experiment.is_mounted"}, "machinable.Experiment.is_started": {"kind": "routine", "realname": "is_started", "name": "machinable", "path": "machinable.Experiment.is_started"}, "machinable.Experiment.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable", "path": "machinable.Experiment.load_data"}, "machinable.Experiment.load_execution_data": {"kind": "routine", "realname": "load_execution_data", "name": "machinable", "path": "machinable.Experiment.load_execution_data"}, "machinable.Experiment.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable", "path": "machinable.Experiment.load_file"}, "machinable.Experiment.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Experiment.local_directory"}, "machinable.Experiment.make": {"kind": "routine", "realname": "make", "name": "machinable", "path": "machinable.Experiment.make"}, "machinable.Experiment.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable", "path": "machinable.Experiment.mark_started"}, "machinable.Experiment.model": {"kind": "routine", "realname": "model", "name": "machinable", "path": "machinable.Experiment.model"}, "machinable.Experiment.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Experiment.mount"}, "machinable.Experiment.on_after_create": {"kind": "routine", "realname": "on_after_create", "name": "machinable", "path": "machinable.Experiment.on_after_create"}, "machinable.Experiment.on_after_destroy": {"kind": "routine", "realname": "on_after_destroy", "name": "machinable", "path": "machinable.Experiment.on_after_destroy"}, "machinable.Experiment.on_after_execute": {"kind": "routine", "realname": "on_after_execute", "name": "machinable", "path": "machinable.Experiment.on_after_execute"}, "machinable.Experiment.on_after_execute_iteration": {"kind": "routine", "realname": "on_after_execute_iteration", "name": "machinable", "path": "machinable.Experiment.on_after_execute_iteration"}, "machinable.Experiment.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Experiment.on_before_configure"}, "machinable.Experiment.on_before_create": {"kind": "routine", "realname": "on_before_create", "name": "machinable", "path": "machinable.Experiment.on_before_create"}, "machinable.Experiment.on_before_destroy": {"kind": "routine", "realname": "on_before_destroy", "name": "machinable", "path": "machinable.Experiment.on_before_destroy"}, "machinable.Experiment.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable", "path": "machinable.Experiment.on_before_dispatch"}, "machinable.Experiment.on_before_execute": {"kind": "routine", "realname": "on_before_execute", "name": "machinable", "path": "machinable.Experiment.on_before_execute"}, "machinable.Experiment.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Experiment.on_configure"}, "machinable.Experiment.on_create": {"kind": "routine", "realname": "on_create", "name": "machinable", "path": "machinable.Experiment.on_create"}, "machinable.Experiment.on_destroy": {"kind": "routine", "realname": "on_destroy", "name": "machinable", "path": "machinable.Experiment.on_destroy"}, "machinable.Experiment.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable", "path": "machinable.Experiment.on_dispatch"}, "machinable.Experiment.on_execute": {"kind": "routine", "realname": "on_execute", "name": "machinable", "path": "machinable.Experiment.on_execute"}, "machinable.Experiment.on_failure": {"kind": "routine", "realname": "on_failure", "name": "machinable", "path": "machinable.Experiment.on_failure"}, "machinable.Experiment.on_finish": {"kind": "routine", "realname": "on_finish", "name": "machinable", "path": "machinable.Experiment.on_finish"}, "machinable.Experiment.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Experiment.on_instantiate"}, "machinable.Experiment.on_seeding": {"kind": "routine", "realname": "on_seeding", "name": "machinable", "path": "machinable.Experiment.on_seeding"}, "machinable.Experiment.on_success": {"kind": "routine", "realname": "on_success", "name": "machinable", "path": "machinable.Experiment.on_success"}, "machinable.Experiment.output": {"kind": "routine", "realname": "output", "name": "machinable", "path": "machinable.Experiment.output"}, "machinable.Experiment.record": {"kind": "routine", "realname": "record", "name": "machinable", "path": "machinable.Experiment.record"}, "machinable.Experiment.records": {"kind": "routine", "realname": "records", "name": "machinable", "path": "machinable.Experiment.records"}, "machinable.Experiment.resources": {"kind": "routine", "realname": "resources", "name": "machinable", "path": "machinable.Experiment.resources"}, "machinable.Experiment.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable", "path": "machinable.Experiment.save_data"}, "machinable.Experiment.save_execution_data": {"kind": "routine", "realname": "save_execution_data", "name": "machinable", "path": "machinable.Experiment.save_execution_data"}, "machinable.Experiment.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable", "path": "machinable.Experiment.save_file"}, "machinable.Experiment.save_host_info": {"kind": "routine", "realname": "save_host_info", "name": "machinable", "path": "machinable.Experiment.save_host_info"}, "machinable.Experiment.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Experiment.serialize"}, "machinable.Experiment.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable", "path": "machinable.Experiment.set_default"}, "machinable.Experiment.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Experiment.set_model"}, "machinable.Experiment.set_seed": {"kind": "routine", "realname": "set_seed", "name": "machinable", "path": "machinable.Experiment.set_seed"}, "machinable.Experiment.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable", "path": "machinable.Experiment.singleton"}, "machinable.Experiment.started_at": {"kind": "routine", "realname": "started_at", "name": "machinable", "path": "machinable.Experiment.started_at"}, "machinable.Experiment.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable", "path": "machinable.Experiment.unserialize"}, "machinable.Experiment.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable", "path": "machinable.Experiment.update_heartbeat"}, "machinable.Experiment.use": {"kind": "routine", "realname": "use", "name": "machinable", "path": "machinable.Experiment.use"}, "machinable.Experiment.version": {"kind": "routine", "realname": "version", "name": "machinable", "path": "machinable.Experiment.version"}, "machinable.Experiment": {"kind": "class", "realname": "Experiment", "name": "machinable", "path": "machinable.Experiment", "parents": ["machinable.element.Element"]}, "machinable.Project.add_to_path": {"kind": "routine", "realname": "add_to_path", "name": "machinable", "path": "machinable.Project.add_to_path"}, "machinable.Project.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Project.as_json"}, "machinable.Project.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Project.clone"}, "machinable.Project.close": {"kind": "routine", "realname": "close", "name": "machinable", "path": "machinable.Project.close"}, "machinable.Project.collect": {"kind": "routine", "realname": "collect", "name": "machinable", "path": "machinable.Project.collect"}, "machinable.Project.connect": {"kind": "routine", "realname": "connect", "name": "machinable", "path": "machinable.Project.connect"}, "machinable.Project.element": {"kind": "routine", "realname": "element", "name": "machinable", "path": "machinable.Project.element"}, "machinable.Project.exists": {"kind": "routine", "realname": "exists", "name": "machinable", "path": "machinable.Project.exists"}, "machinable.Project.find": {"kind": "routine", "realname": "find", "name": "machinable", "path": "machinable.Project.find"}, "machinable.Project.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable", "path": "machinable.Project.find_by_version"}, "machinable.Project.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable", "path": "machinable.Project.find_latest"}, "machinable.Project.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable", "path": "machinable.Project.find_many"}, "machinable.Project.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable", "path": "machinable.Project.from_json"}, "machinable.Project.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable", "path": "machinable.Project.from_model"}, "machinable.Project.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable", "path": "machinable.Project.from_storage"}, "machinable.Project.get": {"kind": "routine", "realname": "get", "name": "machinable", "path": "machinable.Project.get"}, "machinable.Project.get_code_version": {"kind": "routine", "realname": "get_code_version", "name": "machinable", "path": "machinable.Project.get_code_version"}, "machinable.Project.get_diff": {"kind": "routine", "realname": "get_diff", "name": "machinable", "path": "machinable.Project.get_diff"}, "machinable.Project.get_host_info": {"kind": "routine", "realname": "get_host_info", "name": "machinable", "path": "machinable.Project.get_host_info"}, "machinable.Project.get_root": {"kind": "routine", "realname": "get_root", "name": "machinable", "path": "machinable.Project.get_root"}, "machinable.Project.get_vendors": {"kind": "routine", "realname": "get_vendors", "name": "machinable", "path": "machinable.Project.get_vendors"}, "machinable.Project.instance": {"kind": "routine", "realname": "instance", "name": "machinable", "path": "machinable.Project.instance"}, "machinable.Project.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Project.is_mounted"}, "machinable.Project.is_root": {"kind": "routine", "realname": "is_root", "name": "machinable", "path": "machinable.Project.is_root"}, "machinable.Project.make": {"kind": "routine", "realname": "make", "name": "machinable", "path": "machinable.Project.make"}, "machinable.Project.model": {"kind": "routine", "realname": "model", "name": "machinable", "path": "machinable.Project.model"}, "machinable.Project.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Project.mount"}, "machinable.Project.name": {"kind": "routine", "realname": "name", "name": "machinable", "path": "machinable.Project.name"}, "machinable.Project.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Project.on_before_configure"}, "machinable.Project.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Project.on_configure"}, "machinable.Project.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Project.on_instantiate"}, "machinable.Project.on_resolve_element": {"kind": "routine", "realname": "on_resolve_element", "name": "machinable", "path": "machinable.Project.on_resolve_element"}, "machinable.Project.on_resolve_vendor": {"kind": "routine", "realname": "on_resolve_vendor", "name": "machinable", "path": "machinable.Project.on_resolve_vendor"}, "machinable.Project.path": {"kind": "routine", "realname": "path", "name": "machinable", "path": "machinable.Project.path"}, "machinable.Project.provider": {"kind": "routine", "realname": "provider", "name": "machinable", "path": "machinable.Project.provider"}, "machinable.Project.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Project.serialize"}, "machinable.Project.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable", "path": "machinable.Project.set_default"}, "machinable.Project.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Project.set_model"}, "machinable.Project.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable", "path": "machinable.Project.singleton"}, "machinable.Project.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable", "path": "machinable.Project.unserialize"}, "machinable.Project": {"kind": "class", "realname": "Project", "name": "machinable", "path": "machinable.Project", "parents": ["machinable.element.Connectable", "machinable.element.Element"]}, "machinable.Record.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Record.as_json"}, "machinable.Record.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Record.clone"}, "machinable.Record.collect": {"kind": "routine", "realname": "collect", "name": "machinable", "path": "machinable.Record.collect"}, "machinable.Record.empty": {"kind": "routine", "realname": "empty", "name": "machinable", "path": "machinable.Record.empty"}, "machinable.Record.find": {"kind": "routine", "realname": "find", "name": "machinable", "path": "machinable.Record.find"}, "machinable.Record.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable", "path": "machinable.Record.find_by_version"}, "machinable.Record.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable", "path": "machinable.Record.find_latest"}, "machinable.Record.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable", "path": "machinable.Record.find_many"}, "machinable.Record.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable", "path": "machinable.Record.from_json"}, "machinable.Record.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable", "path": "machinable.Record.from_model"}, "machinable.Record.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable", "path": "machinable.Record.from_storage"}, "machinable.Record.instance": {"kind": "routine", "realname": "instance", "name": "machinable", "path": "machinable.Record.instance"}, "machinable.Record.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Record.is_mounted"}, "machinable.Record.make": {"kind": "routine", "realname": "make", "name": "machinable", "path": "machinable.Record.make"}, "machinable.Record.model": {"kind": "routine", "realname": "model", "name": "machinable", "path": "machinable.Record.model"}, "machinable.Record.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Record.mount"}, "machinable.Record.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Record.on_before_configure"}, "machinable.Record.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Record.on_configure"}, "machinable.Record.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Record.on_instantiate"}, "machinable.Record.save": {"kind": "routine", "realname": "save", "name": "machinable", "path": "machinable.Record.save"}, "machinable.Record.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Record.serialize"}, "machinable.Record.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable", "path": "machinable.Record.set_default"}, "machinable.Record.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Record.set_model"}, "machinable.Record.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable", "path": "machinable.Record.singleton"}, "machinable.Record.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable", "path": "machinable.Record.unserialize"}, "machinable.Record.update": {"kind": "routine", "realname": "update", "name": "machinable", "path": "machinable.Record.update"}, "machinable.Record.write": {"kind": "routine", "realname": "write", "name": "machinable", "path": "machinable.Record.write"}, "machinable.Record": {"kind": "class", "realname": "Record", "name": "machinable", "path": "machinable.Record", "parents": ["machinable.element.Element"]}, "machinable.Storage.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable", "path": "machinable.Storage.as_json"}, "machinable.Storage.clone": {"kind": "routine", "realname": "clone", "name": "machinable", "path": "machinable.Storage.clone"}, "machinable.Storage.close": {"kind": "routine", "realname": "close", "name": "machinable", "path": "machinable.Storage.close"}, "machinable.Storage.collect": {"kind": "routine", "realname": "collect", "name": "machinable", "path": "machinable.Storage.collect"}, "machinable.Storage.commit": {"kind": "routine", "realname": "commit", "name": "machinable", "path": "machinable.Storage.commit"}, "machinable.Storage.connect": {"kind": "routine", "realname": "connect", "name": "machinable", "path": "machinable.Storage.connect"}, "machinable.Storage.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable", "path": "machinable.Storage.create_element"}, "machinable.Storage.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable", "path": "machinable.Storage.create_execution"}, "machinable.Storage.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable", "path": "machinable.Storage.create_experiment"}, "machinable.Storage.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable", "path": "machinable.Storage.create_file"}, "machinable.Storage.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable", "path": "machinable.Storage.create_group"}, "machinable.Storage.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable", "path": "machinable.Storage.create_project"}, "machinable.Storage.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable", "path": "machinable.Storage.create_record"}, "machinable.Storage.filesystem": {"kind": "routine", "realname": "filesystem", "name": "machinable", "path": "machinable.Storage.filesystem"}, "machinable.Storage.find": {"kind": "routine", "realname": "find", "name": "machinable", "path": "machinable.Storage.find"}, "machinable.Storage.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable", "path": "machinable.Storage.find_by_version"}, "machinable.Storage.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable", "path": "machinable.Storage.find_experiment"}, "machinable.Storage.find_experiment_by_version": {"kind": "routine", "realname": "find_experiment_by_version", "name": "machinable", "path": "machinable.Storage.find_experiment_by_version"}, "machinable.Storage.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable", "path": "machinable.Storage.find_latest"}, "machinable.Storage.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable", "path": "machinable.Storage.find_many"}, "machinable.Storage.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable", "path": "machinable.Storage.find_related"}, "machinable.Storage.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable", "path": "machinable.Storage.from_json"}, "machinable.Storage.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable", "path": "machinable.Storage.from_model"}, "machinable.Storage.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable", "path": "machinable.Storage.from_storage"}, "machinable.Storage.get": {"kind": "routine", "realname": "get", "name": "machinable", "path": "machinable.Storage.get"}, "machinable.Storage.instance": {"kind": "routine", "realname": "instance", "name": "machinable", "path": "machinable.Storage.instance"}, "machinable.Storage.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable", "path": "machinable.Storage.is_mounted"}, "machinable.Storage.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable", "path": "machinable.Storage.local_directory"}, "machinable.Storage.make": {"kind": "routine", "realname": "make", "name": "machinable", "path": "machinable.Storage.make"}, "machinable.Storage.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable", "path": "machinable.Storage.mark_started"}, "machinable.Storage.model": {"kind": "routine", "realname": "model", "name": "machinable", "path": "machinable.Storage.model"}, "machinable.Storage.mount": {"kind": "routine", "realname": "mount", "name": "machinable", "path": "machinable.Storage.mount"}, "machinable.Storage.multiple": {"kind": "routine", "realname": "multiple", "name": "machinable", "path": "machinable.Storage.multiple"}, "machinable.Storage.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable", "path": "machinable.Storage.on_before_configure"}, "machinable.Storage.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable", "path": "machinable.Storage.on_configure"}, "machinable.Storage.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable", "path": "machinable.Storage.on_instantiate"}, "machinable.Storage.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable", "path": "machinable.Storage.retrieve_element"}, "machinable.Storage.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable", "path": "machinable.Storage.retrieve_elements"}, "machinable.Storage.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable", "path": "machinable.Storage.retrieve_execution"}, "machinable.Storage.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable", "path": "machinable.Storage.retrieve_executions"}, "machinable.Storage.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable", "path": "machinable.Storage.retrieve_experiment"}, "machinable.Storage.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable", "path": "machinable.Storage.retrieve_experiments"}, "machinable.Storage.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable", "path": "machinable.Storage.retrieve_file"}, "machinable.Storage.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable", "path": "machinable.Storage.retrieve_group"}, "machinable.Storage.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable", "path": "machinable.Storage.retrieve_output"}, "machinable.Storage.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable", "path": "machinable.Storage.retrieve_project"}, "machinable.Storage.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable", "path": "machinable.Storage.retrieve_records"}, "machinable.Storage.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable", "path": "machinable.Storage.retrieve_related"}, "machinable.Storage.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable", "path": "machinable.Storage.retrieve_status"}, "machinable.Storage.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable", "path": "machinable.Storage.serialize"}, "machinable.Storage.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable", "path": "machinable.Storage.set_default"}, "machinable.Storage.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable", "path": "machinable.Storage.set_model"}, "machinable.Storage.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable", "path": "machinable.Storage.singleton"}, "machinable.Storage.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable", "path": "machinable.Storage.unserialize"}, "machinable.Storage.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable", "path": "machinable.Storage.update_heartbeat"}, "machinable.Storage": {"kind": "class", "realname": "Storage", "name": "machinable", "path": "machinable.Storage", "parents": ["machinable.element.Connectable", "machinable.element.Element"]}, "machinable.cli": {"kind": "routine", "realname": "cli", "name": "machinable.cli", "path": "machinable.cli"}, "machinable": {"kind": "module", "name": "machinable", "path": "machinable"}, "machinable.collection.Collection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.Collection.all"}, "machinable.collection.Collection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.Collection.append"}, "machinable.collection.Collection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.Collection.as_dataframe"}, "machinable.collection.Collection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.Collection.as_json"}, "machinable.collection.Collection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.Collection.as_numpy"}, "machinable.collection.Collection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.Collection.as_table"}, "machinable.collection.Collection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.Collection.avg"}, "machinable.collection.Collection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.Collection.chunk"}, "machinable.collection.Collection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.Collection.collapse"}, "machinable.collection.Collection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.Collection.contains"}, "machinable.collection.Collection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.Collection.count"}, "machinable.collection.Collection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.Collection.diff"}, "machinable.collection.Collection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.Collection.each"}, "machinable.collection.Collection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.Collection.empty"}, "machinable.collection.Collection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.Collection.every"}, "machinable.collection.Collection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.Collection.filter"}, "machinable.collection.Collection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.Collection.first"}, "machinable.collection.Collection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.Collection.flatten"}, "machinable.collection.Collection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.Collection.forget"}, "machinable.collection.Collection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.Collection.get"}, "machinable.collection.Collection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.Collection.implode"}, "machinable.collection.Collection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.Collection.last"}, "machinable.collection.Collection.make": {"kind": "routine", "realname": "make", "name": "machinable.collection", "path": "machinable.collection.Collection.make"}, "machinable.collection.Collection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.Collection.map"}, "machinable.collection.Collection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.Collection.max"}, "machinable.collection.Collection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.Collection.merge"}, "machinable.collection.Collection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.Collection.min"}, "machinable.collection.Collection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.Collection.only"}, "machinable.collection.Collection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.Collection.pluck"}, "machinable.collection.Collection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.Collection.pluck_or_nan"}, "machinable.collection.Collection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.Collection.pluck_or_none"}, "machinable.collection.Collection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.Collection.pop"}, "machinable.collection.Collection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.Collection.pprint"}, "machinable.collection.Collection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.Collection.prepend"}, "machinable.collection.Collection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.Collection.pull"}, "machinable.collection.Collection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.Collection.put"}, "machinable.collection.Collection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.Collection.reduce"}, "machinable.collection.Collection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.Collection.reject"}, "machinable.collection.Collection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.Collection.reverse"}, "machinable.collection.Collection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.Collection.section"}, "machinable.collection.Collection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.Collection.serialize"}, "machinable.collection.Collection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.Collection.sort"}, "machinable.collection.Collection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.Collection.sum"}, "machinable.collection.Collection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.Collection.take"}, "machinable.collection.Collection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.Collection.transform"}, "machinable.collection.Collection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.Collection.unique"}, "machinable.collection.Collection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.Collection.where"}, "machinable.collection.Collection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.Collection.without"}, "machinable.collection.Collection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.Collection.zip"}, "machinable.collection.Collection": {"kind": "class", "realname": "Collection", "name": "machinable.collection", "path": "machinable.collection.Collection", "parents": ["builtins.object"]}, "machinable.collection.ElementCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.all"}, "machinable.collection.ElementCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.append"}, "machinable.collection.ElementCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_dataframe"}, "machinable.collection.ElementCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_json"}, "machinable.collection.ElementCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_numpy"}, "machinable.collection.ElementCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.as_table"}, "machinable.collection.ElementCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.avg"}, "machinable.collection.ElementCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.chunk"}, "machinable.collection.ElementCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.collapse"}, "machinable.collection.ElementCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.contains"}, "machinable.collection.ElementCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.count"}, "machinable.collection.ElementCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.diff"}, "machinable.collection.ElementCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.each"}, "machinable.collection.ElementCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.empty"}, "machinable.collection.ElementCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.every"}, "machinable.collection.ElementCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.filter"}, "machinable.collection.ElementCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.filter_by_module"}, "machinable.collection.ElementCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.first"}, "machinable.collection.ElementCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.flatten"}, "machinable.collection.ElementCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.forget"}, "machinable.collection.ElementCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.get"}, "machinable.collection.ElementCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.implode"}, "machinable.collection.ElementCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.last"}, "machinable.collection.ElementCollection.make": {"kind": "routine", "realname": "make", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.make"}, "machinable.collection.ElementCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.map"}, "machinable.collection.ElementCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.max"}, "machinable.collection.ElementCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.merge"}, "machinable.collection.ElementCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.min"}, "machinable.collection.ElementCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.only"}, "machinable.collection.ElementCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pluck"}, "machinable.collection.ElementCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pluck_or_nan"}, "machinable.collection.ElementCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pluck_or_none"}, "machinable.collection.ElementCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pop"}, "machinable.collection.ElementCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pprint"}, "machinable.collection.ElementCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.prepend"}, "machinable.collection.ElementCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.pull"}, "machinable.collection.ElementCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.put"}, "machinable.collection.ElementCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.reduce"}, "machinable.collection.ElementCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.reject"}, "machinable.collection.ElementCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.reverse"}, "machinable.collection.ElementCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.section"}, "machinable.collection.ElementCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.serialize"}, "machinable.collection.ElementCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.sort"}, "machinable.collection.ElementCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.sum"}, "machinable.collection.ElementCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.take"}, "machinable.collection.ElementCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.transform"}, "machinable.collection.ElementCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.unique"}, "machinable.collection.ElementCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.where"}, "machinable.collection.ElementCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.without"}, "machinable.collection.ElementCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.ElementCollection.zip"}, "machinable.collection.ElementCollection": {"kind": "class", "realname": "ElementCollection", "name": "machinable.collection", "path": "machinable.collection.ElementCollection", "parents": ["Collection"]}, "machinable.collection.ExecutionCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.all"}, "machinable.collection.ExecutionCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.append"}, "machinable.collection.ExecutionCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_dataframe"}, "machinable.collection.ExecutionCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_json"}, "machinable.collection.ExecutionCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_numpy"}, "machinable.collection.ExecutionCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.as_table"}, "machinable.collection.ExecutionCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.avg"}, "machinable.collection.ExecutionCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.chunk"}, "machinable.collection.ExecutionCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.collapse"}, "machinable.collection.ExecutionCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.contains"}, "machinable.collection.ExecutionCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.count"}, "machinable.collection.ExecutionCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.diff"}, "machinable.collection.ExecutionCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.each"}, "machinable.collection.ExecutionCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.empty"}, "machinable.collection.ExecutionCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.every"}, "machinable.collection.ExecutionCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.filter"}, "machinable.collection.ExecutionCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.filter_by_module"}, "machinable.collection.ExecutionCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.first"}, "machinable.collection.ExecutionCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.flatten"}, "machinable.collection.ExecutionCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.forget"}, "machinable.collection.ExecutionCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.get"}, "machinable.collection.ExecutionCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.implode"}, "machinable.collection.ExecutionCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.last"}, "machinable.collection.ExecutionCollection.make": {"kind": "routine", "realname": "make", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.make"}, "machinable.collection.ExecutionCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.map"}, "machinable.collection.ExecutionCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.max"}, "machinable.collection.ExecutionCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.merge"}, "machinable.collection.ExecutionCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.min"}, "machinable.collection.ExecutionCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.only"}, "machinable.collection.ExecutionCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pluck"}, "machinable.collection.ExecutionCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pluck_or_nan"}, "machinable.collection.ExecutionCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pluck_or_none"}, "machinable.collection.ExecutionCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pop"}, "machinable.collection.ExecutionCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pprint"}, "machinable.collection.ExecutionCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.prepend"}, "machinable.collection.ExecutionCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.pull"}, "machinable.collection.ExecutionCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.put"}, "machinable.collection.ExecutionCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.reduce"}, "machinable.collection.ExecutionCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.reject"}, "machinable.collection.ExecutionCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.reverse"}, "machinable.collection.ExecutionCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.section"}, "machinable.collection.ExecutionCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.serialize"}, "machinable.collection.ExecutionCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.sort"}, "machinable.collection.ExecutionCollection.status": {"kind": "routine", "realname": "status", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.status"}, "machinable.collection.ExecutionCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.sum"}, "machinable.collection.ExecutionCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.take"}, "machinable.collection.ExecutionCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.transform"}, "machinable.collection.ExecutionCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.unique"}, "machinable.collection.ExecutionCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.where"}, "machinable.collection.ExecutionCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.without"}, "machinable.collection.ExecutionCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection.zip"}, "machinable.collection.ExecutionCollection": {"kind": "class", "realname": "ExecutionCollection", "name": "machinable.collection", "path": "machinable.collection.ExecutionCollection", "parents": ["ElementCollection"]}, "machinable.collection.ExperimentCollection.active": {"kind": "routine", "realname": "active", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.active"}, "machinable.collection.ExperimentCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.all"}, "machinable.collection.ExperimentCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.append"}, "machinable.collection.ExperimentCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_dataframe"}, "machinable.collection.ExperimentCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_json"}, "machinable.collection.ExperimentCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_numpy"}, "machinable.collection.ExperimentCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.as_table"}, "machinable.collection.ExperimentCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.avg"}, "machinable.collection.ExperimentCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.chunk"}, "machinable.collection.ExperimentCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.collapse"}, "machinable.collection.ExperimentCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.contains"}, "machinable.collection.ExperimentCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.count"}, "machinable.collection.ExperimentCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.diff"}, "machinable.collection.ExperimentCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.each"}, "machinable.collection.ExperimentCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.empty"}, "machinable.collection.ExperimentCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.every"}, "machinable.collection.ExperimentCollection.execute": {"kind": "routine", "realname": "execute", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.execute"}, "machinable.collection.ExperimentCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.filter"}, "machinable.collection.ExperimentCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.filter_by_module"}, "machinable.collection.ExperimentCollection.filter_by_version": {"kind": "routine", "realname": "filter_by_version", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.filter_by_version"}, "machinable.collection.ExperimentCollection.finished": {"kind": "routine", "realname": "finished", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.finished"}, "machinable.collection.ExperimentCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.first"}, "machinable.collection.ExperimentCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.flatten"}, "machinable.collection.ExperimentCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.forget"}, "machinable.collection.ExperimentCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.get"}, "machinable.collection.ExperimentCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.implode"}, "machinable.collection.ExperimentCollection.incomplete": {"kind": "routine", "realname": "incomplete", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.incomplete"}, "machinable.collection.ExperimentCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.last"}, "machinable.collection.ExperimentCollection.make": {"kind": "routine", "realname": "make", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.make"}, "machinable.collection.ExperimentCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.map"}, "machinable.collection.ExperimentCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.max"}, "machinable.collection.ExperimentCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.merge"}, "machinable.collection.ExperimentCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.min"}, "machinable.collection.ExperimentCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.only"}, "machinable.collection.ExperimentCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pluck"}, "machinable.collection.ExperimentCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pluck_or_nan"}, "machinable.collection.ExperimentCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pluck_or_none"}, "machinable.collection.ExperimentCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pop"}, "machinable.collection.ExperimentCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pprint"}, "machinable.collection.ExperimentCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.prepend"}, "machinable.collection.ExperimentCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.pull"}, "machinable.collection.ExperimentCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.put"}, "machinable.collection.ExperimentCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.reduce"}, "machinable.collection.ExperimentCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.reject"}, "machinable.collection.ExperimentCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.reverse"}, "machinable.collection.ExperimentCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.section"}, "machinable.collection.ExperimentCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.serialize"}, "machinable.collection.ExperimentCollection.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.singleton"}, "machinable.collection.ExperimentCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.sort"}, "machinable.collection.ExperimentCollection.started": {"kind": "routine", "realname": "started", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.started"}, "machinable.collection.ExperimentCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.sum"}, "machinable.collection.ExperimentCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.take"}, "machinable.collection.ExperimentCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.transform"}, "machinable.collection.ExperimentCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.unique"}, "machinable.collection.ExperimentCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.where"}, "machinable.collection.ExperimentCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.without"}, "machinable.collection.ExperimentCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection.zip"}, "machinable.collection.ExperimentCollection": {"kind": "class", "realname": "ExperimentCollection", "name": "machinable.collection", "path": "machinable.collection.ExperimentCollection", "parents": ["ElementCollection"]}, "machinable.collection.RecordCollection.all": {"kind": "routine", "realname": "all", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.all"}, "machinable.collection.RecordCollection.append": {"kind": "routine", "realname": "append", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.append"}, "machinable.collection.RecordCollection.as_dataframe": {"kind": "routine", "realname": "as_dataframe", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_dataframe"}, "machinable.collection.RecordCollection.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_json"}, "machinable.collection.RecordCollection.as_numpy": {"kind": "routine", "realname": "as_numpy", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_numpy"}, "machinable.collection.RecordCollection.as_table": {"kind": "routine", "realname": "as_table", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.as_table"}, "machinable.collection.RecordCollection.avg": {"kind": "routine", "realname": "avg", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.avg"}, "machinable.collection.RecordCollection.chunk": {"kind": "routine", "realname": "chunk", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.chunk"}, "machinable.collection.RecordCollection.collapse": {"kind": "routine", "realname": "collapse", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.collapse"}, "machinable.collection.RecordCollection.contains": {"kind": "routine", "realname": "contains", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.contains"}, "machinable.collection.RecordCollection.count": {"kind": "routine", "realname": "count", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.count"}, "machinable.collection.RecordCollection.diff": {"kind": "routine", "realname": "diff", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.diff"}, "machinable.collection.RecordCollection.each": {"kind": "routine", "realname": "each", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.each"}, "machinable.collection.RecordCollection.empty": {"kind": "routine", "realname": "empty", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.empty"}, "machinable.collection.RecordCollection.every": {"kind": "routine", "realname": "every", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.every"}, "machinable.collection.RecordCollection.filter": {"kind": "routine", "realname": "filter", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.filter"}, "machinable.collection.RecordCollection.filter_by_module": {"kind": "routine", "realname": "filter_by_module", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.filter_by_module"}, "machinable.collection.RecordCollection.first": {"kind": "routine", "realname": "first", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.first"}, "machinable.collection.RecordCollection.flatten": {"kind": "routine", "realname": "flatten", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.flatten"}, "machinable.collection.RecordCollection.forget": {"kind": "routine", "realname": "forget", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.forget"}, "machinable.collection.RecordCollection.get": {"kind": "routine", "realname": "get", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.get"}, "machinable.collection.RecordCollection.implode": {"kind": "routine", "realname": "implode", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.implode"}, "machinable.collection.RecordCollection.last": {"kind": "routine", "realname": "last", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.last"}, "machinable.collection.RecordCollection.make": {"kind": "routine", "realname": "make", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.make"}, "machinable.collection.RecordCollection.map": {"kind": "routine", "realname": "map", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.map"}, "machinable.collection.RecordCollection.max": {"kind": "routine", "realname": "max", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.max"}, "machinable.collection.RecordCollection.merge": {"kind": "routine", "realname": "merge", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.merge"}, "machinable.collection.RecordCollection.min": {"kind": "routine", "realname": "min", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.min"}, "machinable.collection.RecordCollection.only": {"kind": "routine", "realname": "only", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.only"}, "machinable.collection.RecordCollection.pluck": {"kind": "routine", "realname": "pluck", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pluck"}, "machinable.collection.RecordCollection.pluck_or_nan": {"kind": "routine", "realname": "pluck_or_nan", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pluck_or_nan"}, "machinable.collection.RecordCollection.pluck_or_none": {"kind": "routine", "realname": "pluck_or_none", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pluck_or_none"}, "machinable.collection.RecordCollection.pop": {"kind": "routine", "realname": "pop", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pop"}, "machinable.collection.RecordCollection.pprint": {"kind": "routine", "realname": "pprint", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pprint"}, "machinable.collection.RecordCollection.prepend": {"kind": "routine", "realname": "prepend", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.prepend"}, "machinable.collection.RecordCollection.pull": {"kind": "routine", "realname": "pull", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.pull"}, "machinable.collection.RecordCollection.put": {"kind": "routine", "realname": "put", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.put"}, "machinable.collection.RecordCollection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.reduce"}, "machinable.collection.RecordCollection.reject": {"kind": "routine", "realname": "reject", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.reject"}, "machinable.collection.RecordCollection.reverse": {"kind": "routine", "realname": "reverse", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.reverse"}, "machinable.collection.RecordCollection.section": {"kind": "routine", "realname": "section", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.section"}, "machinable.collection.RecordCollection.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.serialize"}, "machinable.collection.RecordCollection.sort": {"kind": "routine", "realname": "sort", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.sort"}, "machinable.collection.RecordCollection.sum": {"kind": "routine", "realname": "sum", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.sum"}, "machinable.collection.RecordCollection.take": {"kind": "routine", "realname": "take", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.take"}, "machinable.collection.RecordCollection.transform": {"kind": "routine", "realname": "transform", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.transform"}, "machinable.collection.RecordCollection.unique": {"kind": "routine", "realname": "unique", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.unique"}, "machinable.collection.RecordCollection.where": {"kind": "routine", "realname": "where", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.where"}, "machinable.collection.RecordCollection.without": {"kind": "routine", "realname": "without", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.without"}, "machinable.collection.RecordCollection.zip": {"kind": "routine", "realname": "zip", "name": "machinable.collection", "path": "machinable.collection.RecordCollection.zip"}, "machinable.collection.RecordCollection": {"kind": "class", "realname": "RecordCollection", "name": "machinable.collection", "path": "machinable.collection.RecordCollection", "parents": ["ElementCollection"]}, "machinable.collection.collect": {"kind": "routine", "realname": "collect", "name": "machinable.collection", "path": "machinable.collection.collect"}, "machinable.collection.data_get": {"kind": "routine", "realname": "data_get", "name": "machinable.collection", "path": "machinable.collection.data_get"}, "machinable.collection.reduce": {"kind": "routine", "realname": "reduce", "name": "machinable.collection", "path": "machinable.collection.reduce"}, "machinable.collection": {"kind": "module", "name": "machinable.collection", "path": "machinable.collection"}, "machinable.config.Model.construct": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.construct"}, "machinable.config.Model.copy": {"kind": "routine", "realname": "copy", "name": "machinable.config", "path": "machinable.config.Model.copy"}, "machinable.config.Model.dict": {"kind": "routine", "realname": "dict", "name": "machinable.config", "path": "machinable.config.Model.dict"}, "machinable.config.Model.from_orm": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.from_orm"}, "machinable.config.Model.json": {"kind": "routine", "realname": "json", "name": "machinable.config", "path": "machinable.config.Model.json"}, "machinable.config.Model.parse_file": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.parse_file"}, "machinable.config.Model.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.parse_obj"}, "machinable.config.Model.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.parse_raw"}, "machinable.config.Model.schema": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.schema"}, "machinable.config.Model.schema_json": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.schema_json"}, "machinable.config.Model.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.update_forward_refs"}, "machinable.config.Model.validate": {"kind": "routine", "realname": null, "name": "machinable.config", "path": "machinable.config.Model.validate"}, "machinable.config.Model": {"kind": "class", "realname": "BaseModel", "name": "machinable.config", "path": "machinable.config.Model", "parents": ["pydantic.utils.Representation"]}, "machinable.config.Field": {"kind": "routine", "realname": "Field", "name": "machinable.config", "path": "machinable.config.Field"}, "machinable.config.validator": {"kind": "routine", "realname": "validator", "name": "machinable.config", "path": "machinable.config.validator"}, "machinable.config": {"kind": "module", "name": "machinable.config", "path": "machinable.config"}, "machinable.element.ConfigMethod": {"kind": "class", "realname": "ConfigMethod", "name": "machinable.element", "path": "machinable.element.ConfigMethod", "parents": ["builtins.object"]}, "machinable.element.Connectable.close": {"kind": "routine", "realname": "close", "name": "machinable.element", "path": "machinable.element.Connectable.close"}, "machinable.element.Connectable.connect": {"kind": "routine", "realname": "connect", "name": "machinable.element", "path": "machinable.element.Connectable.connect"}, "machinable.element.Connectable.get": {"kind": "routine", "realname": "get", "name": "machinable.element", "path": "machinable.element.Connectable.get"}, "machinable.element.Connectable": {"kind": "class", "realname": "Connectable", "name": "machinable.element", "path": "machinable.element.Connectable", "parents": ["builtins.object"]}, "machinable.element.Element.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.element", "path": "machinable.element.Element.as_json"}, "machinable.element.Element.clone": {"kind": "routine", "realname": "clone", "name": "machinable.element", "path": "machinable.element.Element.clone"}, "machinable.element.Element.collect": {"kind": "routine", "realname": "collect", "name": "machinable.element", "path": "machinable.element.Element.collect"}, "machinable.element.Element.find": {"kind": "routine", "realname": "find", "name": "machinable.element", "path": "machinable.element.Element.find"}, "machinable.element.Element.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.element", "path": "machinable.element.Element.find_by_version"}, "machinable.element.Element.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.element", "path": "machinable.element.Element.find_latest"}, "machinable.element.Element.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.element", "path": "machinable.element.Element.find_many"}, "machinable.element.Element.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.element", "path": "machinable.element.Element.from_json"}, "machinable.element.Element.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.element", "path": "machinable.element.Element.from_model"}, "machinable.element.Element.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.element", "path": "machinable.element.Element.from_storage"}, "machinable.element.Element.instance": {"kind": "routine", "realname": "instance", "name": "machinable.element", "path": "machinable.element.Element.instance"}, "machinable.element.Element.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.element", "path": "machinable.element.Element.is_mounted"}, "machinable.element.Element.make": {"kind": "routine", "realname": "make", "name": "machinable.element", "path": "machinable.element.Element.make"}, "machinable.element.Element.model": {"kind": "routine", "realname": "model", "name": "machinable.element", "path": "machinable.element.Element.model"}, "machinable.element.Element.mount": {"kind": "routine", "realname": "mount", "name": "machinable.element", "path": "machinable.element.Element.mount"}, "machinable.element.Element.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.element", "path": "machinable.element.Element.on_before_configure"}, "machinable.element.Element.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.element", "path": "machinable.element.Element.on_configure"}, "machinable.element.Element.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.element", "path": "machinable.element.Element.on_instantiate"}, "machinable.element.Element.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.element", "path": "machinable.element.Element.serialize"}, "machinable.element.Element.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.element", "path": "machinable.element.Element.set_default"}, "machinable.element.Element.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.element", "path": "machinable.element.Element.set_model"}, "machinable.element.Element.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.element", "path": "machinable.element.Element.singleton"}, "machinable.element.Element.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.element", "path": "machinable.element.Element.unserialize"}, "machinable.element.Element": {"kind": "class", "realname": "Element", "name": "machinable.element", "path": "machinable.element.Element", "parents": ["machinable.utils.Jsonable"]}, "machinable.element.belongs_to": {"kind": "routine", "realname": "belongs_to", "name": "machinable.element", "path": "machinable.element.belongs_to"}, "machinable.element.compact": {"kind": "routine", "realname": "compact", "name": "machinable.element", "path": "machinable.element.compact"}, "machinable.element.defaultversion": {"kind": "routine", "realname": "defaultversion", "name": "machinable.element", "path": "machinable.element.defaultversion"}, "machinable.element.equalversion": {"kind": "routine", "realname": "equalversion", "name": "machinable.element", "path": "machinable.element.equalversion"}, "machinable.element.extract": {"kind": "routine", "realname": "extract", "name": "machinable.element", "path": "machinable.element.extract"}, "machinable.element.get_lineage": {"kind": "routine", "realname": "get_lineage", "name": "machinable.element", "path": "machinable.element.get_lineage"}, "machinable.element.has_many": {"kind": "routine", "realname": "has_many", "name": "machinable.element", "path": "machinable.element.has_many"}, "machinable.element.has_one": {"kind": "routine", "realname": "belongs_to", "name": "machinable.element", "path": "machinable.element.has_one"}, "machinable.element.idversion": {"kind": "routine", "realname": "idversion", "name": "machinable.element", "path": "machinable.element.idversion"}, "machinable.element.instantiate": {"kind": "routine", "realname": "instantiate", "name": "machinable.element", "path": "machinable.element.instantiate"}, "machinable.element.normversion": {"kind": "routine", "realname": "normversion", "name": "machinable.element", "path": "machinable.element.normversion"}, "machinable.element.transfer_to": {"kind": "routine", "realname": "transfer_to", "name": "machinable.element", "path": "machinable.element.transfer_to"}, "machinable.element": {"kind": "module", "name": "machinable.element", "path": "machinable.element"}, "machinable.errors.ConfigurationError.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.ConfigurationError.with_traceback"}, "machinable.errors.ConfigurationError": {"kind": "class", "realname": "ConfigurationError", "name": "machinable.errors", "path": "machinable.errors.ConfigurationError", "parents": ["MachinableError"]}, "machinable.errors.DependencyMissing.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.DependencyMissing.with_traceback"}, "machinable.errors.DependencyMissing": {"kind": "class", "realname": "DependencyMissing", "name": "machinable.errors", "path": "machinable.errors.DependencyMissing", "parents": ["MachinableError", "builtins.ImportError"]}, "machinable.errors.ExecutionFailed.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.ExecutionFailed.with_traceback"}, "machinable.errors.ExecutionFailed": {"kind": "class", "realname": "ExecutionFailed", "name": "machinable.errors", "path": "machinable.errors.ExecutionFailed", "parents": ["MachinableError"]}, "machinable.errors.ExecutionInterrupt.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.ExecutionInterrupt.with_traceback"}, "machinable.errors.ExecutionInterrupt": {"kind": "class", "realname": "ExecutionInterrupt", "name": "machinable.errors", "path": "machinable.errors.ExecutionInterrupt", "parents": ["ExecutionFailed"]}, "machinable.errors.MachinableError.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.MachinableError.with_traceback"}, "machinable.errors.MachinableError": {"kind": "class", "realname": "MachinableError", "name": "machinable.errors", "path": "machinable.errors.MachinableError", "parents": ["builtins.Exception"]}, "machinable.errors.StorageError.with_traceback": {"kind": "routine", "realname": "with_traceback", "name": "machinable.errors", "path": "machinable.errors.StorageError.with_traceback"}, "machinable.errors.StorageError": {"kind": "class", "realname": "StorageError", "name": "machinable.errors", "path": "machinable.errors.StorageError", "parents": ["MachinableError"]}, "machinable.errors": {"kind": "module", "name": "machinable.errors", "path": "machinable.errors"}, "machinable.execution": {"kind": "module", "name": "machinable.execution", "path": "machinable.execution"}, "machinable.execution.execution.Execution.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.as_json"}, "machinable.execution.execution.Execution.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.canonicalize_resources"}, "machinable.execution.execution.Execution.clone": {"kind": "routine", "realname": "clone", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.clone"}, "machinable.execution.execution.Execution.collect": {"kind": "routine", "realname": "collect", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.collect"}, "machinable.execution.execution.Execution.commit": {"kind": "routine", "realname": "commit", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.commit"}, "machinable.execution.execution.Execution.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.compute_resources"}, "machinable.execution.execution.Execution.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.default_resources"}, "machinable.execution.execution.Execution.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.dispatch"}, "machinable.execution.execution.Execution.find": {"kind": "routine", "realname": "find", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.find"}, "machinable.execution.execution.Execution.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.find_by_version"}, "machinable.execution.execution.Execution.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.find_latest"}, "machinable.execution.execution.Execution.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.find_many"}, "machinable.execution.execution.Execution.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.from_json"}, "machinable.execution.execution.Execution.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.from_model"}, "machinable.execution.execution.Execution.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.from_storage"}, "machinable.execution.execution.Execution.instance": {"kind": "routine", "realname": "instance", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.instance"}, "machinable.execution.execution.Execution.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.is_mounted"}, "machinable.execution.execution.Execution.local": {"kind": "routine", "realname": "local", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.local"}, "machinable.execution.execution.Execution.make": {"kind": "routine", "realname": "make", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.make"}, "machinable.execution.execution.Execution.model": {"kind": "routine", "realname": "model", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.model"}, "machinable.execution.execution.Execution.mount": {"kind": "routine", "realname": "mount", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.mount"}, "machinable.execution.execution.Execution.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_after_dispatch"}, "machinable.execution.execution.Execution.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_before_configure"}, "machinable.execution.execution.Execution.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_before_dispatch"}, "machinable.execution.execution.Execution.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_configure"}, "machinable.execution.execution.Execution.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_dispatch"}, "machinable.execution.execution.Execution.on_dispatch_experiment": {"kind": "routine", "realname": "on_dispatch_experiment", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_dispatch_experiment"}, "machinable.execution.execution.Execution.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.on_instantiate"}, "machinable.execution.execution.Execution.resources": {"kind": "routine", "realname": "resources", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.resources"}, "machinable.execution.execution.Execution.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.serialize"}, "machinable.execution.execution.Execution.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.set_default"}, "machinable.execution.execution.Execution.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.set_model"}, "machinable.execution.execution.Execution.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.singleton"}, "machinable.execution.execution.Execution.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.unserialize"}, "machinable.execution.execution.Execution.use": {"kind": "routine", "realname": "use", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution.use"}, "machinable.execution.execution.Execution": {"kind": "class", "realname": "Execution", "name": "machinable.execution.execution", "path": "machinable.execution.execution.Execution", "parents": ["machinable.element.Element"]}, "machinable.execution.execution": {"kind": "module", "name": "machinable.execution.execution", "path": "machinable.execution.execution"}, "machinable.execution.external.External.after_script": {"kind": "routine", "realname": "after_script", "name": "machinable.execution.external", "path": "machinable.execution.external.External.after_script"}, "machinable.execution.external.External.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.execution.external", "path": "machinable.execution.external.External.as_json"}, "machinable.execution.external.External.before_script": {"kind": "routine", "realname": "before_script", "name": "machinable.execution.external", "path": "machinable.execution.external.External.before_script"}, "machinable.execution.external.External.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable.execution.external", "path": "machinable.execution.external.External.canonicalize_resources"}, "machinable.execution.external.External.clone": {"kind": "routine", "realname": "clone", "name": "machinable.execution.external", "path": "machinable.execution.external.External.clone"}, "machinable.execution.external.External.code": {"kind": "routine", "realname": "code", "name": "machinable.execution.external", "path": "machinable.execution.external.External.code"}, "machinable.execution.external.External.collect": {"kind": "routine", "realname": "collect", "name": "machinable.execution.external", "path": "machinable.execution.external.External.collect"}, "machinable.execution.external.External.commit": {"kind": "routine", "realname": "commit", "name": "machinable.execution.external", "path": "machinable.execution.external.External.commit"}, "machinable.execution.external.External.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable.execution.external", "path": "machinable.execution.external.External.compute_resources"}, "machinable.execution.external.External.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable.execution.external", "path": "machinable.execution.external.External.default_resources"}, "machinable.execution.external.External.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.execution.external", "path": "machinable.execution.external.External.dispatch"}, "machinable.execution.external.External.find": {"kind": "routine", "realname": "find", "name": "machinable.execution.external", "path": "machinable.execution.external.External.find"}, "machinable.execution.external.External.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.execution.external", "path": "machinable.execution.external.External.find_by_version"}, "machinable.execution.external.External.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.execution.external", "path": "machinable.execution.external.External.find_latest"}, "machinable.execution.external.External.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.execution.external", "path": "machinable.execution.external.External.find_many"}, "machinable.execution.external.External.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.execution.external", "path": "machinable.execution.external.External.from_json"}, "machinable.execution.external.External.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.execution.external", "path": "machinable.execution.external.External.from_model"}, "machinable.execution.external.External.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.execution.external", "path": "machinable.execution.external.External.from_storage"}, "machinable.execution.external.External.instance": {"kind": "routine", "realname": "instance", "name": "machinable.execution.external", "path": "machinable.execution.external.External.instance"}, "machinable.execution.external.External.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.execution.external", "path": "machinable.execution.external.External.is_mounted"}, "machinable.execution.external.External.local": {"kind": "routine", "realname": "local", "name": "machinable.execution.external", "path": "machinable.execution.external.External.local"}, "machinable.execution.external.External.make": {"kind": "routine", "realname": "make", "name": "machinable.execution.external", "path": "machinable.execution.external.External.make"}, "machinable.execution.external.External.model": {"kind": "routine", "realname": "model", "name": "machinable.execution.external", "path": "machinable.execution.external.External.model"}, "machinable.execution.external.External.mount": {"kind": "routine", "realname": "mount", "name": "machinable.execution.external", "path": "machinable.execution.external.External.mount"}, "machinable.execution.external.External.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_after_dispatch"}, "machinable.execution.external.External.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_before_configure"}, "machinable.execution.external.External.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_before_dispatch"}, "machinable.execution.external.External.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_configure"}, "machinable.execution.external.External.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_dispatch"}, "machinable.execution.external.External.on_dispatch_experiment": {"kind": "routine", "realname": "on_dispatch_experiment", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_dispatch_experiment"}, "machinable.execution.external.External.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.execution.external", "path": "machinable.execution.external.External.on_instantiate"}, "machinable.execution.external.External.project_directory": {"kind": "routine", "realname": "project_directory", "name": "machinable.execution.external", "path": "machinable.execution.external.External.project_directory"}, "machinable.execution.external.External.project_source": {"kind": "routine", "realname": "project_source", "name": "machinable.execution.external", "path": "machinable.execution.external.External.project_source"}, "machinable.execution.external.External.python_command": {"kind": "routine", "realname": "python_command", "name": "machinable.execution.external", "path": "machinable.execution.external.External.python_command"}, "machinable.execution.external.External.resources": {"kind": "routine", "realname": "resources", "name": "machinable.execution.external", "path": "machinable.execution.external.External.resources"}, "machinable.execution.external.External.runner_command": {"kind": "routine", "realname": "runner_command", "name": "machinable.execution.external", "path": "machinable.execution.external.External.runner_command"}, "machinable.execution.external.External.script": {"kind": "routine", "realname": "script", "name": "machinable.execution.external", "path": "machinable.execution.external.External.script"}, "machinable.execution.external.External.script_body": {"kind": "routine", "realname": "script_body", "name": "machinable.execution.external", "path": "machinable.execution.external.External.script_body"}, "machinable.execution.external.External.script_command": {"kind": "routine", "realname": "script_command", "name": "machinable.execution.external", "path": "machinable.execution.external.External.script_command"}, "machinable.execution.external.External.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.execution.external", "path": "machinable.execution.external.External.serialize"}, "machinable.execution.external.External.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.execution.external", "path": "machinable.execution.external.External.set_default"}, "machinable.execution.external.External.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.execution.external", "path": "machinable.execution.external.External.set_model"}, "machinable.execution.external.External.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.execution.external", "path": "machinable.execution.external.External.singleton"}, "machinable.execution.external.External.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.execution.external", "path": "machinable.execution.external.External.unserialize"}, "machinable.execution.external.External.use": {"kind": "routine", "realname": "use", "name": "machinable.execution.external", "path": "machinable.execution.external.External.use"}, "machinable.execution.external.External": {"kind": "class", "realname": "External", "name": "machinable.execution.external", "path": "machinable.execution.external.External", "parents": ["machinable.execution.execution.Execution"]}, "machinable.execution.external": {"kind": "module", "name": "machinable.execution.external", "path": "machinable.execution.external"}, "machinable.execution.local.Local.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.as_json"}, "machinable.execution.local.Local.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.canonicalize_resources"}, "machinable.execution.local.Local.clone": {"kind": "routine", "realname": "clone", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.clone"}, "machinable.execution.local.Local.collect": {"kind": "routine", "realname": "collect", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.collect"}, "machinable.execution.local.Local.commit": {"kind": "routine", "realname": "commit", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.commit"}, "machinable.execution.local.Local.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.compute_resources"}, "machinable.execution.local.Local.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.default_resources"}, "machinable.execution.local.Local.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.dispatch"}, "machinable.execution.local.Local.find": {"kind": "routine", "realname": "find", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.find"}, "machinable.execution.local.Local.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.find_by_version"}, "machinable.execution.local.Local.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.find_latest"}, "machinable.execution.local.Local.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.find_many"}, "machinable.execution.local.Local.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.from_json"}, "machinable.execution.local.Local.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.from_model"}, "machinable.execution.local.Local.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.from_storage"}, "machinable.execution.local.Local.instance": {"kind": "routine", "realname": "instance", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.instance"}, "machinable.execution.local.Local.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.is_mounted"}, "machinable.execution.local.Local.local": {"kind": "routine", "realname": "local", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.local"}, "machinable.execution.local.Local.make": {"kind": "routine", "realname": "make", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.make"}, "machinable.execution.local.Local.model": {"kind": "routine", "realname": "model", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.model"}, "machinable.execution.local.Local.mount": {"kind": "routine", "realname": "mount", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.mount"}, "machinable.execution.local.Local.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_after_dispatch"}, "machinable.execution.local.Local.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_before_configure"}, "machinable.execution.local.Local.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_before_dispatch"}, "machinable.execution.local.Local.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_configure"}, "machinable.execution.local.Local.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_dispatch"}, "machinable.execution.local.Local.on_dispatch_experiment": {"kind": "routine", "realname": "on_dispatch_experiment", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_dispatch_experiment"}, "machinable.execution.local.Local.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.on_instantiate"}, "machinable.execution.local.Local.resources": {"kind": "routine", "realname": "resources", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.resources"}, "machinable.execution.local.Local.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.serialize"}, "machinable.execution.local.Local.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.set_default"}, "machinable.execution.local.Local.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.set_model"}, "machinable.execution.local.Local.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.singleton"}, "machinable.execution.local.Local.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.unserialize"}, "machinable.execution.local.Local.use": {"kind": "routine", "realname": "use", "name": "machinable.execution.local", "path": "machinable.execution.local.Local.use"}, "machinable.execution.local.Local": {"kind": "class", "realname": "Local", "name": "machinable.execution.local", "path": "machinable.execution.local.Local", "parents": ["machinable.execution.execution.Execution"]}, "machinable.execution.local": {"kind": "module", "name": "machinable.execution.local", "path": "machinable.execution.local"}, "machinable.execution.slurm.Slurm.after_script": {"kind": "routine", "realname": "after_script", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.after_script"}, "machinable.execution.slurm.Slurm.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.as_json"}, "machinable.execution.slurm.Slurm.before_script": {"kind": "routine", "realname": "before_script", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.before_script"}, "machinable.execution.slurm.Slurm.canonicalize_resources": {"kind": "routine", "realname": "canonicalize_resources", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.canonicalize_resources"}, "machinable.execution.slurm.Slurm.clone": {"kind": "routine", "realname": "clone", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.clone"}, "machinable.execution.slurm.Slurm.code": {"kind": "routine", "realname": "code", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.code"}, "machinable.execution.slurm.Slurm.collect": {"kind": "routine", "realname": "collect", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.collect"}, "machinable.execution.slurm.Slurm.commit": {"kind": "routine", "realname": "commit", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.commit"}, "machinable.execution.slurm.Slurm.compute_resources": {"kind": "routine", "realname": "compute_resources", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.compute_resources"}, "machinable.execution.slurm.Slurm.default_resources": {"kind": "routine", "realname": "default_resources", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.default_resources"}, "machinable.execution.slurm.Slurm.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.dispatch"}, "machinable.execution.slurm.Slurm.find": {"kind": "routine", "realname": "find", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.find"}, "machinable.execution.slurm.Slurm.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.find_by_version"}, "machinable.execution.slurm.Slurm.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.find_latest"}, "machinable.execution.slurm.Slurm.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.find_many"}, "machinable.execution.slurm.Slurm.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.from_json"}, "machinable.execution.slurm.Slurm.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.from_model"}, "machinable.execution.slurm.Slurm.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.from_storage"}, "machinable.execution.slurm.Slurm.instance": {"kind": "routine", "realname": "instance", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.instance"}, "machinable.execution.slurm.Slurm.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.is_mounted"}, "machinable.execution.slurm.Slurm.local": {"kind": "routine", "realname": "local", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.local"}, "machinable.execution.slurm.Slurm.make": {"kind": "routine", "realname": "make", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.make"}, "machinable.execution.slurm.Slurm.model": {"kind": "routine", "realname": "model", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.model"}, "machinable.execution.slurm.Slurm.mount": {"kind": "routine", "realname": "mount", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.mount"}, "machinable.execution.slurm.Slurm.on_after_dispatch": {"kind": "routine", "realname": "on_after_dispatch", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_after_dispatch"}, "machinable.execution.slurm.Slurm.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_before_configure"}, "machinable.execution.slurm.Slurm.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_before_dispatch"}, "machinable.execution.slurm.Slurm.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_configure"}, "machinable.execution.slurm.Slurm.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_dispatch"}, "machinable.execution.slurm.Slurm.on_dispatch_experiment": {"kind": "routine", "realname": "on_dispatch_experiment", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_dispatch_experiment"}, "machinable.execution.slurm.Slurm.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.on_instantiate"}, "machinable.execution.slurm.Slurm.project_directory": {"kind": "routine", "realname": "project_directory", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.project_directory"}, "machinable.execution.slurm.Slurm.project_source": {"kind": "routine", "realname": "project_source", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.project_source"}, "machinable.execution.slurm.Slurm.python_command": {"kind": "routine", "realname": "python_command", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.python_command"}, "machinable.execution.slurm.Slurm.resources": {"kind": "routine", "realname": "resources", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.resources"}, "machinable.execution.slurm.Slurm.runner_command": {"kind": "routine", "realname": "runner_command", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.runner_command"}, "machinable.execution.slurm.Slurm.script": {"kind": "routine", "realname": "script", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.script"}, "machinable.execution.slurm.Slurm.script_body": {"kind": "routine", "realname": "script_body", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.script_body"}, "machinable.execution.slurm.Slurm.script_command": {"kind": "routine", "realname": "script_command", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.script_command"}, "machinable.execution.slurm.Slurm.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.serialize"}, "machinable.execution.slurm.Slurm.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.set_default"}, "machinable.execution.slurm.Slurm.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.set_model"}, "machinable.execution.slurm.Slurm.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.singleton"}, "machinable.execution.slurm.Slurm.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.unserialize"}, "machinable.execution.slurm.Slurm.use": {"kind": "routine", "realname": "use", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm.use"}, "machinable.execution.slurm.Slurm": {"kind": "class", "realname": "Slurm", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm.Slurm", "parents": ["machinable.execution.external.External"]}, "machinable.execution.slurm": {"kind": "module", "name": "machinable.execution.slurm", "path": "machinable.execution.slurm"}, "machinable.experiment.Experiment.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.as_json"}, "machinable.experiment.Experiment.clone": {"kind": "routine", "realname": "clone", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.clone"}, "machinable.experiment.Experiment.collect": {"kind": "routine", "realname": "collect", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.collect"}, "machinable.experiment.Experiment.commit": {"kind": "routine", "realname": "commit", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.commit"}, "machinable.experiment.Experiment.created_at": {"kind": "routine", "realname": "created_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.created_at"}, "machinable.experiment.Experiment.derive": {"kind": "routine", "realname": "derive", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.derive"}, "machinable.experiment.Experiment.derive_modified": {"kind": "routine", "realname": "derive_modified", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.derive_modified"}, "machinable.experiment.Experiment.derive_singleton": {"kind": "routine", "realname": "derive_singleton", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.derive_singleton"}, "machinable.experiment.Experiment.dispatch": {"kind": "routine", "realname": "dispatch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.dispatch"}, "machinable.experiment.Experiment.execute": {"kind": "routine", "realname": "execute", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.execute"}, "machinable.experiment.Experiment.find": {"kind": "routine", "realname": "find", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find"}, "machinable.experiment.Experiment.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find_by_version"}, "machinable.experiment.Experiment.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find_latest"}, "machinable.experiment.Experiment.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.find_many"}, "machinable.experiment.Experiment.finished_at": {"kind": "routine", "realname": "finished_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.finished_at"}, "machinable.experiment.Experiment.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.from_json"}, "machinable.experiment.Experiment.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.from_model"}, "machinable.experiment.Experiment.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.from_storage"}, "machinable.experiment.Experiment.group_as": {"kind": "routine", "realname": "group_as", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.group_as"}, "machinable.experiment.Experiment.heartbeat_at": {"kind": "routine", "realname": "heartbeat_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.heartbeat_at"}, "machinable.experiment.Experiment.instance": {"kind": "routine", "realname": "instance", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.instance"}, "machinable.experiment.Experiment.is_active": {"kind": "routine", "realname": "is_active", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_active"}, "machinable.experiment.Experiment.is_finished": {"kind": "routine", "realname": "is_finished", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_finished"}, "machinable.experiment.Experiment.is_incomplete": {"kind": "routine", "realname": "is_incomplete", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_incomplete"}, "machinable.experiment.Experiment.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_mounted"}, "machinable.experiment.Experiment.is_started": {"kind": "routine", "realname": "is_started", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.is_started"}, "machinable.experiment.Experiment.load_data": {"kind": "routine", "realname": "load_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.load_data"}, "machinable.experiment.Experiment.load_execution_data": {"kind": "routine", "realname": "load_execution_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.load_execution_data"}, "machinable.experiment.Experiment.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.load_file"}, "machinable.experiment.Experiment.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.local_directory"}, "machinable.experiment.Experiment.make": {"kind": "routine", "realname": "make", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.make"}, "machinable.experiment.Experiment.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.mark_started"}, "machinable.experiment.Experiment.model": {"kind": "routine", "realname": "model", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.model"}, "machinable.experiment.Experiment.mount": {"kind": "routine", "realname": "mount", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.mount"}, "machinable.experiment.Experiment.on_after_create": {"kind": "routine", "realname": "on_after_create", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_create"}, "machinable.experiment.Experiment.on_after_destroy": {"kind": "routine", "realname": "on_after_destroy", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_destroy"}, "machinable.experiment.Experiment.on_after_execute": {"kind": "routine", "realname": "on_after_execute", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_execute"}, "machinable.experiment.Experiment.on_after_execute_iteration": {"kind": "routine", "realname": "on_after_execute_iteration", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_after_execute_iteration"}, "machinable.experiment.Experiment.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_configure"}, "machinable.experiment.Experiment.on_before_create": {"kind": "routine", "realname": "on_before_create", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_create"}, "machinable.experiment.Experiment.on_before_destroy": {"kind": "routine", "realname": "on_before_destroy", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_destroy"}, "machinable.experiment.Experiment.on_before_dispatch": {"kind": "routine", "realname": "on_before_dispatch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_dispatch"}, "machinable.experiment.Experiment.on_before_execute": {"kind": "routine", "realname": "on_before_execute", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_before_execute"}, "machinable.experiment.Experiment.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_configure"}, "machinable.experiment.Experiment.on_create": {"kind": "routine", "realname": "on_create", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_create"}, "machinable.experiment.Experiment.on_destroy": {"kind": "routine", "realname": "on_destroy", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_destroy"}, "machinable.experiment.Experiment.on_dispatch": {"kind": "routine", "realname": "on_dispatch", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_dispatch"}, "machinable.experiment.Experiment.on_execute": {"kind": "routine", "realname": "on_execute", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_execute"}, "machinable.experiment.Experiment.on_failure": {"kind": "routine", "realname": "on_failure", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_failure"}, "machinable.experiment.Experiment.on_finish": {"kind": "routine", "realname": "on_finish", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_finish"}, "machinable.experiment.Experiment.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_instantiate"}, "machinable.experiment.Experiment.on_seeding": {"kind": "routine", "realname": "on_seeding", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_seeding"}, "machinable.experiment.Experiment.on_success": {"kind": "routine", "realname": "on_success", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.on_success"}, "machinable.experiment.Experiment.output": {"kind": "routine", "realname": "output", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.output"}, "machinable.experiment.Experiment.record": {"kind": "routine", "realname": "record", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.record"}, "machinable.experiment.Experiment.records": {"kind": "routine", "realname": "records", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.records"}, "machinable.experiment.Experiment.resources": {"kind": "routine", "realname": "resources", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.resources"}, "machinable.experiment.Experiment.save_data": {"kind": "routine", "realname": "save_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.save_data"}, "machinable.experiment.Experiment.save_execution_data": {"kind": "routine", "realname": "save_execution_data", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.save_execution_data"}, "machinable.experiment.Experiment.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.save_file"}, "machinable.experiment.Experiment.save_host_info": {"kind": "routine", "realname": "save_host_info", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.save_host_info"}, "machinable.experiment.Experiment.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.serialize"}, "machinable.experiment.Experiment.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.set_default"}, "machinable.experiment.Experiment.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.set_model"}, "machinable.experiment.Experiment.set_seed": {"kind": "routine", "realname": "set_seed", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.set_seed"}, "machinable.experiment.Experiment.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.singleton"}, "machinable.experiment.Experiment.started_at": {"kind": "routine", "realname": "started_at", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.started_at"}, "machinable.experiment.Experiment.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.unserialize"}, "machinable.experiment.Experiment.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.update_heartbeat"}, "machinable.experiment.Experiment.use": {"kind": "routine", "realname": "use", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.use"}, "machinable.experiment.Experiment.version": {"kind": "routine", "realname": "version", "name": "machinable.experiment", "path": "machinable.experiment.Experiment.version"}, "machinable.experiment.Experiment": {"kind": "class", "realname": "Experiment", "name": "machinable.experiment", "path": "machinable.experiment.Experiment", "parents": ["machinable.element.Element"]}, "machinable.experiment": {"kind": "module", "name": "machinable.experiment", "path": "machinable.experiment"}, "machinable.group.Group.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.group", "path": "machinable.group.Group.as_json"}, "machinable.group.Group.clone": {"kind": "routine", "realname": "clone", "name": "machinable.group", "path": "machinable.group.Group.clone"}, "machinable.group.Group.collect": {"kind": "routine", "realname": "collect", "name": "machinable.group", "path": "machinable.group.Group.collect"}, "machinable.group.Group.find": {"kind": "routine", "realname": "find", "name": "machinable.group", "path": "machinable.group.Group.find"}, "machinable.group.Group.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.group", "path": "machinable.group.Group.find_by_version"}, "machinable.group.Group.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.group", "path": "machinable.group.Group.find_latest"}, "machinable.group.Group.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.group", "path": "machinable.group.Group.find_many"}, "machinable.group.Group.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.group", "path": "machinable.group.Group.from_json"}, "machinable.group.Group.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.group", "path": "machinable.group.Group.from_model"}, "machinable.group.Group.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.group", "path": "machinable.group.Group.from_storage"}, "machinable.group.Group.instance": {"kind": "routine", "realname": "instance", "name": "machinable.group", "path": "machinable.group.Group.instance"}, "machinable.group.Group.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.group", "path": "machinable.group.Group.is_mounted"}, "machinable.group.Group.make": {"kind": "routine", "realname": "make", "name": "machinable.group", "path": "machinable.group.Group.make"}, "machinable.group.Group.model": {"kind": "routine", "realname": "model", "name": "machinable.group", "path": "machinable.group.Group.model"}, "machinable.group.Group.mount": {"kind": "routine", "realname": "mount", "name": "machinable.group", "path": "machinable.group.Group.mount"}, "machinable.group.Group.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.group", "path": "machinable.group.Group.on_before_configure"}, "machinable.group.Group.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.group", "path": "machinable.group.Group.on_configure"}, "machinable.group.Group.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.group", "path": "machinable.group.Group.on_instantiate"}, "machinable.group.Group.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.group", "path": "machinable.group.Group.serialize"}, "machinable.group.Group.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.group", "path": "machinable.group.Group.set_default"}, "machinable.group.Group.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.group", "path": "machinable.group.Group.set_model"}, "machinable.group.Group.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.group", "path": "machinable.group.Group.singleton"}, "machinable.group.Group.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.group", "path": "machinable.group.Group.unserialize"}, "machinable.group.Group": {"kind": "class", "realname": "Group", "name": "machinable.group", "path": "machinable.group.Group", "parents": ["machinable.element.Element"]}, "machinable.group.normgroup": {"kind": "routine", "realname": "normgroup", "name": "machinable.group", "path": "machinable.group.normgroup"}, "machinable.group.resolve_group": {"kind": "routine", "realname": "resolve_group", "name": "machinable.group", "path": "machinable.group.resolve_group"}, "machinable.group": {"kind": "module", "name": "machinable.group", "path": "machinable.group"}, "machinable.project.Project.add_to_path": {"kind": "routine", "realname": "add_to_path", "name": "machinable.project", "path": "machinable.project.Project.add_to_path"}, "machinable.project.Project.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.project", "path": "machinable.project.Project.as_json"}, "machinable.project.Project.clone": {"kind": "routine", "realname": "clone", "name": "machinable.project", "path": "machinable.project.Project.clone"}, "machinable.project.Project.close": {"kind": "routine", "realname": "close", "name": "machinable.project", "path": "machinable.project.Project.close"}, "machinable.project.Project.collect": {"kind": "routine", "realname": "collect", "name": "machinable.project", "path": "machinable.project.Project.collect"}, "machinable.project.Project.connect": {"kind": "routine", "realname": "connect", "name": "machinable.project", "path": "machinable.project.Project.connect"}, "machinable.project.Project.element": {"kind": "routine", "realname": "element", "name": "machinable.project", "path": "machinable.project.Project.element"}, "machinable.project.Project.exists": {"kind": "routine", "realname": "exists", "name": "machinable.project", "path": "machinable.project.Project.exists"}, "machinable.project.Project.find": {"kind": "routine", "realname": "find", "name": "machinable.project", "path": "machinable.project.Project.find"}, "machinable.project.Project.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.project", "path": "machinable.project.Project.find_by_version"}, "machinable.project.Project.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.project", "path": "machinable.project.Project.find_latest"}, "machinable.project.Project.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.project", "path": "machinable.project.Project.find_many"}, "machinable.project.Project.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.project", "path": "machinable.project.Project.from_json"}, "machinable.project.Project.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.project", "path": "machinable.project.Project.from_model"}, "machinable.project.Project.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.project", "path": "machinable.project.Project.from_storage"}, "machinable.project.Project.get": {"kind": "routine", "realname": "get", "name": "machinable.project", "path": "machinable.project.Project.get"}, "machinable.project.Project.get_code_version": {"kind": "routine", "realname": "get_code_version", "name": "machinable.project", "path": "machinable.project.Project.get_code_version"}, "machinable.project.Project.get_diff": {"kind": "routine", "realname": "get_diff", "name": "machinable.project", "path": "machinable.project.Project.get_diff"}, "machinable.project.Project.get_host_info": {"kind": "routine", "realname": "get_host_info", "name": "machinable.project", "path": "machinable.project.Project.get_host_info"}, "machinable.project.Project.get_root": {"kind": "routine", "realname": "get_root", "name": "machinable.project", "path": "machinable.project.Project.get_root"}, "machinable.project.Project.get_vendors": {"kind": "routine", "realname": "get_vendors", "name": "machinable.project", "path": "machinable.project.Project.get_vendors"}, "machinable.project.Project.instance": {"kind": "routine", "realname": "instance", "name": "machinable.project", "path": "machinable.project.Project.instance"}, "machinable.project.Project.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.project", "path": "machinable.project.Project.is_mounted"}, "machinable.project.Project.is_root": {"kind": "routine", "realname": "is_root", "name": "machinable.project", "path": "machinable.project.Project.is_root"}, "machinable.project.Project.make": {"kind": "routine", "realname": "make", "name": "machinable.project", "path": "machinable.project.Project.make"}, "machinable.project.Project.model": {"kind": "routine", "realname": "model", "name": "machinable.project", "path": "machinable.project.Project.model"}, "machinable.project.Project.mount": {"kind": "routine", "realname": "mount", "name": "machinable.project", "path": "machinable.project.Project.mount"}, "machinable.project.Project.name": {"kind": "routine", "realname": "name", "name": "machinable.project", "path": "machinable.project.Project.name"}, "machinable.project.Project.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.project", "path": "machinable.project.Project.on_before_configure"}, "machinable.project.Project.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.project", "path": "machinable.project.Project.on_configure"}, "machinable.project.Project.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.project", "path": "machinable.project.Project.on_instantiate"}, "machinable.project.Project.on_resolve_element": {"kind": "routine", "realname": "on_resolve_element", "name": "machinable.project", "path": "machinable.project.Project.on_resolve_element"}, "machinable.project.Project.on_resolve_vendor": {"kind": "routine", "realname": "on_resolve_vendor", "name": "machinable.project", "path": "machinable.project.Project.on_resolve_vendor"}, "machinable.project.Project.path": {"kind": "routine", "realname": "path", "name": "machinable.project", "path": "machinable.project.Project.path"}, "machinable.project.Project.provider": {"kind": "routine", "realname": "provider", "name": "machinable.project", "path": "machinable.project.Project.provider"}, "machinable.project.Project.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.project", "path": "machinable.project.Project.serialize"}, "machinable.project.Project.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.project", "path": "machinable.project.Project.set_default"}, "machinable.project.Project.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.project", "path": "machinable.project.Project.set_model"}, "machinable.project.Project.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.project", "path": "machinable.project.Project.singleton"}, "machinable.project.Project.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.project", "path": "machinable.project.Project.unserialize"}, "machinable.project.Project": {"kind": "class", "realname": "Project", "name": "machinable.project", "path": "machinable.project.Project", "parents": ["machinable.element.Connectable", "machinable.element.Element"]}, "machinable.project.fetch_directory": {"kind": "routine", "realname": "fetch_directory", "name": "machinable.project", "path": "machinable.project.fetch_directory"}, "machinable.project.fetch_git": {"kind": "routine", "realname": "fetch_git", "name": "machinable.project", "path": "machinable.project.fetch_git"}, "machinable.project.fetch_link": {"kind": "routine", "realname": "fetch_link", "name": "machinable.project", "path": "machinable.project.fetch_link"}, "machinable.project.fetch_vendor": {"kind": "routine", "realname": "fetch_vendor", "name": "machinable.project", "path": "machinable.project.fetch_vendor"}, "machinable.project.fetch_vendors": {"kind": "routine", "realname": "fetch_vendors", "name": "machinable.project", "path": "machinable.project.fetch_vendors"}, "machinable.project": {"kind": "module", "name": "machinable.project", "path": "machinable.project"}, "machinable.record.Record.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.record", "path": "machinable.record.Record.as_json"}, "machinable.record.Record.clone": {"kind": "routine", "realname": "clone", "name": "machinable.record", "path": "machinable.record.Record.clone"}, "machinable.record.Record.collect": {"kind": "routine", "realname": "collect", "name": "machinable.record", "path": "machinable.record.Record.collect"}, "machinable.record.Record.empty": {"kind": "routine", "realname": "empty", "name": "machinable.record", "path": "machinable.record.Record.empty"}, "machinable.record.Record.find": {"kind": "routine", "realname": "find", "name": "machinable.record", "path": "machinable.record.Record.find"}, "machinable.record.Record.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.record", "path": "machinable.record.Record.find_by_version"}, "machinable.record.Record.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.record", "path": "machinable.record.Record.find_latest"}, "machinable.record.Record.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.record", "path": "machinable.record.Record.find_many"}, "machinable.record.Record.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.record", "path": "machinable.record.Record.from_json"}, "machinable.record.Record.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.record", "path": "machinable.record.Record.from_model"}, "machinable.record.Record.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.record", "path": "machinable.record.Record.from_storage"}, "machinable.record.Record.instance": {"kind": "routine", "realname": "instance", "name": "machinable.record", "path": "machinable.record.Record.instance"}, "machinable.record.Record.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.record", "path": "machinable.record.Record.is_mounted"}, "machinable.record.Record.make": {"kind": "routine", "realname": "make", "name": "machinable.record", "path": "machinable.record.Record.make"}, "machinable.record.Record.model": {"kind": "routine", "realname": "model", "name": "machinable.record", "path": "machinable.record.Record.model"}, "machinable.record.Record.mount": {"kind": "routine", "realname": "mount", "name": "machinable.record", "path": "machinable.record.Record.mount"}, "machinable.record.Record.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.record", "path": "machinable.record.Record.on_before_configure"}, "machinable.record.Record.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.record", "path": "machinable.record.Record.on_configure"}, "machinable.record.Record.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.record", "path": "machinable.record.Record.on_instantiate"}, "machinable.record.Record.save": {"kind": "routine", "realname": "save", "name": "machinable.record", "path": "machinable.record.Record.save"}, "machinable.record.Record.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.record", "path": "machinable.record.Record.serialize"}, "machinable.record.Record.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.record", "path": "machinable.record.Record.set_default"}, "machinable.record.Record.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.record", "path": "machinable.record.Record.set_model"}, "machinable.record.Record.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.record", "path": "machinable.record.Record.singleton"}, "machinable.record.Record.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.record", "path": "machinable.record.Record.unserialize"}, "machinable.record.Record.update": {"kind": "routine", "realname": "update", "name": "machinable.record", "path": "machinable.record.Record.update"}, "machinable.record.Record.write": {"kind": "routine", "realname": "write", "name": "machinable.record", "path": "machinable.record.Record.write"}, "machinable.record.Record": {"kind": "class", "realname": "Record", "name": "machinable.record", "path": "machinable.record.Record", "parents": ["machinable.element.Element"]}, "machinable.record": {"kind": "module", "name": "machinable.record", "path": "machinable.record"}, "machinable.schema.Element.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.construct"}, "machinable.schema.Element.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Element.copy"}, "machinable.schema.Element.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Element.dict"}, "machinable.schema.Element.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.from_orm"}, "machinable.schema.Element.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Element.json"}, "machinable.schema.Element.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.parse_file"}, "machinable.schema.Element.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.parse_obj"}, "machinable.schema.Element.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.parse_raw"}, "machinable.schema.Element.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.schema"}, "machinable.schema.Element.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.schema_json"}, "machinable.schema.Element.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.update_forward_refs"}, "machinable.schema.Element.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Element.validate"}, "machinable.schema.Element": {"kind": "class", "realname": "Element", "name": "machinable.schema", "path": "machinable.schema.Element", "parents": ["pydantic.main.BaseModel"]}, "machinable.schema.Execution.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.construct"}, "machinable.schema.Execution.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Execution.copy"}, "machinable.schema.Execution.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Execution.dict"}, "machinable.schema.Execution.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.from_orm"}, "machinable.schema.Execution.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Execution.json"}, "machinable.schema.Execution.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.parse_file"}, "machinable.schema.Execution.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.parse_obj"}, "machinable.schema.Execution.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.parse_raw"}, "machinable.schema.Execution.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.schema"}, "machinable.schema.Execution.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.schema_json"}, "machinable.schema.Execution.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.update_forward_refs"}, "machinable.schema.Execution.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Execution.validate"}, "machinable.schema.Execution": {"kind": "class", "realname": "Execution", "name": "machinable.schema", "path": "machinable.schema.Execution", "parents": ["Element"]}, "machinable.schema.Experiment.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.construct"}, "machinable.schema.Experiment.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Experiment.copy"}, "machinable.schema.Experiment.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Experiment.dict"}, "machinable.schema.Experiment.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.from_orm"}, "machinable.schema.Experiment.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Experiment.json"}, "machinable.schema.Experiment.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.parse_file"}, "machinable.schema.Experiment.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.parse_obj"}, "machinable.schema.Experiment.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.parse_raw"}, "machinable.schema.Experiment.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.schema"}, "machinable.schema.Experiment.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.schema_json"}, "machinable.schema.Experiment.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.update_forward_refs"}, "machinable.schema.Experiment.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Experiment.validate"}, "machinable.schema.Experiment": {"kind": "class", "realname": "Experiment", "name": "machinable.schema", "path": "machinable.schema.Experiment", "parents": ["Element"]}, "machinable.schema.Group.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.construct"}, "machinable.schema.Group.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Group.copy"}, "machinable.schema.Group.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Group.dict"}, "machinable.schema.Group.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.from_orm"}, "machinable.schema.Group.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Group.json"}, "machinable.schema.Group.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.parse_file"}, "machinable.schema.Group.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.parse_obj"}, "machinable.schema.Group.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.parse_raw"}, "machinable.schema.Group.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.schema"}, "machinable.schema.Group.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.schema_json"}, "machinable.schema.Group.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.update_forward_refs"}, "machinable.schema.Group.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Group.validate"}, "machinable.schema.Group": {"kind": "class", "realname": "Group", "name": "machinable.schema", "path": "machinable.schema.Group", "parents": ["Element"]}, "machinable.schema.Project.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.construct"}, "machinable.schema.Project.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Project.copy"}, "machinable.schema.Project.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Project.dict"}, "machinable.schema.Project.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.from_orm"}, "machinable.schema.Project.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Project.json"}, "machinable.schema.Project.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.parse_file"}, "machinable.schema.Project.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.parse_obj"}, "machinable.schema.Project.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.parse_raw"}, "machinable.schema.Project.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.schema"}, "machinable.schema.Project.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.schema_json"}, "machinable.schema.Project.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.update_forward_refs"}, "machinable.schema.Project.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Project.validate"}, "machinable.schema.Project": {"kind": "class", "realname": "Project", "name": "machinable.schema", "path": "machinable.schema.Project", "parents": ["Element"]}, "machinable.schema.Record.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.construct"}, "machinable.schema.Record.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Record.copy"}, "machinable.schema.Record.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Record.dict"}, "machinable.schema.Record.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.from_orm"}, "machinable.schema.Record.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Record.json"}, "machinable.schema.Record.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.parse_file"}, "machinable.schema.Record.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.parse_obj"}, "machinable.schema.Record.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.parse_raw"}, "machinable.schema.Record.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.schema"}, "machinable.schema.Record.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.schema_json"}, "machinable.schema.Record.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.update_forward_refs"}, "machinable.schema.Record.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Record.validate"}, "machinable.schema.Record": {"kind": "class", "realname": "Record", "name": "machinable.schema", "path": "machinable.schema.Record", "parents": ["Element"]}, "machinable.schema.Storage.construct": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.construct"}, "machinable.schema.Storage.copy": {"kind": "routine", "realname": "copy", "name": "machinable.schema", "path": "machinable.schema.Storage.copy"}, "machinable.schema.Storage.dict": {"kind": "routine", "realname": "dict", "name": "machinable.schema", "path": "machinable.schema.Storage.dict"}, "machinable.schema.Storage.from_orm": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.from_orm"}, "machinable.schema.Storage.json": {"kind": "routine", "realname": "json", "name": "machinable.schema", "path": "machinable.schema.Storage.json"}, "machinable.schema.Storage.parse_file": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.parse_file"}, "machinable.schema.Storage.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.parse_obj"}, "machinable.schema.Storage.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.parse_raw"}, "machinable.schema.Storage.schema": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.schema"}, "machinable.schema.Storage.schema_json": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.schema_json"}, "machinable.schema.Storage.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.update_forward_refs"}, "machinable.schema.Storage.validate": {"kind": "routine", "realname": null, "name": "machinable.schema", "path": "machinable.schema.Storage.validate"}, "machinable.schema.Storage": {"kind": "class", "realname": "Storage", "name": "machinable.schema", "path": "machinable.schema.Storage", "parents": ["Element"]}, "machinable.schema": {"kind": "module", "name": "machinable.schema", "path": "machinable.schema"}, "machinable.settings.Settings.construct": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.construct"}, "machinable.settings.Settings.copy": {"kind": "routine", "realname": "copy", "name": "machinable.settings", "path": "machinable.settings.Settings.copy"}, "machinable.settings.Settings.dict": {"kind": "routine", "realname": "dict", "name": "machinable.settings", "path": "machinable.settings.Settings.dict"}, "machinable.settings.Settings.from_orm": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.from_orm"}, "machinable.settings.Settings.json": {"kind": "routine", "realname": "json", "name": "machinable.settings", "path": "machinable.settings.Settings.json"}, "machinable.settings.Settings.parse_file": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.parse_file"}, "machinable.settings.Settings.parse_obj": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.parse_obj"}, "machinable.settings.Settings.parse_raw": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.parse_raw"}, "machinable.settings.Settings.schema": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.schema"}, "machinable.settings.Settings.schema_json": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.schema_json"}, "machinable.settings.Settings.update_forward_refs": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.update_forward_refs"}, "machinable.settings.Settings.validate": {"kind": "routine", "realname": null, "name": "machinable.settings", "path": "machinable.settings.Settings.validate"}, "machinable.settings.Settings": {"kind": "class", "realname": "Settings", "name": "machinable.settings", "path": "machinable.settings.Settings", "parents": ["pydantic.main.BaseModel"]}, "machinable.settings.get_settings": {"kind": "routine", "realname": "get_settings", "name": "machinable.settings", "path": "machinable.settings.get_settings"}, "machinable.settings": {"kind": "module", "name": "machinable.settings", "path": "machinable.settings"}, "machinable.storage": {"kind": "module", "name": "machinable.storage", "path": "machinable.storage"}, "machinable.storage.filesystem.Filesystem.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.as_json"}, "machinable.storage.filesystem.Filesystem.clone": {"kind": "routine", "realname": "clone", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.clone"}, "machinable.storage.filesystem.Filesystem.close": {"kind": "routine", "realname": "close", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.close"}, "machinable.storage.filesystem.Filesystem.collect": {"kind": "routine", "realname": "collect", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.collect"}, "machinable.storage.filesystem.Filesystem.commit": {"kind": "routine", "realname": "commit", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.commit"}, "machinable.storage.filesystem.Filesystem.connect": {"kind": "routine", "realname": "connect", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.connect"}, "machinable.storage.filesystem.Filesystem.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_element"}, "machinable.storage.filesystem.Filesystem.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_execution"}, "machinable.storage.filesystem.Filesystem.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_experiment"}, "machinable.storage.filesystem.Filesystem.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_file"}, "machinable.storage.filesystem.Filesystem.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_group"}, "machinable.storage.filesystem.Filesystem.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_project"}, "machinable.storage.filesystem.Filesystem.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.create_record"}, "machinable.storage.filesystem.Filesystem.filesystem": {"kind": "routine", "realname": "filesystem", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.filesystem"}, "machinable.storage.filesystem.Filesystem.find": {"kind": "routine", "realname": "find", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find"}, "machinable.storage.filesystem.Filesystem.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_by_version"}, "machinable.storage.filesystem.Filesystem.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_experiment"}, "machinable.storage.filesystem.Filesystem.find_experiment_by_version": {"kind": "routine", "realname": "find_experiment_by_version", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_experiment_by_version"}, "machinable.storage.filesystem.Filesystem.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_latest"}, "machinable.storage.filesystem.Filesystem.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_many"}, "machinable.storage.filesystem.Filesystem.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.find_related"}, "machinable.storage.filesystem.Filesystem.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.from_json"}, "machinable.storage.filesystem.Filesystem.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.from_model"}, "machinable.storage.filesystem.Filesystem.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.from_storage"}, "machinable.storage.filesystem.Filesystem.get": {"kind": "routine", "realname": "get", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.get"}, "machinable.storage.filesystem.Filesystem.instance": {"kind": "routine", "realname": "instance", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.instance"}, "machinable.storage.filesystem.Filesystem.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.is_mounted"}, "machinable.storage.filesystem.Filesystem.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.local_directory"}, "machinable.storage.filesystem.Filesystem.make": {"kind": "routine", "realname": "make", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.make"}, "machinable.storage.filesystem.Filesystem.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.mark_started"}, "machinable.storage.filesystem.Filesystem.model": {"kind": "routine", "realname": "model", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.model"}, "machinable.storage.filesystem.Filesystem.mount": {"kind": "routine", "realname": "mount", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.mount"}, "machinable.storage.filesystem.Filesystem.multiple": {"kind": "routine", "realname": "multiple", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.multiple"}, "machinable.storage.filesystem.Filesystem.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_before_configure"}, "machinable.storage.filesystem.Filesystem.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_configure"}, "machinable.storage.filesystem.Filesystem.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.on_instantiate"}, "machinable.storage.filesystem.Filesystem.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_element"}, "machinable.storage.filesystem.Filesystem.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_elements"}, "machinable.storage.filesystem.Filesystem.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_execution"}, "machinable.storage.filesystem.Filesystem.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_executions"}, "machinable.storage.filesystem.Filesystem.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_experiment"}, "machinable.storage.filesystem.Filesystem.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_experiments"}, "machinable.storage.filesystem.Filesystem.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_file"}, "machinable.storage.filesystem.Filesystem.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_group"}, "machinable.storage.filesystem.Filesystem.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_output"}, "machinable.storage.filesystem.Filesystem.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_project"}, "machinable.storage.filesystem.Filesystem.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_records"}, "machinable.storage.filesystem.Filesystem.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_related"}, "machinable.storage.filesystem.Filesystem.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.retrieve_status"}, "machinable.storage.filesystem.Filesystem.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.serialize"}, "machinable.storage.filesystem.Filesystem.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.set_default"}, "machinable.storage.filesystem.Filesystem.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.set_model"}, "machinable.storage.filesystem.Filesystem.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.singleton"}, "machinable.storage.filesystem.Filesystem.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.unserialize"}, "machinable.storage.filesystem.Filesystem.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem.update_heartbeat"}, "machinable.storage.filesystem.Filesystem": {"kind": "class", "realname": "Filesystem", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem.Filesystem", "parents": ["machinable.storage.storage.Storage"]}, "machinable.storage.filesystem": {"kind": "module", "name": "machinable.storage.filesystem", "path": "machinable.storage.filesystem"}, "machinable.storage.multiple.Multiple.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.as_json"}, "machinable.storage.multiple.Multiple.clone": {"kind": "routine", "realname": "clone", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.clone"}, "machinable.storage.multiple.Multiple.close": {"kind": "routine", "realname": "close", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.close"}, "machinable.storage.multiple.Multiple.collect": {"kind": "routine", "realname": "collect", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.collect"}, "machinable.storage.multiple.Multiple.commit": {"kind": "routine", "realname": "commit", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.commit"}, "machinable.storage.multiple.Multiple.connect": {"kind": "routine", "realname": "connect", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.connect"}, "machinable.storage.multiple.Multiple.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_element"}, "machinable.storage.multiple.Multiple.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_execution"}, "machinable.storage.multiple.Multiple.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_experiment"}, "machinable.storage.multiple.Multiple.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_file"}, "machinable.storage.multiple.Multiple.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_group"}, "machinable.storage.multiple.Multiple.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_project"}, "machinable.storage.multiple.Multiple.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.create_record"}, "machinable.storage.multiple.Multiple.filesystem": {"kind": "routine", "realname": "filesystem", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.filesystem"}, "machinable.storage.multiple.Multiple.find": {"kind": "routine", "realname": "find", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find"}, "machinable.storage.multiple.Multiple.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_by_version"}, "machinable.storage.multiple.Multiple.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_experiment"}, "machinable.storage.multiple.Multiple.find_experiment_by_version": {"kind": "routine", "realname": "find_experiment_by_version", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_experiment_by_version"}, "machinable.storage.multiple.Multiple.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_latest"}, "machinable.storage.multiple.Multiple.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_many"}, "machinable.storage.multiple.Multiple.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.find_related"}, "machinable.storage.multiple.Multiple.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.from_json"}, "machinable.storage.multiple.Multiple.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.from_model"}, "machinable.storage.multiple.Multiple.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.from_storage"}, "machinable.storage.multiple.Multiple.get": {"kind": "routine", "realname": "get", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.get"}, "machinable.storage.multiple.Multiple.instance": {"kind": "routine", "realname": "instance", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.instance"}, "machinable.storage.multiple.Multiple.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.is_mounted"}, "machinable.storage.multiple.Multiple.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.local_directory"}, "machinable.storage.multiple.Multiple.make": {"kind": "routine", "realname": "make", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.make"}, "machinable.storage.multiple.Multiple.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.mark_started"}, "machinable.storage.multiple.Multiple.model": {"kind": "routine", "realname": "model", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.model"}, "machinable.storage.multiple.Multiple.mount": {"kind": "routine", "realname": "mount", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.mount"}, "machinable.storage.multiple.Multiple.multiple": {"kind": "routine", "realname": "multiple", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.multiple"}, "machinable.storage.multiple.Multiple.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_before_configure"}, "machinable.storage.multiple.Multiple.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_configure"}, "machinable.storage.multiple.Multiple.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.on_instantiate"}, "machinable.storage.multiple.Multiple.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_element"}, "machinable.storage.multiple.Multiple.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_elements"}, "machinable.storage.multiple.Multiple.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_execution"}, "machinable.storage.multiple.Multiple.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_executions"}, "machinable.storage.multiple.Multiple.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_experiment"}, "machinable.storage.multiple.Multiple.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_experiments"}, "machinable.storage.multiple.Multiple.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_file"}, "machinable.storage.multiple.Multiple.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_group"}, "machinable.storage.multiple.Multiple.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_output"}, "machinable.storage.multiple.Multiple.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_project"}, "machinable.storage.multiple.Multiple.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_records"}, "machinable.storage.multiple.Multiple.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_related"}, "machinable.storage.multiple.Multiple.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.retrieve_status"}, "machinable.storage.multiple.Multiple.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.serialize"}, "machinable.storage.multiple.Multiple.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.set_default"}, "machinable.storage.multiple.Multiple.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.set_model"}, "machinable.storage.multiple.Multiple.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.singleton"}, "machinable.storage.multiple.Multiple.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.unserialize"}, "machinable.storage.multiple.Multiple.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple.update_heartbeat"}, "machinable.storage.multiple.Multiple": {"kind": "class", "realname": "Multiple", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple.Multiple", "parents": ["machinable.storage.storage.Storage"]}, "machinable.storage.multiple": {"kind": "module", "name": "machinable.storage.multiple", "path": "machinable.storage.multiple"}, "machinable.storage.storage.Storage.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.as_json"}, "machinable.storage.storage.Storage.clone": {"kind": "routine", "realname": "clone", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.clone"}, "machinable.storage.storage.Storage.close": {"kind": "routine", "realname": "close", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.close"}, "machinable.storage.storage.Storage.collect": {"kind": "routine", "realname": "collect", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.collect"}, "machinable.storage.storage.Storage.commit": {"kind": "routine", "realname": "commit", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.commit"}, "machinable.storage.storage.Storage.connect": {"kind": "routine", "realname": "connect", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.connect"}, "machinable.storage.storage.Storage.create_element": {"kind": "routine", "realname": "create_element", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_element"}, "machinable.storage.storage.Storage.create_execution": {"kind": "routine", "realname": "create_execution", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_execution"}, "machinable.storage.storage.Storage.create_experiment": {"kind": "routine", "realname": "create_experiment", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_experiment"}, "machinable.storage.storage.Storage.create_file": {"kind": "routine", "realname": "create_file", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_file"}, "machinable.storage.storage.Storage.create_group": {"kind": "routine", "realname": "create_group", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_group"}, "machinable.storage.storage.Storage.create_project": {"kind": "routine", "realname": "create_project", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_project"}, "machinable.storage.storage.Storage.create_record": {"kind": "routine", "realname": "create_record", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.create_record"}, "machinable.storage.storage.Storage.filesystem": {"kind": "routine", "realname": "filesystem", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.filesystem"}, "machinable.storage.storage.Storage.find": {"kind": "routine", "realname": "find", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find"}, "machinable.storage.storage.Storage.find_by_version": {"kind": "routine", "realname": "find_by_version", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_by_version"}, "machinable.storage.storage.Storage.find_experiment": {"kind": "routine", "realname": "find_experiment", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_experiment"}, "machinable.storage.storage.Storage.find_experiment_by_version": {"kind": "routine", "realname": "find_experiment_by_version", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_experiment_by_version"}, "machinable.storage.storage.Storage.find_latest": {"kind": "routine", "realname": "find_latest", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_latest"}, "machinable.storage.storage.Storage.find_many": {"kind": "routine", "realname": "find_many", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_many"}, "machinable.storage.storage.Storage.find_related": {"kind": "routine", "realname": "find_related", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.find_related"}, "machinable.storage.storage.Storage.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.from_json"}, "machinable.storage.storage.Storage.from_model": {"kind": "routine", "realname": "from_model", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.from_model"}, "machinable.storage.storage.Storage.from_storage": {"kind": "routine", "realname": "from_storage", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.from_storage"}, "machinable.storage.storage.Storage.get": {"kind": "routine", "realname": "get", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.get"}, "machinable.storage.storage.Storage.instance": {"kind": "routine", "realname": "instance", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.instance"}, "machinable.storage.storage.Storage.is_mounted": {"kind": "routine", "realname": "is_mounted", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.is_mounted"}, "machinable.storage.storage.Storage.local_directory": {"kind": "routine", "realname": "local_directory", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.local_directory"}, "machinable.storage.storage.Storage.make": {"kind": "routine", "realname": "make", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.make"}, "machinable.storage.storage.Storage.mark_started": {"kind": "routine", "realname": "mark_started", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.mark_started"}, "machinable.storage.storage.Storage.model": {"kind": "routine", "realname": "model", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.model"}, "machinable.storage.storage.Storage.mount": {"kind": "routine", "realname": "mount", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.mount"}, "machinable.storage.storage.Storage.multiple": {"kind": "routine", "realname": "multiple", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.multiple"}, "machinable.storage.storage.Storage.on_before_configure": {"kind": "routine", "realname": "on_before_configure", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_before_configure"}, "machinable.storage.storage.Storage.on_configure": {"kind": "routine", "realname": "on_configure", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_configure"}, "machinable.storage.storage.Storage.on_instantiate": {"kind": "routine", "realname": "on_instantiate", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.on_instantiate"}, "machinable.storage.storage.Storage.retrieve_element": {"kind": "routine", "realname": "retrieve_element", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_element"}, "machinable.storage.storage.Storage.retrieve_elements": {"kind": "routine", "realname": "retrieve_elements", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_elements"}, "machinable.storage.storage.Storage.retrieve_execution": {"kind": "routine", "realname": "retrieve_execution", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_execution"}, "machinable.storage.storage.Storage.retrieve_executions": {"kind": "routine", "realname": "retrieve_executions", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_executions"}, "machinable.storage.storage.Storage.retrieve_experiment": {"kind": "routine", "realname": "retrieve_experiment", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_experiment"}, "machinable.storage.storage.Storage.retrieve_experiments": {"kind": "routine", "realname": "retrieve_experiments", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_experiments"}, "machinable.storage.storage.Storage.retrieve_file": {"kind": "routine", "realname": "retrieve_file", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_file"}, "machinable.storage.storage.Storage.retrieve_group": {"kind": "routine", "realname": "retrieve_group", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_group"}, "machinable.storage.storage.Storage.retrieve_output": {"kind": "routine", "realname": "retrieve_output", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_output"}, "machinable.storage.storage.Storage.retrieve_project": {"kind": "routine", "realname": "retrieve_project", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_project"}, "machinable.storage.storage.Storage.retrieve_records": {"kind": "routine", "realname": "retrieve_records", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_records"}, "machinable.storage.storage.Storage.retrieve_related": {"kind": "routine", "realname": "retrieve_related", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_related"}, "machinable.storage.storage.Storage.retrieve_status": {"kind": "routine", "realname": "retrieve_status", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.retrieve_status"}, "machinable.storage.storage.Storage.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.serialize"}, "machinable.storage.storage.Storage.set_default": {"kind": "routine", "realname": "set_default", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.set_default"}, "machinable.storage.storage.Storage.set_model": {"kind": "routine", "realname": "set_model", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.set_model"}, "machinable.storage.storage.Storage.singleton": {"kind": "routine", "realname": "singleton", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.singleton"}, "machinable.storage.storage.Storage.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.unserialize"}, "machinable.storage.storage.Storage.update_heartbeat": {"kind": "routine", "realname": "update_heartbeat", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage.update_heartbeat"}, "machinable.storage.storage.Storage": {"kind": "class", "realname": "Storage", "name": "machinable.storage.storage", "path": "machinable.storage.storage.Storage", "parents": ["machinable.element.Connectable", "machinable.element.Element"]}, "machinable.storage.storage": {"kind": "module", "name": "machinable.storage.storage", "path": "machinable.storage.storage"}, "machinable.testing.storage_tests": {"kind": "routine", "realname": "storage_tests", "name": "machinable.testing", "path": "machinable.testing.storage_tests"}, "machinable.testing": {"kind": "module", "name": "machinable.testing", "path": "machinable.testing"}, "machinable.types": {"kind": "module", "name": "machinable.types", "path": "machinable.types"}, "machinable.utils.Events.get_all_handlers": {"kind": "routine", "realname": "get_all_handlers", "name": "machinable.utils", "path": "machinable.utils.Events.get_all_handlers"}, "machinable.utils.Events.get_handlers": {"kind": "routine", "realname": "get_handlers", "name": "machinable.utils", "path": "machinable.utils.Events.get_handlers"}, "machinable.utils.Events.heartbeats": {"kind": "routine", "realname": "heartbeats", "name": "machinable.utils", "path": "machinable.utils.Events.heartbeats"}, "machinable.utils.Events.is_registered": {"kind": "routine", "realname": "is_registered", "name": "machinable.utils", "path": "machinable.utils.Events.is_registered"}, "machinable.utils.Events.off": {"kind": "routine", "realname": "off", "name": "machinable.utils", "path": "machinable.utils.Events.off"}, "machinable.utils.Events.on": {"kind": "routine", "realname": "on", "name": "machinable.utils", "path": "machinable.utils.Events.on"}, "machinable.utils.Events.once": {"kind": "routine", "realname": "once", "name": "machinable.utils", "path": "machinable.utils.Events.once"}, "machinable.utils.Events.trigger": {"kind": "routine", "realname": "trigger", "name": "machinable.utils", "path": "machinable.utils.Events.trigger"}, "machinable.utils.Events": {"kind": "class", "realname": "Events", "name": "machinable.utils", "path": "machinable.utils.Events", "parents": ["observable.core.Observable"]}, "machinable.utils.Jsonable.as_json": {"kind": "routine", "realname": "as_json", "name": "machinable.utils", "path": "machinable.utils.Jsonable.as_json"}, "machinable.utils.Jsonable.clone": {"kind": "routine", "realname": "clone", "name": "machinable.utils", "path": "machinable.utils.Jsonable.clone"}, "machinable.utils.Jsonable.from_json": {"kind": "routine", "realname": "from_json", "name": "machinable.utils", "path": "machinable.utils.Jsonable.from_json"}, "machinable.utils.Jsonable.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.utils", "path": "machinable.utils.Jsonable.serialize"}, "machinable.utils.Jsonable.unserialize": {"kind": "routine", "realname": "unserialize", "name": "machinable.utils", "path": "machinable.utils.Jsonable.unserialize"}, "machinable.utils.Jsonable": {"kind": "class", "realname": "Jsonable", "name": "machinable.utils", "path": "machinable.utils.Jsonable", "parents": ["builtins.object"]}, "machinable.utils.Mixin": {"kind": "class", "realname": "Mixin", "name": "machinable.utils", "path": "machinable.utils.Mixin", "parents": ["builtins.object"]}, "machinable.utils.apply_seed": {"kind": "routine", "realname": "apply_seed", "name": "machinable.utils", "path": "machinable.utils.apply_seed"}, "machinable.utils.as_color": {"kind": "routine", "realname": "as_color", "name": "machinable.utils", "path": "machinable.utils.as_color"}, "machinable.utils.decode_experiment_id": {"kind": "routine", "realname": "decode_experiment_id", "name": "machinable.utils", "path": "machinable.utils.decode_experiment_id"}, "machinable.utils.encode_experiment_id": {"kind": "routine", "realname": "encode_experiment_id", "name": "machinable.utils", "path": "machinable.utils.encode_experiment_id"}, "machinable.utils.find_installed_extensions": {"kind": "routine", "realname": "find_installed_extensions", "name": "machinable.utils", "path": "machinable.utils.find_installed_extensions"}, "machinable.utils.find_subclass_in_module": {"kind": "routine", "realname": "find_subclass_in_module", "name": "machinable.utils", "path": "machinable.utils.find_subclass_in_module"}, "machinable.utils.generate_experiment_id": {"kind": "routine", "realname": "generate_experiment_id", "name": "machinable.utils", "path": "machinable.utils.generate_experiment_id"}, "machinable.utils.generate_nickname": {"kind": "routine", "realname": "generate_nickname", "name": "machinable.utils", "path": "machinable.utils.generate_nickname"}, "machinable.utils.generate_seed": {"kind": "routine", "realname": "generate_seed", "name": "machinable.utils", "path": "machinable.utils.generate_seed"}, "machinable.utils.get_commit": {"kind": "routine", "realname": "get_commit", "name": "machinable.utils", "path": "machinable.utils.get_commit"}, "machinable.utils.get_diff": {"kind": "routine", "realname": "get_diff", "name": "machinable.utils", "path": "machinable.utils.get_diff"}, "machinable.utils.get_root_commit": {"kind": "routine", "realname": "get_root_commit", "name": "machinable.utils", "path": "machinable.utils.get_root_commit"}, "machinable.utils.import_from_directory": {"kind": "routine", "realname": "import_from_directory", "name": "machinable.utils", "path": "machinable.utils.import_from_directory"}, "machinable.utils.is_valid_module_path": {"kind": "routine", "realname": "is_valid_module_path", "name": "machinable.utils", "path": "machinable.utils.is_valid_module_path"}, "machinable.utils.is_valid_variable_name": {"kind": "routine", "realname": "is_valid_variable_name", "name": "machinable.utils", "path": "machinable.utils.is_valid_variable_name"}, "machinable.utils.iskeyword": {"kind": "routine", "realname": "__contains__", "name": "machinable.utils", "path": "machinable.utils.iskeyword"}, "machinable.utils.load_file": {"kind": "routine", "realname": "load_file", "name": "machinable.utils", "path": "machinable.utils.load_file"}, "machinable.utils.random_str": {"kind": "routine", "realname": "random_str", "name": "machinable.utils", "path": "machinable.utils.random_str"}, "machinable.utils.resolve_at_alias": {"kind": "routine", "realname": "resolve_at_alias", "name": "machinable.utils", "path": "machinable.utils.resolve_at_alias"}, "machinable.utils.save_file": {"kind": "routine", "realname": "save_file", "name": "machinable.utils", "path": "machinable.utils.save_file"}, "machinable.utils.serialize": {"kind": "routine", "realname": "serialize", "name": "machinable.utils", "path": "machinable.utils.serialize"}, "machinable.utils.timestamp_to_directory": {"kind": "routine", "realname": "timestamp_to_directory", "name": "machinable.utils", "path": "machinable.utils.timestamp_to_directory"}, "machinable.utils.unflatten_dict": {"kind": "routine", "realname": "unflatten_dict", "name": "machinable.utils", "path": "machinable.utils.unflatten_dict"}, "machinable.utils.update_dict": {"kind": "routine", "realname": "update_dict", "name": "machinable.utils", "path": "machinable.utils.update_dict"}, "machinable.utils": {"kind": "module", "name": "machinable.utils", "path": "machinable.utils"}}'),Bn={...Op,enhanceApp({app:e}){e.config.globalProperties.$pydocData=Gp,e.component("Pydoc",Xr),e.component("Tree",Dp)}};function Up(e,n){let a=[],t=!0;const i=l=>{if(t){t=!1;return}a.forEach(o=>document.head.removeChild(o)),a=[],l.forEach(o=>{const c=Kp(o);document.head.appendChild(c),a.push(c)})};Dn(()=>{const l=e.data,o=n.value,c=l&&l.description,r=l&&l.frontmatter.head||[];document.title=oo(o,l),document.querySelector("meta[name=description]").setAttribute("content",c||o.description),i(mm(o.head,Wp(r)))})}function Kp([e,n,a]){const t=document.createElement(e);for(const i in n)t.setAttribute(i,n[i]);return a&&(t.innerHTML=a),t}function qp(e){return e[0]==="meta"&&e[1]&&e[1].name==="description"}function Wp(e){return e.filter(n=>!qp(n))}const pt=new Set,ko=()=>document.createElement("link"),Jp=e=>{const n=ko();n.rel="prefetch",n.href=e,document.head.appendChild(n)},Yp=e=>{const n=new XMLHttpRequest;n.open("GET",e,n.withCredentials=!0),n.send()};let Sa;const Qp=Me&&(Sa=ko())&&Sa.relList&&Sa.relList.supports&&Sa.relList.supports("prefetch")?Jp:Yp;function Xp(){if(!Me||!window.IntersectionObserver)return;let e;if((e=navigator.connection)&&(e.saveData||/2g/.test(e.effectiveType)))return;const n=window.requestIdleCallback||setTimeout;let a=null;const t=()=>{a&&a.disconnect(),a=new IntersectionObserver(l=>{l.forEach(o=>{if(o.isIntersecting){const c=o.target;a.unobserve(c);const{pathname:r}=c;if(!pt.has(r)){pt.add(r);const h=co(r);Qp(h)}}})}),n(()=>{document.querySelectorAll("#app a").forEach(l=>{const{target:o,hostname:c,pathname:r}=l,h=r.match(/\.\w+$/);h&&h[0]!==".html"||o!=="_blank"&&c===location.hostname&&(r!==location.pathname?a.observe(l):pt.add(r))})})};Oe(t);const i=gn();tn(()=>i.path,t),_n(()=>{a&&a.disconnect()})}const Zp=z({setup(e,{slots:n}){const a=_e(!1);return Oe(()=>{a.value=!0}),()=>a.value&&n.default?n.default():null}});function ef(){if(Me){const e=new Map;window.addEventListener("click",n=>{var t;const a=n.target;if(a.matches('div[class*="language-"] > button.copy')){const i=a.parentElement,l=(t=a.nextElementSibling)==null?void 0:t.nextElementSibling;if(!i||!l)return;const o=/language-(shellscript|shell|bash|sh|zsh)/.test(i.classList.toString());let{innerText:c=""}=l;o&&(c=c.replace(/^ *(\$|>) /gm,"")),nf(c).then(()=>{a.classList.add("copied"),clearTimeout(e.get(a));const r=setTimeout(()=>{a.classList.remove("copied"),a.blur(),e.delete(a)},2e3);e.set(a,r)})}})}}async function nf(e){try{return navigator.clipboard.writeText(e)}catch{const n=document.createElement("textarea"),a=document.activeElement;n.value=e,n.setAttribute("readonly",""),n.style.contain="strict",n.style.position="absolute",n.style.left="-9999px",n.style.fontSize="12pt";const t=document.getSelection(),i=t?t.rangeCount>0&&t.getRangeAt(0):null;document.body.appendChild(n),n.select(),n.selectionStart=0,n.selectionEnd=e.length,document.execCommand("copy"),document.body.removeChild(n),i&&(t.removeAllRanges(),t.addRange(i)),a&&a.focus()}}const vo=Bn.NotFound||(()=>"404 Not Found"),af=z({name:"VitePressApp",setup(){const{site:e}=me();return Oe(()=>{tn(()=>e.value.lang,n=>{document.documentElement.lang=n},{immediate:!0})}),Xp(),ef(),Bn.setup&&Bn.setup(),()=>Ia(Bn.Layout)}});function tf(){const e=of(),n=lf();n.provide(mo,e);const a=hm(e.route);return n.provide(ro,a),n.provide("NotFound",vo),n.component("Content",pm),n.component("ClientOnly",Zp),Object.defineProperty(n.config.globalProperties,"$frontmatter",{get(){return a.frontmatter.value}}),Bn.enhanceApp&&Bn.enhanceApp({app:n,router:e,siteData:Un}),{app:n,router:e,data:a}}function lf(){return Wr(af)}function of(){let e=Me,n;return dm(a=>{let t=co(a);return e&&(n=t),(e||n===t)&&(t=t.replace(/\.js$/,".lean.js")),Me&&(e=!1),nm(()=>import(t),[])},vo)}if(Me){const{app:e,router:n,data:a}=tf();n.go().then(()=>{Up(n.route,a.site),e.mount("#app")})}export{Xr as P,V as _,x as a,Re as b,f as c,tf as createApp,w as d,cr as e,u as o,on as r,F as w};
