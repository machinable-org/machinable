import{_ as a,o as e,c as t,d}from"./app.72a1cf59.js";const o="/assets/logo.9895b1a3.png";const m=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"machinable","text":"research code","tagline":"A modular system to manage research code effectively so you can move quickly while enabling reuse and collaboration.","image":{"src":"/logo/logo.png","alt":"machinable-logo"},"actions":[{"theme":"brand","text":"Get Started","link":"/tutorial/introduction"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/machinable-org/machinable"}]},"features":[{"icon":"üõ†Ô∏è","title":"Unified representation","details":"Run code and inspect results using the same abstraction. Check out the example below ‚è¨"},{"icon":"‚ö°Ô∏è","title":"Designed for rapid iteration","details":"Spend more time experimenting while relying on machinable to keep things organized."},{"icon":"üí°","title":"Hackable and interactive","details":"Tweak, extend, override while leveraging first-class support for Jupyter as well as the CLI."}]},"headers":[],"relativePath":"index.md"}'),n={name:"index.md"},s=d('<br data-v-9b95d993><br data-v-9b95d993><br data-v-9b95d993><br data-v-9b95d993><section id="pitch" data-v-9b95d993><div class="container" data-v-9b95d993><div class="top" data-v-9b95d993><span class="first dot" data-v-9b95d993></span><span class="second dot" data-v-9b95d993></span><span class="third dot" data-v-9b95d993></span> ¬† üíª </div><div class="content" data-v-9b95d993><div class="info custom-block" data-v-9b95d993><p class="custom-block-title" data-v-9b95d993>Some research code</p><p data-v-9b95d993>Running code ...</p><p data-v-9b95d993><code data-v-9b95d993>python regression.py --rate=0.1 --logs=1 --name=run-01</code></p><p data-v-9b95d993>... and loading the corresponding results ...</p><p data-v-9b95d993><code data-v-9b95d993>python plot_regression_result.py --experiment=run-01</code></p><p data-v-9b95d993>... are distinct and often highly redundant.</p><p data-v-9b95d993>This forces you to worry whether <code data-v-9b95d993>rate=0.1</code> was called <code data-v-9b95d993>run-01</code> or <code data-v-9b95d993>run-02</code>.</p></div><br data-v-9b95d993><div class="tip custom-block" data-v-9b95d993><p class="custom-block-title" data-v-9b95d993>machinable research code</p><p data-v-9b95d993>Running code ...</p><p data-v-9b95d993><code data-v-9b95d993>get(&quot;regression&quot;, {&quot;rate&quot;:0.1, &quot;logs_&quot;: True}).launch()</code></p><p data-v-9b95d993>... and loading the corresponding results ...</p><p data-v-9b95d993><code data-v-9b95d993>get(&quot;regression&quot;, {&quot;rate&quot;:0.1, &quot;logs_&quot;: True}).launch()</code></p><p data-v-9b95d993>... are distinct but use the exact same abstraction.</p><p data-v-9b95d993>This works as machinable keeps track if you ran <code data-v-9b95d993>regression</code> with <code data-v-9b95d993>rate=0.1</code> before - no need to worry about names.</p></div><br data-v-9b95d993><p data-v-9b95d993>‚û°Ô∏è <a href="./idea.html" data-v-9b95d993>Learn more about machinable&#39;s approach</a></p></div></div></section><br data-v-9b95d993><br data-v-9b95d993><br data-v-9b95d993><img src="'+o+'" style="width:64px;margin:0 auto;" alt="logo" data-v-9b95d993>',9),i=[s];function r(c,l,b,p,v,u){return e(),t("div",null,i)}const _=a(n,[["render",r],["__scopeId","data-v-9b95d993"]]);export{m as __pageData,_ as default};
