import{_ as e,o as a,c as t,a as d}from"./app.50325a60.js";const o="/assets/logo.9895b1a3.png";const u=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"machinable","text":"research code","tagline":"A modular system to manage research code effectively so you can move quickly while enabling reuse and collaboration.","image":{"src":"/logo/logo.png","alt":"machinable-logo"},"actions":[{"theme":"brand","text":"Get Started","link":"/tutorial/introduction"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/machinable-org/machinable"}]},"features":[{"icon":"üõ†Ô∏è","title":"Unified representation","details":"Run code and inspect results using the same abstraction. Check out the example below ‚è¨"},{"icon":"‚ö°Ô∏è","title":"Designed for rapid iteration","details":"Spend more time experimenting while relying on machinable to keep things organized."},{"icon":"üí°","title":"Hackable and interactive","details":"Tweak, extend, override while leveraging first-class support for Jupyter as well as the CLI."}]},"headers":[],"relativePath":"index.md"}'),n={name:"index.md"},s=d('<br data-v-b7d17be7><br data-v-b7d17be7><br data-v-b7d17be7><br data-v-b7d17be7><section id="pitch" data-v-b7d17be7><div class="container" data-v-b7d17be7><div class="top" data-v-b7d17be7><span class="first dot" data-v-b7d17be7></span><span class="second dot" data-v-b7d17be7></span><span class="third dot" data-v-b7d17be7></span> ¬† üíª </div><div class="content" data-v-b7d17be7><div class="info custom-block" data-v-b7d17be7><p class="custom-block-title" data-v-b7d17be7>Some research code</p><p data-v-b7d17be7>Running code ...</p><p data-v-b7d17be7><code data-v-b7d17be7>python regression.py --rate=0.1 --logs=1 --name=run-01</code></p><p data-v-b7d17be7>... and loading the corresponding results ...</p><p data-v-b7d17be7><code data-v-b7d17be7>python plot_regression_result.py --experiment=run-01</code></p><p data-v-b7d17be7>... are distinct and often redundant.</p><p data-v-b7d17be7>This means you have to manually keep track by remembering what the experiment with <code data-v-b7d17be7>rate=0.1</code> was called.</p></div><br data-v-b7d17be7><div class="tip custom-block" data-v-b7d17be7><p class="custom-block-title" data-v-b7d17be7>machinable research code</p><p data-v-b7d17be7>Running code ...</p><p data-v-b7d17be7><code data-v-b7d17be7>machinable regression rate=0.1 logs_=True --launch</code></p><p data-v-b7d17be7>... and loading the corresponding results ...</p><p data-v-b7d17be7><code data-v-b7d17be7>machinable regression rate=0.1 logs_=True --plot</code></p><p data-v-b7d17be7>... are distinct but use the same abstraction.</p><p data-v-b7d17be7>This means no need to worry about names as machinable automatically keeps track if you ran <code data-v-b7d17be7>rate=0.1</code> before.</p></div><br data-v-b7d17be7><p data-v-b7d17be7>‚û°Ô∏è <a href="./about/approach.html" data-v-b7d17be7>Learn more about machinable&#39;s approach</a></p></div></div></section><br data-v-b7d17be7><br data-v-b7d17be7><br data-v-b7d17be7><img src="'+o+'" style="width:64px;margin:0 auto;" alt="logo" data-v-b7d17be7>',9),b=[s];function i(r,c,l,p,v,m){return a(),t("div",null,b)}const _=e(n,[["render",i],["__scopeId","data-v-b7d17be7"]]);export{u as __pageData,_ as default};
