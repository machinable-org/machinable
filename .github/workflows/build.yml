name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set up cache
        id: cached-poetry-dependencies
        uses: actions/cache@v3.0.9
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --extras "all"
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: black formatting check
        run: |
          source .venv/bin/activate
          black --config pyproject.toml --check ./
      - name: pyuprade check
        run: |
          source .venv/bin/activate
          pyupgrade --py37-plus
      - name: isort check
        run: |
          source .venv/bin/activate
          isort . --settings-path pyproject.toml --check
      - name: editorconfig check
        run: |
          source .venv/bin/activate
          ec
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest
